{"index":{"version":"0.5.12","fields":[{"name":"title","boost":10},{"name":"keywords","boost":15},{"name":"body","boost":1}],"ref":"url","documentStore":{"store":{"./":["3种做法，整理成gitbook方便自己查阅，也希望能与小伙伴们共同刷题共同进步。","algorithm","introduct","小仙女算法修仙之路","本gitbook是按刷题的tag分类，全书用java实现，一般每个题里都有2","本书github地址：https://github.com/lmtsunnie/gitbook","联系邮箱：lmtsunnie@163.com"],"Array/leetcode1.html":["(int","*","*/","+","/*","/*=====================================================================================*/","0;","11,","15],","1].","2","7","7,","9,","=","[0,","[2,","add","array","array;","assum","class","each","element","exactli","example:","given","hashmap<>();","i)","import","indic","input","int","int[]","int[]{i,","integers,","java.util.hashmap;","java.util.map;","leetcode1","leetcode1twosum","map","map.get(remain)};","new","null;","num","number","nums)","nums,","nums[0]","nums[1]","on","packag","public","remain;","return","same","solution,","specif","static","store(int[]","store(nums);","such","sum","target","target)","target.","twice.","two","twosum1(int[]","twosum2(int[]","twosum3(int[]","up","us","{","}","一个输入有且仅有一个输出，一个元素最多只能用一次","只需要遍历一遍，对于每一个num算出remain，把remain作为k在map中查有没有这个","如果有将index返回","存储所有的","插入map","时间复杂度o(n)，空间复杂度o(n)","时间复杂度o(n²),空间复杂度o(1)","最简单的做法，根据每一个数再遍历一次","自想1："],"Array/leetcode11.html":["(blue","(hi","(i,","(lo","(num","(nums[lo]","*","*/",",","...,","/*=====================================================================================*/","/*solution区方法2：","/*自想1：","0).","0,","1","1;","2.","49","49.",":","=","==","?","[1,8,6,2,5,4,8,3,7]","[1,8,6,2,5,4,8,3,7].","a1,","a2,","abov","ai)","ai).","area","array","array;","axi","case,","class","contain","container,","containmaxwater1(int[]","containmaxwater2(int[]","coordin","drawn","each","endpoint","example:","find","form","given","hi","hi的起始值分别为0,n","input:","int","integ","leetcode11","leetcode11containerwithmostwat","line","lines,","lo","lo)","lo,","max","maxwat","maxwater;","min","n","neg","non","note:","null","nums)","nums.length","output:","packag","point","public","repres","return","section)","slant","static","such","togeth","two","vertic","water","water.","x","{","||","}","把首末点分别定为lo,hi，每次比较求出最大的maxwat","时间复杂度o(n²)，空间复杂度o(1)","距离在缩短，只有移动短的才可能将min(nums[i],nums[j])增大，从而将maxwater增大","遍历一遍，时间复杂度o(n)，空间复杂度o(1)"],"Array/leetcode26.html":["!=","#includ","(;","(int","(nums.size()","*","*/","/*","/*=====================================================================================*/","0)","0,","0;","1","1,","1:","1;","2","2,","2:","3,","4","5,","=","==","[0,0,1,1,1,2,2,3,3,4],","[1,1,2],","alloc","anoth","appear","array","array,","array;","array[]","be","beyond","c++：","class","doesn't","duplic","each","element","exampl","extra","first","five","function","given","input","int","j","java：","j遍历完，由于题目说了后面的数不用管，函数直接返回i的大小","leav","leetcode26","leetcode26removeduplicatesfromsortedarray","length","length.","matter","memory.","modifi","namespac","new","num","nums)","nums,","nums;","nums[i]那么把j位置的数赋值给++i位置的数（++i位置是重复的位置，覆盖也没关系）","o(1)","onc","packag","place","public","remov","removeduplicates(vector&","removeduplicatesfromsortedarray(int[]","respectively.","return","set","sizeof(array)/","sizeof(array[0]);","sort","space","static","std;","such","two","us","valu","{","{0,0,1,1,1,2,2,3,3,4};","如果nums[j]","由于数组是已经排好序的，用j遍历数组，用i存储不重复的元素。j从1开始，i从0开始。","自想1："],"Array/leetcode33.html":["(i.e.,","(lo","(num","(nums[mid]","(target","*","*/","+","/**","//","0","0,","1","1);","1,","1.","1:","1;","2:","3","4","8));",":","=","==",">",">=","?","[0,1,2,4,5,6,7]","[4,5,6,7,0,1,2]).","[4,5,6,7,0,1,2],","algorithm'","args)","array","array.","array;","ascend","assum","becom","beforehand.","binarysearch(int[]","binarysearch(nums,","class","complex","duplic","exampl","exist","findminindex(int[]","found","given","hi","hi,","hi：最小值在右半部分，不可能是自己了","index,","input:","int","int[]","leetcode33","leetcode33searchinrotatedsortedarray","lo","lo,","lo;","main(string[]","mid","mid;","n).","null","num","nums)","nums,","nums.length","nums[0])","nums[hi])","nums[mid])","o(log","order","otherwis","output:","packag","pivot","public","return","rotat","runtim","search","search(int[]","search.","smallnumindex","smallnumindex,","sort","static","suppos","system.out.println(findminindex(nums));","system.out.println(search(nums,","target","target)","target);","unknown","valu","void","{","{4,5,6,7,8,1,2,3};","||","}","二分查找的思想：二分查找总结","时间复杂度o(nlogn)，空间复杂度o(1)","讨论区：分成3种情况查找，主要是找到minindex"],"Array/leetcode34.html":["\"","&&","(int","(leftindex","(num","(nums[i]",")","*","*/","+","/**","//","0","0)","0;","1)","1);","1,","1.2","1:","1;","1]","1].","1};","1。","1，但是最后在右半段没有找到更大的，target","2,","2:","3,","4);","4,","5,","5};","6","6,","7,","8","8,","9};",":","=","==",">","[","[3,4]","[5,7,7,8,8,10],","algorithm'","args)","array","array,","array;","ascend","break;","class","complex","element","end","exampl","find","findleftindex(int[]","findleftindex(nums,","findrightindex(nums,","first","found","given","hi","i;","input:","int","int[]","integ","last","leetcode34","leetcode34findfirstandlastpositionofelementinsortedarray","leftindex","leftindex;","main(string[]","mid","n).","null","num","nums,","nums.length","nums1","nums2","nums3","nums[hi]","nums[mid]，target在右半段，","nums中不存在值为target的数","o(log","order","order,","output:","packag","posit","public","re","res1","res1[1]);","res2","res2[1]);","res3","res3[1]);","res;","res[0]","res[1]","return","runtim","searchrange(int[]","searchrange2(int[]","searchrange2(nums1,","searchrange2(nums2,","searchrange2(nums3,","sort","start","static","system.out.println(res1[0]","system.out.println(res2[0]","system.out.println(res3[0]","target","target)","target);","target?","value.","void","{","{1,","{1,2,2,2,4,8,10}，查找2，返回第一个2的下标1；","||","}","例：int[]","加一个判断条件变成第一个等于某个数的下标","如果target==nums[mid]，虽然lo","方法2参见：二分查找总结","时间复杂度o(logn)，空间复杂度o(1)","时间复杂度o(n)，空间复杂度o(1)","查找3，返回4的下标4；查找4，返回4的下标4。如果没有大于等于target的元素，返回","查找第一个大于等于某个数的下标","自想1：利用nums已经是有序的，正向搜找到第一个，反向搜找到最后一个","自想2：二分查找"],"Array/leetcode35.html":["!=","(hi","(lo","(target","*","*/","+","/","/*","/*=====================================================================================*/","/*if","//","0","0));","0,","1","1,","1:","1;","2","2));","2:","2;","3:","4","4:","5","5));","7","7));",":","=","==",">","?","[1,3,5,6],","args)","array","array.","array;","assum","binarysearch(int[]","binarysearch(nums,","class","duplic","exampl","found.","given","hi","hi)","hi,","index","input:","insert","int","int[]","int[]{1,3,5,6};","leetcode35","leetcode35searchinsertionposit","lo","lo)","lo,","lo;","lo;*/","main(string[]","mid","mid;","new","not,","num","nums,","nums.length","nums[lo]","nums[lo])","nums[mid])","order.","output:","packag","posit","public","return","search","searchinsertionposition1(int[]","searchinsertionposition2(int[]","sort","static","system.out.println(searchinsertionposition1(nums,","system.out.println(searchinsertionposition2(nums,","target","target)","target);","target在前半段","value,","void","{","}","只剩一个数，如果大于它则插在它后面，返回它的坐标+1","时间复杂度o(logn)，空间复杂度o(1)","注意到数组是有序的，且没有重复元素，想到用二分查找","等于它返回它的坐标，小于它代替它的位置也是返回它的坐标","自想1：二分查找递归版","讨论区：二分搜索迭代版"],"Array/leetcode39.html":["\"","\");","(arraylist","(candidates)","(includ","(int","(int[]","(integ","(list","(remain","(target),","(tmplist));","(without","+","/*=====================================================================================*/","/*讨论区：","//","//lists2.add(tmplist);","0,","1:","2:","7,","8,",":","=","[","[2,2,2,2],","[2,2,3]","[2,3,3],","[2,3,5],","[2,3,6,7],","[3,5]","[7],","]","args)","array","array)","arraylist","arraylist(arrays.aslist(1,2,3,4)));","arraylist(arrays.aslist(4,5,6)));","arraylist(arrays.aslist(7,8)));","arraylist)","arraylist<>(),","arraylist<>();","arraylist<>(tmplist));","arraylist>","arraylists)","arraylists.add(new","arrays)","arrays.sort(nums);","backtrack(list,","backtrack(list>","backtracking;","candid","chosen","class","combin","combinations.","combinationsum(int[]","contain","duplic","duplicates)","exampl","find","format.printdoublearraylist.printdoublelist;","format;","given","import","input:","int","int[]","integers.","is:","java.util.arraylist;","java.util.arrays;","java.util.list;","leetcode39","leetcode39combinationsum","list","list)","list,","list;","list>","lists)","lists.add(arrays.aslist(1,2));","lists.add(arrays.aslist(4,5,6));","lists.add(arrays.aslist(7,8,9,10));","lists2","lists2.add(new","main(string[]","new","note:","number","nums,","packag","posit","printdoublearray(int[][]","printdoublearraylist","printdoublearraylist(arraylist>","printdoublearraylist(arraylists);","printdoublelist(list>","printdoublelist(lists);","printdoublelist(lists2);","public","remain)","repeat","return","same","set","solut","start,","start;","static","sum","system.out.print(i","system.out.println(\"======================================\");","system.out.println(\"=======================================\");","system.out.println();","target","target)","target);","target.","times.","tmplist","tmplist,","tmplist.add(1);","tmplist.add(2);","tmplist.add(3);","tmplist.add(4);","tmplist.add(5);","tmplist.clear();","uniqu","unlimit","void","{","}","不sort也可以，没说tmplist中的数要按大小顺序排列","打印函数：","找到了一个符合要求的tmplist之后不会再在tmplist上添加","自己没有考虑到remain>","输出4545，因为后面tmplist改变了，只能把副本装进去，不能把自己装进去"],"Array/leetcode53.html":["(contain","(int","(lo","(max",")","*","*/","+","+=","/","/*","/*=====================================================================================*/","/*divid","//","0,","0;","1);","1,","1,2,1,","1,2,1]","1;","1];","2,1,","2;","2t(n/2)","3,4,","5,4],","6","6.",":","=","==",">=","[","[4,","anoth","approach,","array","array;","base","case是左边或右边只有一个数，求一个数的maxsub必然是自己","class","code","conquer","conquer:","contigu","divid","example:","explanation:","figur","find","follow","given","hi)","hi);","hi,","input:","int","integ","integer.min_value;","j","largest","leetcode53","leetcode53maximumsubarray","lo,","logn","logn切分点，每个切分点有o(1)个要保留的参数(nums入口,lo,hi...)","master公式，d=1,a=b=2,d=logba=1","math.max(math.max(maxsubleft,","math.max(max,","math.max(maxsubleft,","math.max(maxtmp","max","max(maxtmp","max(maxtmp,","max)","max;","maximum","maximumsubarray1(int[]","maximumsubarray2(int[]","maximumsubarraypart(int[]","maximumsubarraypart(nums,","maxsubcrossmid","maxsubcrossmid(int[]","maxsubcrossmid(nums,","maxsubcrossmid);","maxsubcrossmid;","maxsubcrossmid分为求左边以nums[mid]结束的sub的最大值，右边以nums[mid+1]开始的sub的最大值","maxsubleft","maxsubleft)","maxsubleft;","maxsubright","maxsubright)","maxsubright),","maxsubright;","maxtmp","maxtmp);","mid","mid)","mid);","more","nlogn","num","num);","num,","number)","nums)","nums,","nums.length","nums[i];","nums[lo];","nums[mid","nums[mid],","n的logba次方","o(n)","on","out","output:","packag","privat","public","return","solut","solution,","static","subarray","subarray/","subtle.","sum","sum.","t(n)","tmpsubleft","tmpsubleft);","tmpsubright","tri","up:","us","x，x)","{","}","三者最大值","关于中间的怎么处理自己没想到通过是否跨越来分","再求跨越中间点的maxsubcrossmid","前面一段的maxcur要是是负数，还不如不要前面那段以当前值作为起始","参考https://www.geeksforgeeks.org/divid","取max为三者最大值返回","固定一端的最大子数列问题","扫描一次整个数列的所有数值，在每一个扫描点计算以该点数值为结束点的子数列的最大和（正数和）。","时间复杂度o(n)","时间复杂度o(n)，空间复杂度o(1)","求左边的maxsubleft再求右边的maxsubright,","相加即为所求","空间复杂度logn","自想1：利用昨天写的leetcode121中提到的kadane算法","该子数列由两部分组成：【以前一个位置为结束点】的最大子数列、该位置的数值。"],"Array/leetcode56.html":["(interv","(res.isempty()","*","*/","/**","0;","1:","2:",":","=","==","@overrid","[1,3]","[1,4]","[1,6].","[2,6]","[4,5]","[[1,3],[2,6],[8,10],[15,18]]","[[1,4],[4,5]]","[[1,5]]","[[1,6],[8,10],[15,18]]","array;","class","collect","common.interval;","compar","compare(interv","consid","definit","e)","e;","end","end;","exampl","explanation:","for循环o(n)","given","implement","import","input:","int","integer.compare(o1.start,","interv","interval()","interval(int","interval.","intervalcompar","intervals)","intervals,","intervals.","intervals.size()","java.util.*;","leetcode56","leetcode56mergeinterv","linkedlist<>();","list","merg","merge(list","new","null","o(nlogn)，空间复杂度o(1)","o1,","o2)","o2.start);","output:","overlap","overlapping.","overlaps,","packag","privat","public","re","res.getlast().end","res存储结果，(因为增删多所以用linkedlist而不用arraylist)","return","s,","s;","start","start;","{","||","}","先把intervals按start从小到大排序，然后用linkedlist","如果没有重叠，直接将res.add(interval)","时间复杂度：排序o(nlogn)+","答案区方法2：","遍历intervals，每次拿res.getlast().end和interval.start比较，如果有重叠则更新res.getlast().end"],"Array/leetcode64.html":["(int","*","*/","/*=====================================================================================*/","/*自想1：动态规划背包问题：","//","0","1;","1→3→1→1→1","7","=","[","[1,3,1],","[1,5,1],","[4,2,1]","]","along","array;","bottom","class","curcol","curcol[0]","down","example:","explanation:","fill","find","format.printmatrix.printmatrix;","given","grid","import","input:","int","int[]","int[m];","leetcode64","leetcode64minimumpathsum","left","m","matrix)","matrix.length;","matrix[0].length;","matrix[0][0];","minim","minimum","minimumpathsum(int[][]","move","m为行数，即一列的个数","m行n列的矩阵","n","neg","new","non","note:","number","numbers,","output:","packag","path","path.","point","public","right","static","sum","sum.","time.","top","x","{","仅用一列来记录","时间复杂度o(n²)，空间复杂度o(n)","第0列,j"],"Array/leetcode75.html":["(num","*","*/","/*=====================================================================================*/","/*自想：荷兰国旗问题","0's,","0,","1'","1's,","1,","2","2's,","2's.","==","[0,0,1,1,2,2]","[2,0,2,1,1,0]","adjacent,","algorithm","array","array;","blue","blue,","blue.","class","color","come","constant","count","example:","first,","follow","format.printarray.printarray;","forward","function","given","here,","import","input:","integ","iter","leetcode75","leetcode75sortcolor","library'","n","note:","null","number","nums)","nums.length","object","on","order","output:","overwrit","packag","partition过程看成向小于区域和大于区域发货","pass","place","problem.","public","red,","repres","respectively.","same","solut","sort","sort.","sortcolor","sortcolors(int[]","space?","static","straight","suppos","total","two","up","up:","us","void","white","white,","{","||","时间复杂度o(n),空间复杂度o(1)"],"Array/leetcode121.html":["(i.e.,","(int","(price","*/","+","/*","/*=====================================================================================*/","0","0)","0,","0.","0;","1","1)","1,","1:","1;","1]即差额相当于最大子数列中的每一个x","2","2,","2,3,","2:","2]，返回长度为0的子数列在这里就是不做股票的交易","4,","4，其连续子数列中和最大的是","5","5.","6","6),","6,","6,4,","7",":","=",">","?","[","[7,1,5,3,6,4]","[7,1,5,3,6,4],","[7,6,4,3,1]","algorithm","array","array;","befor","best","besttime1(int[]","besttime2(int[]","besttime3(int[]","buy","case,","class","complet","day","design","discuss区看到的：","done,","element","exampl","explanation:","find","for(int","given","i.","i.e.","input:","int","integer.max_value;","ith","kadane算法：","larger","leetcode121","leetcode121besttimetosellandbuystock","max","max(maxcur","max(maxcur,","maxcur","maximum","maxprofit","maxprofit;","maxsofar","maxsofar)","minpric","minprice要求最大","need","note","on","one.","output:","packag","permit","price","price.","prices)","prices[i","prices[i]","prices[j]","profit","profit.","public","return","sell","share","solution区方法1：","solution区方法2：","static","stock","stock),","time","transact","x,","x，x)","{","}","−1,","−2,","−3,","−5,","以本题类比于最大子数列问题的变种，prices[i]","例如price","例如，对一个数列","其中要求j","其和为6。","则差额","前面一段的maxcur要是是负数，还不如不要前面那段以当前值作为起始","就算minprice出现在最后，由于最后只返回maxprofit，没有更新maxprofit还是不影响结果","扫描一次整个数列的所有数值，在每一个扫描点计算以该点数值为结束点的子数列的最大和（正数和）。","时间复杂度o(n)，空间复杂度o(1)","时间复杂度o(n²)，空间复杂度o(1)","最大子数列问题的一个变种是：如果数列中含有负数元素，允许返回长度为零的子数列。","用到了“最佳子结构”（以每个位置为终点的最大子数列都是基于其前一位置的最大子数列计算得出），可看成动态规划。","由于maxcur最小是0，如果x太小，使maxcur+x是个负数，就不要这段，取0","由于只要保证maxprofit是最大的profit就可以，maxpric","类比于最大子数列：最大子数列问题的目标是在数列的一维方向找到一个连续的子数列，使该子数列的和最大。","该子数列由两部分组成：【以前一个位置为结束点】的最大子数列、该位置的数值。","遇到每一个都比较且试图更新minprice和maxprofit","问题转化为求prices[j]−prices[i]的最大值,"],"Array/leetcode169.html":["!=","(int","(map.get(num)","*","*/","+","/","/*","/*=====================================================================================*/","/*if","/*solution区看到的：divid","/*评论区最简方法：boyer","//数num在nums[lo]","0);","0,","0;","1);","1,hi)","1:","2","2)","2:","3",":","=","==",">","?","[2,2,1,1,1,2,2]","[3,2,3]","a=2,b=2,d=1","algorithm","alway","appear","array","array.","array;","assum","candid","class","conquer","count","element","element.","empti","exampl","exist","find","given","hashmap","hashmap<>();","hi)","import","input:","int","java.util.hashmap;","leetcode169","leetcode169majorityel","left","lo,","lo;","logb(a)=d时间复杂度o(nlogn)","m","major","majorityelement1(int[]","majorityelement2(int[]","majorityelement2count(int[]","majorityelement2count(nums,","majorityelement2part(nums,","majorityelement3(int[]","map","map.get(num)","map.put(num,","map.putifabsent(num,","map.replace(num,","max","max;","mid","moor","more","n,","n/2","new","non","null)","num","num,","num;","number","number返回上一个","number，所以只要某一个num出现的次数大于n/2它就是major","nums)","nums,","nums.length","nums[0],","nums[hi]中共出现了多少次","output:","packag","public","return","right,","right;","size","static","times.","vote","{","}","⌊","⌋","如果不是同一个则分别再数两者出现的次数，返回出现次数多的那个元素作为整体的major","如果左右最多的元素是同一个则向上层返回这个结果，","对于每一个数出现的次数用一个map存储，key为数，value为该数出现的次数","左右分治找到出现次数最多的元素，","当m=0时清空这个候选人的信息，用m记录数组中的下一个候选人","无论在哪里停止，m所对应的候选人就是票数超过半数的那个major","时间复杂度master公式，t(n)=2t(n/2)+2n","时间复杂度o(n)，空间复杂度o(1)","时间复杂度o(n)，空间复杂度o(n)","时间复杂度o(nlogn)，空间复杂度o(logn)，额外空间复杂度用来记录logn个切分点","是个online的算法，随时停止能随时出结果","由于一定存在且仅有一个major","自想1：","遍历一遍，用m记录第一个候选者的票数，初始为1，如果下一个是这个候选者那就m++，如果不是则m"],"Array/leetcode238.html":["!=","(allproduct","(int","(the",")","*","*/","*=","/*","/*=====================================================================================*/","0)","0,","0,0,0,6","0;","0};","1,","1,2,3,0","1;","1]","2)","2,","2};","3,","4};",":","=",">","[1,2,3,4]","[24,12,8,6]","allproduct","analysis.)","args)","array","array;","class","complex","complexity?","constant","count","divis","element","equal","example:","except","extra","follow","format.printarray.printarray;","format;","given","import","input:","int","int[]","int[]{1,","int[]{9,","int[nums.length];","integ","leetcode238","leetcode238productofarrayexceptitself","main(string[]","n","new","note:","num","num;","nums)","nums1","nums2","nums3","nums4","nums[i].","nums[i];","o(n).","output","output:","output[i]","packag","pleas","printarray","printarray(int[]","printarray(nums1);","printarray(nums2);","printarray(nums3);","printarray(nums4);","printarray(productofarrayexceptitself1(nums1));","printarray(productofarrayexceptitself1(nums2));","printarray(productofarrayexceptitself1(nums3));","printarray(productofarrayexceptitself1(nums4));","printarray(productofarrayexceptitself2(nums1));","printarray(productofarrayexceptitself2(nums2));","printarray(productofarrayexceptitself2(nums3));","printarray(productofarrayexceptitself2(nums4));","product","product;","product[i","productofarrayexceptitself1(int[]","public","purpos","return","right","right;","solv","space","static","such","system.out.println();","up:","void","without","{","}","两个以及以上个0的时候product全为0","但是要考虑到有0的情况，一个0的时候除了这个0位置的product不为0，其他位置的product都为0","再把allproduct/nums[i]放在product[i]处","打印函数：","时间复杂度o(n)，空间复杂度o(1)","没有0的时候遍历两遍，有0的时候遍历三遍","自想1：","遍历一遍，算出所有数的积存在allproduct中"],"Array/leetcode283.html":["!=","(insertindex","(int","(num","*/","++]","/*","/*=====================================================================================*/","0'","0)","0;",":","=","==","[0,1,0,3,12]","[1,3,12,0,0]","array","array.","array;","class","copi","elements.","end","example:","function","given","input:","insertindex","int","leetcode283","leetcode283movezero","maintain","make","minim","move","movezeros(int[]","non","note:","null","num","num;","number","nums)","nums,","nums.length","nums[insertindex","operations.","order","output:","packag","place","public","rel","return;","static","total","void","without","write","zero","{","||","}","从左到右用i遍历原数组，用j记录该放到哪个位置，","初始i=0,j=0,遇到不为0的就放到j位置，j++，i遍历完成后，j后面的全补0","自想1：时间复杂度o(n)，空间复杂度o(1)"],"Array/leetcode448.html":["\"","\");","(arraylist","(int","(integ","(n","(num","(nums[index]","+","/*=====================================================================================*/","/*自己没想到，看的讨论区的：","0)","0;","1","1);","1;",":","=","==",">","[1,","[4,3,2,7,8,2,3,1]","[5,6]","a[i]","appear","array","array)","array),","array.","array;","arraylist","arraylist)","arraylist.size()","arraylist.toarray(new","arraylist<>();","assum","class","count","disappear","element","example:","extra","find","findnumbersnotappear(int[]","given","import","inclus","index","input:","int","integ","integer[]","integer[arraylist.size()]);","java.util.arraylist;","leecode448findnumbersnotappear","leetcode448","list","math.abs(num)","n","n]","new","null","null;","num","number","nums)","nums.length","nums[index]","nums[index];","o(n)","once.","other","output:","packag","printarray(int[]","public","re","res.add(i","return","return;","runtime?","size","space","space.","static","system.out.print(i","system.out.println();","twice","void","without","{","||","}","≤","因为","时间复杂度o(n)，空间复杂度o(1)"],"Array/leetcode560.html":["(int","*","*/","/*=====================================================================================*/","/*自想1：","//","0,","0;","1);","1000,","1000]","1:","1e7,","1e7].","2","20,000].","=","[","[1,","[1,1,1],","array","array;","class","continu","count","equal","exampl","find","given","hashmap<>();","import","input:","int","integ","java.util.hashmap;","java.util.map;","k","k)","k,","k.","k为小和，k为差，只要找到sum和sum","k就可以构造出和为k的subarray","leetcode560","leetcode560subarraysumequalsk","length","map","map.put(0,","need","new","note:","num","number","numofcontinuoussubarraysumequalsk1(int[]","numofcontinuoussubarraysumequalsk4(int[]","nums,","output:","packag","public","rang","static","subarray","sum","sum为大和，sum","total","whose","{","两个变量i,j分别表示subarray的首尾位置，再遍历算出[i,j]之间的和","小和为0，count也需要+1","时间复杂度o(n)，空间复杂度o(n)","时间复杂度o(n³)，不能ac，超时","，k为从头到某一个数的和，v为这个和出现的次数"],"Array/leetcode581.html":["!=","&&","(!stack.isempty()","(copy[j]","(hi","(int","(lo","(min","(nums[hi]","(nums[i]",")","*","*/","+","/*","/*=====================================================================================*/","/*for","/*solution区：","//","0","0;","10,","10,000].","15]","1:","1;","1])","2;","4,","5","6,","8,","9,","9]",":","=","==",">",">=","?","[1,","[2,","[6,","array","array,","array;","arrays.sort(nums);","ascend","break;","class","contain","continu","copi","duplicates,","exampl","explanation:","find","given","here","hi","hi);","hi;","import","input","input:","int","int[]","integ","integer.max_value)","integer.max_value,","integer.min_value;","j","j;","java.util.arrays;","java.util.stack;","leetcode581","leetcode581shortestunsortedcontinuoussubarray","length","length.","lo","lo);","lo,","make","math.max(j,","math.max(max,","math.min(i,","math.min(lo,","math.min(min,","max","max为上升中的最大值，极值点","mean","min","min)","min为下降中的最小值，极值点","need","new","note:","nums)","nums.clone();","nums.length","nums[i","nums[i])","nums[i]);","nums[j])","nums[j]且i","nums[stack.peek()]","on","order","order,","order.","output","output:","packag","public","rang","return","shortest","shortestsubarray1(int[]","shortestsubarray3(int[]","shortestsubarray4(int[]","solution区看到的改进，遍历一遍即可","solution区看到的：","sort","stack","stack.clear();","stack.pop());","stack.push(i);","stack<>();","static","subarray","subarray/solution/","such","too.","unsort","whole","{","}","}*/","不在正确位置上的数是指我作为nums[i]或nums[j]有nums[i]","从前往后遍历数组，如果是上升的就正常压入栈中，","再继续遍历剩下的数组寻找下一个下降的数，得到的插入的位置中最小的就是lo","参考https://leetcode.com/problems/shortest","参考文末图","同理反向遍历在下降的中找上升的数的插入的位置，得到的最大的位置就是hi","后三种解答参考https://leetcode.com/problems/shortest","和已经排序的数列进行对比，遍历两遍找出lo,hi","因为最小的值要插入到最前的位置如i，第i位置原有的值后移，第i位置要记入重排的区间内","如果是下降的就把栈中的数倒出来倒到合适的位置（>=栈顶）再将这个数压入栈中，记录这个数插入的位置，","找到第一个不在正确位置上的数lo和最后一个不在正确位置上的数hi","找到第一个小于max的值，则max应该在的位置是hi","时间复杂度o(n)+o(nlogn)+o(n)=o(nlogn)","时间复杂度o(n)，空间复杂度o(1)","时间复杂度o(n)，空间复杂度o(n)","没有逆序对","注意倒出的数并没有再倒回数组中，因为最终有用的是lo所以插入到lo前面来的数才需要记录，倒出的是后面的数，不需要管","用栈来模仿插入排序的过程","空间复杂度o(n)","自想1：","记录极值点，找到极值点区间内的最小和最大的坐标即为需要重排的区间","逆向时正常应该下降，但是如果上升则记录上升的值","逆着看"],"Array/找出数组中重复的数字.html":["(i","(int","(num","(number","(output)","(set.contains(num))","*","*/","*duplic","/*=====================================================================================*/","/*《剑指offer第2版》p39：","/*自想1：排序再遍历一遍找到第一个重复的数字","//","0;","1,so","1]","1的范围内。",":","=","==","?","[]","array","array;","boolean","c/c++","c/c++,","class","duplic","duplicate2(int","duplication)","duplication:","duplication[0]","equal","fals","false;","find","findduplicate1(int[]","findduplicate3(int[]","findoneofduplicatenumb","hashset<>();","here","implementation;","import","index[0,n","input","int","integ","java.util.arrays;","java.util.hashset;","java.util.set;","length","length,int","length:","new","null","num","num;","number","number\");","number,","numbers)","numbers.length","numbers:","numbers[],int","nums)","nums.length","otherwis","packag","parameters:","pointor","public","return","runtimeexception(\"cannot","set","set.add(num);","static","throw","true","true;","us","valid,","value:","value[0,n","value的对应关系，期待index==valu","{","||","}","从i=0开始看nums[i]是否==i，","例如，如果输入长度为7的数组{2,3,1,0,2,5,3}，那么对应的输出是第一个重复的数字2。","剑指offer","在一个长度为n的数组里的所有数字都在0到n","如果nums[i]==v(v!=i)，则看nums[v]，如果nums[v]==v则找到两个==v的数，则将v返回","如果nums[v]!=v，则将nums[i]与nums[v]位置交换，期望把每个数都放在index==value的正确位置上","如果要求不修改原数组，拷贝一份之后再排序再遍历，时间复杂度不变，空间复杂度变为o(n)","寻求index","找出数组中重复的数字","数组中某些数字是重复的，但不知道有几个数字是重复的。也不知道每个数字重复几次。请找出数组中任意一个重复的数字。","时间复杂度o(n)，空间复杂度o(1)","时间复杂度o(nlogn)，空间复杂度o(1)，修改了原数组","自想2改成要求的格式","这里要特别注意~返回任意重复的一个，赋值duplication[0]"],"Array/旋转数组的最小元素.html":["(array","(array[mid]","(lo","*","*/","+","/**","//","0)","0,","0;","1);","1;","6.旋转数组的最小元素","=","==",">","array)","array.length","array;","array[hi])","array[mid];","class","hi","hi，min在mid的右边，不可能是mid","int","lo","mid","minnumberinrotatearray(int[]","note：给出的所有元素都大于0，若数组大小为0，请返回0。","null","packag","public","return","{","||","}","例如数组{3,4,5,1,2}为{1,2,3,4,5}的一个旋转，该数组的最小值为1。","剑指offer","参见二分查找变形总结的1.8","把一个数组最开始的若干个元素搬到数组的末尾，我们称之为数组的旋转。","旋转数组的最小数字","时间复杂度o(logn)，空间复杂度o(1)","输入一个非减排序的数组的一个旋转，输出旋转数组的最小元素。"],"Array/斐波那契数列.html":["(n","*","*/","/**","7.斐波那契数列","array;","class","fibonacci(int","int","n)","packag","public","{","剑指offer","大家都知道斐波那契数列，现在要求输入一个整数n，请你输出斐波那契数列的第n项（从0开始，第0项为0）。n","斐波那契数列","时间复杂度o(n)，空间复杂度o(1)","要利用动态规划从前算到后，利用每一个前面已经算过的结果","递归从后算到前时间复杂度o(2的n次方)"],"Array/跳台阶.html":["(target","*","*/","+","/**","1)","1,","2","2)","8.跳台阶","=","array;","class","f(1)","f(2)","f(n","f(n)","int","jumpfloor(int","packag","public","target)","{","一只青蛙一次可以跳上1级台阶，也可以跳上2级。求该青蛙跳上一个n级的台阶总共有多少种跳法（先后次序不同算不同的结果）。","剑指offer","斐波那契数列，时间复杂度o(n)，空间复杂度o(1)","跳台阶"],"Array/变态跳台阶.html":["(target","*","*/","+","...","/**","0,","0，1，2，4，8,","1","1)","1,","2","2)","9.变态跳台阶","=","array;","class","f(0)","f(1)","f(2)","f(n","f(n)","int","jumpfloorii(int","packag","presum","public","target)","{","一只青蛙一次可以跳上1级台阶，也可以跳上2级……它也可以跳上n级。求该青蛙跳上一个n级的台阶总共有多少种跳法。","剑指offer","变态跳台阶","斐波那契数列，时间复杂度o(n)，空间复杂度o(1)"],"Array/矩阵覆盖.html":["(int","(target","*","*/","+","...","/**","0)","0,","0;","1","1)","1,","10.矩阵覆盖","1;","1块与最后一块无连接","1块与最后一块有连接","2)","2,","2;","3,","3;","=","==","class","cur","f(0)","f(1)","f(2)","f(3)","f(n","f(n)","int","matrix;","packag","pre","public","rectcover(int","return","target)","{","}","前面n","剑指offer","我们可以用21的小矩形横着或者竖着去覆盖更大的矩形。请问用n个21的小矩形无重叠地覆盖一个2*n的大矩形，总共有多少种方法？","斐波那契数列，时间复杂度o(n)，空间复杂度o(1)","矩阵覆盖"],"Array/调整数组顺序使奇数位于偶数前面.html":["%","&&","(array","(array[j]","(i","(int",")","*","*/","+","/**","//","0)","1","1);","13.调整数组顺序使奇数位于偶数前面","1;","1]","1]的元素整体后移一位，最后将找到的奇数放入i位置，然后i++。","2","2,","3,","4,","5,","6};","7,","=","==",">=","^","args)","array","array)","array,","array.length","array.length)","array;","array[i++]","array[i]","array[j","array[j]","array[j];","array[k","array[k];","class","i,","i;","int","int[]","i从左向右遍历，找到第一个偶数。","i存偶数的下标，j存i之后的奇数的下标","j","j)","j++;","j,","j从i+1开始向后找，直到找到第一个奇数。","k","main(string[]","null","odd","odd;","packag","public","reorderarray1(int[]","reorderarray2(array);","reorderarray3(int[]","return;","static","swap(array,","swap(int[]","void","{","{1,","||","}","使得所有的奇数位于数组的前半部分，所有的偶数位于数组的后半部分，","剑指offer","另外用一个数组","向后移必须从后往前移动，不然前面的向后移会覆盖后面的值","将[i,...,j","并保证奇数和奇数，偶数和偶数之间的相对位置不变。","时间复杂度o(n)，空间复杂度o(n)","时间复杂度o(n²)，空间复杂度o(1)","终止条件：j向后遍历没有再找到奇数。","自想1：","要想保证原有次序，则只能顺次移动或相邻交换。","讨论区：","记下即将被覆盖的最后一个值","调整数组顺序使奇数位于偶数前面","输入一个整数数组，实现一个函数来调整该数组中数字的顺序，","这里采用顺次移动"],"Array/范围查询.html":["#defin","#includ","%d\",","&a,","&b);","&nums[i]);","((hi","(*pa","(*pb);","(int","(int*)a;","(int*)b;","(lo","(nums[mid]","(size","(the",")","*a,","*b)","*pa","*pb","+","/*把常用的变量变成全局的减少参数传递*/","//","//cout","//int","//从小到大排序","0","0;","1","1);","10^7.","11","12","1;","1为","1为=target的最小下标","1为>","1，在(mid,","2","256","3","4","5","500005","5×105","6","7","9",":","=",">",">=",">>","?","[a,","ask","axis.","b","b;","b],","b].","b]内点的个数。","b]，试计算落在其内的点数。","b]，都有a","binarysearch1(int","boundari","class","compare(const","compare);","consist","const","contain","coordin","count","defin","descriptioin","distinct","each","enumer","exampl","findleftindex(int[]","findrightindex(int[]","first","follow","given","greater","guarante","hi","hi)","hi)中","import","input","insid","inside.","int","integ","integers:","integr","interv","intervals.","java.util.arrays;","java.util.scanner;","java运行结果：","l","length","length,","line","lo","lo)","lo,","lo;","ly","m","main","mb","memory:","mid","mid;","n","n,","namespac","neg","non","number","nums,","nums[i];","nums[l];","nums[length];","nums[mid]","nums[mid]，lo","oj","oj地址：https://dsa.cs.tsinghua.edu.cn/oj/course.shtml?courseid=58","other.","output","point","public","qsort(nums,","queri","queries).","querytimes;","restrict","return","s","s)","s.","scanf(\"%d","scanf(\"%d\",","sec","second","set","sizeof(int),","static","std;","stdlib.h中的qsort参见：http://www.cnblogs.com/ccbb/archive/2010/01/15/1648827.html","target","target)","target,","time:","tsinghua","two","us","void","well","x","{","}","≤","一毛一样的算法，但是时间空间都秒杀java的c++：","二分查找的改进的具体分析参见《数据结构邓俊辉第三版》p56","以下m行，各包含两个整数：查询区间的左、右边界a和b。","内存：256","各点的坐标、查询区间的边界a、b，均为不超过10^7的非负整数","各点的坐标互异","对于每次查询的区间[a,","对每次查询，输出落在闭区间[a,","循环结束时，lo为>=target的最小下标，故lo","循环结束时，lo为>target的最小下标，故lo","思路是利用二分查找的一个改进，在有序数组中找到≥a的第一个元素和≤b的最后一个元素。","描述","数轴上有n个点，对于任一闭区间","时间：2","最后我要说，我爱c++，c++使我快乐！","样例","然后改成了我非常不愿意写的c++语言的版本，由此也是发现了c++的强大，做人还是不能偷懒啊。c++虽然难用，指针引用傻傻分不清楚，而且stl在很多情况下会被禁用，但是无奈人家处在底层效率那叫一个高。没有优化的时候就拿了75分，把cin,cout改成scanf,printf之后就能轻松拿满分了。看来这辈子是套不过c++的魔掌了。","第一行包括两个整数：点的总数n，查询的次数m。","第二行包含n个数，为各个点的坐标。","若target","范围查询(range)","见英文题面","输入","输出","这是清华大学数据结构mooc的配套练习的第一题，一开始看到这题以为很水，后来我就哭了。。。终究是我太弱。","限制","首先我是用java写了一个o(n)的版本，结果发现纳尼？连一半的测试用例都通不过就会超时。然后写了二分查找的版本，还是只能得60分，这可是个o(logn)的算法呀。平时写leetcode的时间限制太松了，都几乎不会碰到超时的情况。优化之后java的版本最高得了80分。"],"Array/二分查找的各种变形总结.html":["!=","\"","\"));","\");","\"fuck","\"nice!\"","&&","(findminindex(arr1)","(getcount(arr1,","(int","(lo","(num","(nums[mid]","(target","*","*/","+","/**","//","0","0,","0;","1));","1);","1,","1.1","1.2","1.3","1.4","1.5","1.6","1.7","1.8","10));","10;","10};","11));","1;","1。","1，但是最后在右半段没有找到更大的，target","2));","2,","3,","4,","500000;","6,","7));","7,","8));","8,","9,",":","=","==",">","?","args)","array;","base","binarysearch","binarysearchcomparator(int[]","binarysearchforfirstgreaternumindex(int[]","binarysearchforfirstgreaterorequalnumindex(int[]","binarysearchwithoutduplicates(int[]","boolean","break;","case","case上的改进","class","common.generaterandomarray.*;","common.printarray.printarray;","easy，但它的各种变形扣边界真的需要总结一下。","false;","findleftindex(int[]","findleftindex(nums,","findminindex(arr1));","findminindex(int[]","findminindexcomparator(arr2))","findminindexcomparator(arr2));","findminindexcomparator(int[]","findrightindex(nums,","fucked!\");","getcount(int[]","getcountcomparator(arr2,","getcountcomparator(int[]","hi","hi]中找","hi：最小值在右半部分","hi：最小值在右半部分，不可能是自己了","import","int","int[]","java.util.arrays;","leftindex","lo","lo;","main1(string[]","main2(string[]","main3(string[]","main4(string[]","maxsiz","maxvalu","mid","mid;","null","num","nums)","nums,","nums.length","nums[hi]","nums[hi])","nums[mid])","nums[mid]，","nums[mid]，target在右半段，","nums[mid]，在右半段，在[mid","packag","printarray(arr1);","printarray(arr2);","public","return","rightindex","static","succe","system.out.print(\"nums[]:","system.out.println(\"find:\"","system.out.println(\"target:","system.out.println(\"true:\"","system.out.println(arrays.tostring(x)","system.out.println(binarysearchforfirstgreaternumindex(num,","system.out.println(binarysearchforfirstgreaterorequalnumindex(num,","system.out.println(binarysearchforfirstlessorequalnumindex(num,","system.out.println(binarysearchwithoutduplicates(nums,","system.out.println(succe","target","target)","target))","target);","testtim","true;","void","{","{0,","{1,","{1,2,2,2,4,8,10}，查找2，返回1的下标0；查找3，返回最后一个2的下标3；","{1,2,2,2,4,8,10}，查找2，返回4的下标4；","{1,2,2,2,4,8,10}，查找2，返回最后一个2的下标3","{1,2,2,2,4,8,10}，查找2，返回最后一个2的下标3；查找3，返回最后一个2的下标3；","{1,2,2,2,4,8,10}，查找2，返回第一个2的下标1；","||","}","【1.1的改进】","【1.2的改进：1.2最后的返回加一个判断条件】","【1.2的改进：1.2的前一个数就是1.5的结果】","【1.3的改进：1.3最后的返回加一个判断条件】","【1.3的改进：1.3的下一个数就是1.4的结果】","【1.5和1.6的改进】","二分查找的各种变形总结","从右边起查找第一个小于某个数的下标","从右边起查找第一个小于等于某个数的下标","例，int[]","例：int[]","其实，二分查找看起来so","在有序数组断节后找到min数的index","如果target==nums[mid]，虽然lo","如果target大于数组最后一个元素，lo最后变为nums.length，即没有元素大于target，需要返回","把排序好的数组分成两部分，两部分互换顺序","无重复数字，二分查找出target的下标","无重复数字，找target的下标","有序数组断成两节互换位置查找最小值的下标","未找到","查找","查找3，返回4的下标4；查找4，返回4的下标4。如果没有大于等于target的元素，返回","查找3，返回4的下标4；查找4，返回8的下标5。如果没有大于key的元素，返回","查找4，返回4的下标4。如果没有>","查找4，返回4的下标4。如果没有等于target的元素，返回","查找4，返回最后一个2的下标3。如果没有>","查找>=target的最小下标","查找>target的最小下标","查找target出现的次数","查找target的最大下标","查找target的最小下标","查找一个数出现的次数","查找最后一个等于某个数的下标，即从右边起查找第一个等于某个数的下标","查找第一个大于某个数的下标","查找第一个大于等于某个数的下标","查找第一个等于某个数的下标","汇总和测试函数","注意：以下代码均采用左右均为闭区间，即hi为最后一个元素下标，而不是元素个数。","注意：第一个小于等于某个数的下一个数就是第一个大于某个数的数","第一个大于target的数在右半段","第一个小于等于2的数的下标是3，第一个大于2的数的下标是4","若target"],"String/替换空格.html":["!=","\"%20\");","\",","&&","'","'%');","')","'0');","'2');","(int","(str.charat(i)","));","*","*/",",","/**","0","0)","0;","1,","2,","2.替换空格","3;",";","=",">=","args)","beforelength","class","happy\");","happy.则经过替换之后的字符串为we%20are%20happy。","int","j","main(string[]","new","packag","public","replacespace1(stringbuff","replacespace2(stringbuff","return","space","static","str","str)","str.charat(i","str.length();","str.setcharat(j","str.setcharat(j,","str.tostring().replaceall(\"","str.tostring();","string","string;","stringbuff","stringbuffer(\"w","system.out.println(replacespace1(str));","system.out.println(replacespace2(str));","void","{","}","剑指offer","替换空格","自想1：使用函数","自想2：长度延长替换","请实现一个函数，将一个字符串中的每个空格替换成“%20”。例如，当字符串为we"],"LinkedList/从尾到头打印链表.html":["!=","&&","(cur","(int","(listnod",")","*","*/","/**","0","0;","1;","3.从尾到头打印链表","=",">=","args)","array","array[i]","arraylist","arraylist.add(listnode.val);","arraylist;","arraylist<>();","arraylist<>(arrays.aslist(array));","class","common.listnode;","common.printarraylist.printarraylist;","cur","cur.next;","cur.val;","import","int","integer[]","integer[length];","java.util.arraylist;","java.util.arrays;","length","length++;","linkedlist;","listnod","listnode(0);","listnode(24);","listnode(58);","listnode(67);","listnode)","listnode.next","listnode.next.next","listnode.next.next.next","listnode;","main(string[]","new","null)","null;","packag","printarraylist(printlistfromtailtohead1(listnode));","printarraylist(printlistfromtailtohead2(listnode));","printlistfromtailtohead1(listnod","printlistfromtailtohead2(listnod","printlistfromtailtohead2(listnode.next);","public","return","static","void","{","}","从前到后遍历链表，并用数组存储，最后转换成arraylist","从尾到头打印链表","剑指offer","时间复杂度o(2的n次方)，空间复杂度o(1)","时间复杂度o(n)，空间复杂度o(n)","自想1：","讨论区：递归","输入一个链表，按链表值从尾到头的顺序返回一个arraylist"],"Stack-Queue/栈和队列常用算法总结.html":["&&","(!popstack.empty())","(!pushstack.empty())","(data.isempty())","(data.size()","(index","(inits","(popstack.empty()","//","0)","0时前一个数下标为","0队列为空，如还要取数给用户报错。","1)","1];","1。栈空，如还要弹出给用户报错。","1，栈满，如还要压入则给用户报错。index","=","==",">","array.length时队列为满，如还要加数给用户报错，curs","array;","array[","array[index","arrayindexoutofboundsexception(\"th","arrayqueu","arrayqueue(int","arraystack","arraystack(int","boolean","class","cursize;","data","data.add(num);","data.poll();","data;","empty!\");","empty\");","end;","help","help.add(data.poll());","help.add(res);","help;","index;","index];","initsize)","int","int[]","linkedlist<>();","new","num)","num;","offer(int","peek()","poll()","pop()","popstack","popstack.peek();","popstack.pop();","popstack.push(pushstack.pop());","popstack;","pop栈为空才允许倒数据。只要满足以上两个限制，倒数据的行为可以发生在任何时刻","privat","public","push(int","pushstack","pushstack.empty())","pushstack.push(num);","pushstack;","queue","re","res;","return","return;","runtimeexception(\"queu","runtimeexception(\"stack","size;","size时前一个数下标为s","stack","stack<>();","start,","static","swap()","swap();","throw","tmp","tmp;","transfer()","transfer();","true;","twoqueuestostack","twoqueuestostack()","twostackstoqueu","twostackstoqueue()","void","{","}","如何用数组实现栈","如何用数组实现队列","如何用栈实现队列","如何用栈来实现队列，如何用队列来实现栈，如何用数组来实现栈和队列。","如何用队列实现栈","如果push开始往pop中倒数据，一次要倒完","思路：准备一个start变量一个end变量，一开始都指向0位置，再准备一个cursize变量约束start和end的行为，cursize表示队列已有元素的个数。start和end无直接关系（解耦），start或者end都是每次和cursize比较是否越界。end代表当要加一个数，我把新来的数放在end位置，start代表当用户让我取出一个数，我把start位置的数取出给用户，类似于加数队尾排队打饭，取数队头打完饭走人。end一旦到底就返回开头，start一直在追end，curs","思路：准备一个栈顶指针index，数组的大小设置为栈的大小为initsize。当要加一个数，index的含义为如果新来一个数，我把新来的数放在index位置。当用户让我弹出一个数，我弹出的数是index的前一个数（前一个数也就是位置处于index下面一个数，假设数组是竖直排列的，最底下是nums[0]）。index","思路：准备两个队列，一个data队列，一个help队列，压数的话压入data队列，弹出数将data队列中的数除了最后一个数之外其他的压入help队列，将最后一个数返回用户，再将data和help引用互换","思路：用栈实现队列结构，准备两个栈，一个push栈，一个pop栈，加数据入push栈，取数据从pop栈中拿。总体思路是进push的数据倒入pop栈中，两次逆序等于顺序。倒的两个限制：（1）","栈和队列的转换/用数组实现栈和队列","栈的大小，也是数组的大小","注意：最后一个数要加回help中","（2）"],"Stack-Queue/用两个栈实现队列.html":["(!stack1.isempty())","(!stack2.isempty())","*","*/","/**","//","1)","2)","5.用两个栈实现队列","=","class","import","int","java.util.stack;","new","node)","packag","pop()","pop栈不为空，不允许倒数据","pop的栈","public","push(int","push的栈","return","return;","stack","stack1","stack1.push(node);","stack2","stack2.pop();","stack2.push(stack1.pop());","stack<>();","stack_queue;","transfer()","transfer();","void","{","}","倒的两个限制：","准备两个栈，一个push栈，一个pop栈","剑指offer","加数据入push栈，取数据从pop栈中拿","只要满足以上两个限制，倒数据的行为可以发生在任何时刻","如果push开始往pop中倒数据，一次要倒完","总体思路是进push的数据倒入pop栈中，两次逆序等于顺序","用两个栈实现队列","用两个栈来实现一个队列，完成队列的push和pop操作。","用栈实现队列结构","队列中的元素为int类型。"],"Tree/二叉树遍历算法总结.html":["!=","!stack.empty())","\"","\");","\";","\"^\",","\"h\",","\"v\",","(!queue.isempty())","(!stack.empty())","(!storestack.empty())","(cur","(cur.left","(cur.right","(head","(int","(len","(root","(回顾先序：用栈实现，弹出一个节点作为当前节点，打印当前节点，","*","+","/","/*=====================================================================================*/","//","0,","0;","1,","17);","2;","=","==",">",">右子树",">左子树",">根","buf","class","cur","cur.left;","cur.right;","cur;","getspace(int","getspace(lenl)","getspace(lenr);","head)","head,","head.valu","height","height,","import","inorderrecur(nod","inorderrecur(root.left);","inorderrecur(root.right);","inorderunrecur(nod","int","java.util.linkedlist;","java.util.queue;","java.util.stack;","layertraversal(nod","left;","len","len)","len);","lenl","lenl;","lenm","lenm)","lenr","linkedlist<>();","new","node","node(int","null","null)","num)","packag","posorderrecur(nod","posorderrecur(root.left);","posorderrecur(root.right);","posorderunrecur(nod","preinposlayertravers","preorderrecur(nod","preorderrecur(root.left);","preorderrecur(root.right);","preorderunrecur(nod","print","printinorder(head,","printinorder(head.left,","printinorder(head.right,","printinorder(nod","printtree(nod","public","queue","queue.add(cur.left);","queue.add(cur.right);","queue.add(root);","queue.poll();","return;","right;","root)","root;","space","stack","stack.pop();","stack.push(cur);","stack.push(cur.left);","stack.push(cur.right);","stack.push(root);","stack<>();","static","storestack","storestack.push(cur);","storestack.push(cur.value);","string","stringbuff","stringbuffer(\"\");","system.out.print(cur.valu","system.out.print(root.valu","system.out.print(storestack.pop()","system.out.print(storestack.pop().valu","system.out.println(\"binari","system.out.println();","system.out.println(getspace(height","this.valu","to,","to;","tree","tree:\");","tree;","val","val);","val.length();","value)","value;","void","{","||","}","中","中序遍历","中，通过","二叉树节点的定义","二叉树遍历算法总结","优化：其实storestack栈只需要存数就可以了，不需要存left,right指针，所以只需要用一个stack","先压右后压左，弹出为先弹左后弹右","先压右后压左，弹出为先弹左后弹右)","先对左子树进行后序遍历，再对右子树进行后序遍历，再打印自己","先序中序后序中的“序”指的是打印根的顺序。","先序遍历","先打印自己","先进先出，用队列实现。弹一个出来，把左边右边加进去","关于先序遍历、中序遍历、后序遍历的递归和非递归版本以及层序遍历的总结。","压栈","右","右(先序：用栈实现，弹出一个节点作为当前节点，打印当前节点，然后对于当前节点有右先压右，有左后压左。先压右后压左，弹出为先弹左后弹右)","后序遍历","后序：左","向左走","存完把所有栈中的元素打印","完整的程序：","对于先序左右互换得到中","对左子树进行中序遍历，打印自己，对右子树进行中序遍历","层序遍历","左","左右互换得到中","左子树","左，","左，打印的时候不打印，存到栈里去，存完把所有栈中的元素打印","弹出一个节点","当前节点不为空","当前节点不为空或者栈不为空","当前节点不为空，当前节点压入栈，当前节点往左跑（左边界一压压一溜）；","当前节点为空但是栈不为空","当前节点为空，从栈中拿一个打印，当前节点向右跑","当前节点为空，栈不为空","当前节点向右走","思路：先对左子树进行后序遍历，再对右子树进行后序遍历，再打印自己","思路：先打印自己，再对左子树进行先序遍历，再对右子树进行先序遍历","思路：先进先出，用队列实现。弹一个出来并打印，然后把分别左儿子右儿子加进去","思路：后序：左","思路：对左子树进行中序遍历，打印自己，对右子树进行中序遍历","思路：用栈实现，弹出一个节点作为当前节点，打印当前节点，然后对于当前节点有右先压右，有左后压左。先压右后压左，弹出为先弹左后弹右","思路：用栈实现，当前节点不为空或者栈不为空继续while（只有当前节点为空，栈也为空才退出循环）：当前节点不为空，当前节点压入栈，当前节点往左跑（左边界一压压一溜）；当前节点为空，从栈中拿一个打印，当前节点向右跑","打印","打印的时候不打印，存到栈里去，","有右先压右","有左后压左","根","然后对于当前节点有右先压右，有左后压左。","用栈实现，弹出一个节点作为当前节点，打印当前节点，","用栈实现，当前节点不为空或者栈不为空继续while（只有当前节点为空，栈也为空才退出循环）：","递归版中序遍历","递归版先序遍历","递归版后序遍历","非递归版中序遍历","非递归版先序遍历","非递归版后序遍历"],"Tree/重建二叉树.html":["(int","*","+","/**","1]~pre[inindex","4.重建二叉树","=",">","class","common.treenode;","import","inend)","inindex","instart","instart;","int","new","null;","packag","pre[]中pre[prestart]是root，在in[]中找到in[inindex]=root","pre[prestart","preend","prestart]","public","return","root","tree;","treenod","treenode(pre[prestart]);","{","||","}","例如输入前序遍历序列{1,2,4,7,3,5,6,8}和中序遍历序列{4,7,2,1,5,3,8,6}，则重建二叉树并返回。","假设输入的前序遍历和中序遍历的结果中都不含重复的数字。","剑指offer","左子树","自想1：","输入某二叉树的前序遍历和中序遍历的结果，请重建出该二叉树。","重建二叉树"],"Tree/leetcode105.html":["(int","(preorder","*","*/","+","/","/**","1","1,","15","1]，右子树是[prestart","1]，根是inroot，右子树是[inroot","20","2t(n/2)","3","7","9","=","==",">","[3,9,20,15,7]","[9,3,15,20,7]","\\","array;","assum","binari","buildtree(int[]","class","common.treenode;","construct","duplic","example,","exist","follow","given","import","inend)","inend]","inord","inorder)","inroot","instart","instart;","instart]，右子树是[prestart","int","int[]","leetcode105","leetcode105constructbinarytreefrompreorderandinordertravers","leftlength","new","note:","null","null;","o(n)，时间复杂度nlogn","packag","preend","preend]","preorder","preorder,","preorder.length","prestart","public","return","root","t(n)","travers","tree","tree,","tree.","tree:","treenod","treenode(preorder[prestart]);","{","||","}","在中序中，左子树是[instart,","在先序中，根是prestart，左子树是[prestart","左右子树各分别二分，递归到超出范围则向上返回","所以先序中左子树是[prestart","所以左子树的总节点个数leftlength","自想：二分的思路，先序分成[根|左|右]，中序分成[左|根|右]，根在先序一定是preorder[0]，找到根在中序中inorder[inroot]"],"bfs-dfs/bfs-dfs总结.html":["!=","!used[i","\"","\");","&&","(!queue.isempty())","(candid","(candidates)","(cur","(cur.left","(cur.right","(includ","(int","(matrix.length","(num","(remain","(root","(target),","(the","(tmplist));","(tmplist.size()","(without","*","*/","+","/*","//","0","0);","0,","0;","0}","0},","1","1)","1);","1)：","1,","1,2,3,4,5","13,","1:","1;","1]","1]))","2,","2:","3}","4}","5,","5,000,000.","5],","6]","6],","7,","7],","8,","=","==",">",">=","[","[0,1,2]","[0,1]","[0,2,1]","[0,2]","[1,","[1,1,2]","[1,1,2],","[1,10,11,12,13,2,3,4,5,6,7,8,9].","[1,2,1],","[1,2,2]","[1,2,2],","[1,2,3]","[1,2,3],","[1,2]","[1,2],","[1,3,2],","[1,3],","[10,1,2,7,6,1,5],","[1]","[1],","[2,","[2,1,1]","[2,1,3],","[2,2,2,2],","[2,2,3]","[2,2],","[2,3,1],","[2,3,3],","[2,3,5],","[2,3,6,7],","[2,3],","[2,5,2,1,2],","[2],","[3,1,2],","[3,2,1]","[3,5]","[3],","[5]","[7],","[]","]","algorithm","args)","arraylist<>(),","arraylist<>();","arraylist<>(tmplist));","backtrack(list>","backtrack(lists,","bf","bfs(int[][]","bfs(matrix);","bfs/dfs总结","bfs广度优先搜索/dfs深度优先搜索相关算法题的思路总结。","bfs的思想","bfs相关问题","boolean[]","boolean[n];","boolean[nums.length]);","candid","candidates,","candidates.length","candidates[i","candidates[i])","candidates[i]);","chosen","class","collect","combin","combination.","combinations.","combinationsum(int[]","combinationsum2(int[]","contain","continue;","cur","cur)","cur;","df","dfs(int[][]","dfs(matrix);","dfs与backtracking相关问题","distinct","duplic","duplicates)","duplicates,","each","exampl","example,","example:","false;","find","given","ii","import","input","input:","int","int[]","int[][]","integ","integers,","integers.","is:","java.util.linkedlist;","java.util.queue;","larg","layertraversal(nod","leetcode386","leetcode39","leetcode40","leetcode46","leetcode47","leetcode78","leetcode90","less","lexicalorder(int","lexicograph","linkedlist<>();","list","list,","list.add(cur);","list>","lists,","lists.add(new","lists;","main(string[]","matrix","matrix)","matrix.length;","matrix[0].length)","matrix[i][j]为1表示有从i到j的有向边","matrix为n*n邻接矩阵：","n","n)","n,","n]的整数","new","node","note:","null","null)","num","number","nums)","nums);","nums,","nums.length","nums.length)","nums[i","nums[i]","nums[i])","onc","optim","order.","output:","permut","permutations.","permute(int[]","permuteunique(int[]","pleas","pop","posit","possibl","power","public","queue","queue.add(cur.left);","queue.add(cur.right);","queue.add(root);","queue.add(start);","queue.poll();","remain","remain)","repeat","return","return:","return;","root)","same","set","set).","size","solut","space.","start","start)","start,","start;","static","subset","subsets(int[]","subsets.","subsetswithdup(int[]","sum","system.out.print(cur.valu","system.out.println((pop","target","target)","target);","target.","time","times.","tmplist,","tmplist.add(candidates[i]);","tmplist.add(nums[i]);","tmplist.remove(tmplist.size()","true;","uniqu","unlimit","us","used)","used);","used[i]","visit","visited[start]","void","{","{0,","{1,","{1}","{2,","{3,","{4}","{空}","||","}","},","};","上一层继续做如上操作，知道所有顶点都访问过。","为0表示没有从i到j的有向边","二叉树层次遍历","五个节点","从该顶点的邻接顶点中选择一个，继续这个过程（即再寻找邻接结点的邻接结点），一直深入下去，直到一个顶点没有邻接结点了，涂黑它，表示访问过了","从队列首部选出一个顶点，并找出所有与之邻接的结点，将找到的邻接结点放入队列尾部，将已访问过结点涂成黑色，没访问过的结点是白色。如果顶点的颜色是灰色，表示已经发现并且放入了队列，如果顶点的颜色是白色，表示还没有发现","从顶点1开始做深度搜索：","从顶点1开始进行广度优先搜索：","从顶点2回溯到顶点1，并终止于顶点1","从顶点3回溯到顶点2，继续访问顶点5，并且终止于顶点5","从顶点4开始访问，并终止于顶点4","从顶点5回溯到顶点2，并且终止于顶点2","依次访问过顶点1,2,3后，终止于顶点3","先进先出，用队列实现。弹一个出来，把左边右边加进去","全部会初始化为fals","初始条件下所有节点为白色，选择一个作为起始顶点，按照如下步骤遍历：","初始状态，从顶点1开始","初始状态，从顶点1开始，队列","回溯到这个涂黑顶点的上一层顶点，再找这个上一层顶点的其余邻接结点，继续如上操作，如果所有邻接结点往下都访问过了，就把自己涂黑，再回溯到更上一层。","基本就是出队的顶点变成黑色，在队列里的是灰色，还没入队的是白色。","将起始结点放入队列中。","广度优先搜索在进一步遍历图中顶点之前，先访问当前顶点的所有邻接结点。","广度优先搜索（bfs）","序号:[0]","所以当i=2，第二层递归判断的时候!used(1)就变成了true，不会再继续递归下去，跳出循环","按照同样的方法处理队列中的下一个结点。","深度优先搜索在搜索过程中访问某个顶点后，需要递归地访问此顶点的所有未访问过的相邻顶点。","深度优先遍历（dfs）","理解!used(i","用一副图来表达这个流程如下：","用图可以更清楚的表达这个过程：","第一层递归","第三层递归","第二层递归","结点5对于1来说不可达。","给一个邻接矩阵实现bfs输出","给一个邻接矩阵实现dfs输出","给出一个排好序的数组，[1,2,2]","给定一个不含有重复数字的整数的集合nums[]，返回其全排列","给定一个不含重复数字的整数数组candidates和一个target，candidates中的数每个可以使用一次或多次，找到所有和为target的集合","给定一个可能含有重复数字的整数数组candidates和一个target，candidates中的数每个只能使用至多一次，找到所有和为target的集合","给定一个可能含有重复数字的整数的集合nums[]，返回其不重复的全排列","给定一个可能含有重复数字的整数集，输出它的所有子集","给定一个数字n，字典序输出[1,","给定一个没有重复数字的整数集，输出它的所有子集","解答连接","解答链接","访问1的邻接顶点，1出队变黑，2,3入队，队列","访问2的邻接结点，2出队，4入队，队列","访问3的邻接结点，3出队，队列","访问4的邻接结点，4出队，队列","这种都是ok的，但当第二层递归i扫到的是第二个\"2\"，情况就不一样了","选择起始顶点涂成灰色，表示还未访问","首先要明白i作为数组内序号，i是唯一的","首先选择一个顶点作为起始结点，并将其染成灰色，其余结点为白色。"],"bfs-dfs/leetcode40.html":["\"","\");","&&","(candid","(candidates)","(includ","(int","(integ","(list","(remain","(target),","(tmplist));","+","/*=====================================================================================*/","0,","1","1);","1,","1:","1]","2,","2:","5,","5;","5],","6]","6],","7],","8,","8;",":","=","==",">","[","[1,","[1,2,2],","[10,1,2,7,6,1,5],","[2,","[2,5,2,1,2],","[5]","]","args)","arraylist<>(),","arraylist<>();","backtrack(list>","backtrack(lists,","backtracking;","candid","candidates,","candidates.length","candidates[i","candidates[i])","candidates[i]);","class","collect","combin","combination.","combinations.","combinationsum2(int[]","contain","continue;","duplic","each","exampl","find","format.printdoublearraylist.printdoublelist;","given","ii","import","input:","int","int[]","int[]{10,1,2,7,6,1,5};","int[]{2,5,2,1,2};","integers.","is:","java.util.arraylist;","java.util.arrays;","java.util.list;","leetcode40","leetcode40combinationsum2","list","list)","list>","lists)","lists,","lists;","main(string[]","new","note:","null","number","nums1","nums2","onc","packag","posit","printdoublelist(combinationsum2(nums1,","printdoublelist(combinationsum2(nums2,","printdoublelist(list>","public","remain","remain)","return","set","solut","start","start,","start;","static","sum","system.out.print(i","system.out.println(\"====================\");","system.out.println();","target","target)","target);","target.","target1","target1));","target2","target2));","tmplist,","tmplist.add(candidates[i]);","tmplist.remove(tmplist.size()","uniqu","us","void","{","||","}","打印函数："],"bfs-dfs/leetcode46.html":["\"","\");","(int","(integ","(list","(num","(tmplist.size()","+","0;",":","=","==",">","[","[1,2,3]","[1,2,3],","[1,3,2],","[2,1,3],","[2,3,1],","[3,1,2],","[3,2,1]","]","arraylist<>(),","arraylist<>();","arraylist<>(tmplist));","backtrack(list>","backtrack(lists,","backtracking;","class","collect","distinct","example:","format.printdoublearraylist.printdoublelist;","given","import","input:","int[]","integers,","java.util.arraylist;","java.util.list;","leetcode46","leetcode46permut","list","list)","list>","lists)","lists,","lists.add(new","lists;","new","null","nums)","nums);","nums.length","nums.length)","output:","packag","permut","permutations.","permute(int[]","possibl","printdoublelist(list>","public","return","static","system.out.print(i","system.out.println();","tmplist,","void","{","||","}","打印函数："],"bfs-dfs/leetcode47.html":["!used[i","&&","(int","(num","(tmplist.size()","*/","/*","0;","1","1);","1)：","1]","1]))","=","==",">","[","[0,1,2]","[0,1]","[0,2,1]","[0,2]","[1,1,2]","[1,1,2],","[1,2,1],","[1,2,2]","[1,2]","[1]","[2,1,1]","]","args)","arraylist<>(),","arraylist<>();","arraylist<>(tmplist));","backtrack(list>","backtrack(lists,","backtracking;","boolean[]","boolean[nums.length]);","class","collect","contain","continue;","duplicates,","example:","false;","format.printdoublearraylist.printdoublelist;","given","ii","import","input:","int[]","int[]{1,1,2};","java.util.arraylist;","java.util.arrays;","java.util.list;","leetcode47","leetcode47permutation2","list","list>","lists,","lists.add(new","lists;","main(string[]","new","null","num","number","nums)","nums,","nums.length","nums.length)","nums[i","nums[i]","output:","packag","permut","permutations.","permuteunique(int[]","possibl","printdoublelist(permuteunique(nums));","public","return","static","tmplist,","tmplist.add(nums[i]);","tmplist.remove(tmplist.size()","true;","uniqu","used)","used);","used[i]","void","{","||","}","序号:[0]","所以当i=2，第二层递归判断的时候!used(1)就变成了true，不会再继续递归下去，跳出循环","理解!used(i","第一层递归","第三层递归","第二层递归","给出一个排好序的数组，[1,2,2]","这种都是ok的，但当第二层递归i扫到的是第二个\"2\"，情况就不一样了","首先要明白i作为数组内序号，i是唯一的"],"bfs-dfs/leetcode78.html":["\"","\");","(arraylist","(int","(int[]","(integ","(list","(the","*/","+","/*=====================================================================================*/","/*必然是看的讨论区的：","//","//lists2.add(tmplist);","0);",":","=","[","[1,2,3]","[1,2,3],","[1,2],","[1,3],","[1],","[2,3],","[2],","[3],","[]","]","args)","array","array)","arraylist","arraylist(arrays.aslist(1,2,3,4)));","arraylist(arrays.aslist(4,5,6)));","arraylist(arrays.aslist(7,8)));","arraylist)","arraylist<>(),","arraylist<>();","arraylist<>(tmplist));","arraylist>","arraylists)","arraylists.add(new","arrays)","arrays.sort(nums);","backtrack","backtrack(list>","backtrack(lists,","backtracking;","befor","call","check","class","contain","current","distinct","duplic","each","end","example:","false,","format.printdoublearraylist.printdoublelist;","format;","given","import","input:","int","int[]","integers,","java.util.arraylist;","java.util.arrays;","java.util.list;","leetcode78","leetcode78subset","list","list)","list>","lists)","lists,","lists.add(arrays.aslist(1,2));","lists.add(arrays.aslist(4,5,6));","lists.add(arrays.aslist(7,8,9,10));","lists.add(new","lists2","lists2.add(new","lists;","main(string[]","make","move","move.","new","none","note:","num","nums)","nums,","o(n)","out,","output:","packag","path","pick","point.","possibl","power","printdoublearray(int[][]","printdoublearraylist","printdoublearraylist(arraylist>","printdoublearraylist(arraylists);","printdoublelist(list>","printdoublelist(lists);","printdoublelist(lists2);","problem","public","recurs","rest","return","safe,","select","set","set).","solut","soluton.","solved)","start","start)","start;","static","subset","subsets(int[]","subsets.","system.out.print(i","system.out.println(\"======================================\");","system.out.println(\"=======================================\");","system.out.println();","thoughts:","tmplist","tmplist,","tmplist.add(1);","tmplist.add(2);","tmplist.add(3);","tmplist.add(4);","tmplist.add(5);","tmplist.clear();","undo","void","while(problem","work","ye","{","}","因为tmplist后面一直在修改，我们只想把现在的副本放进lists中","打印函数：","每个数可以在或者不在tmplist中，或者说n个整数的集合的子集有2^n个，所以时间复杂度o(2^n)","注意：不能lists.add(tmplist);","用templist存储要放入list中的单元，回溯之后注意撤回上一步","输出4545，因为tmplist后面改变了。","输出顺序：[[],[1],[1,2],[1,2,3],[1,3],[2],[2,3],[3]]","递归的深度是o(n)在每个切分点要记录一次start，也使用了辅助空间tmplist为o(n)，所以额外空间复杂度o(n)*1"],"bfs-dfs/leetcode90.html":["&&","(int","(the","*","*/","+","/*=====================================================================================*/","/*比leetcode78","//","0);","1);","1])","=","==","[","[1,2,2]","[1,2,2],","[1,2],","[1],","[2,2],","[2],","[]","]","args)","arraylist<>(),","arraylist<>();","arraylist<>(tmplist));","arrays.sort(nums);","backtrack(list,","backtrack(list>","backtracking.leetcode78subsets.subsets;","backtracking;","class","collect","contain","continue;","duplic","duplicates,","duplicates边界条件扣的不清楚看的讨论区的","example:","format.printdoublearraylist.printdoublelist;","given","ii","import","input:","int","int[]","int[]{1,2,2,4};","int[]{1,2,3,4};","integ","java.util.arraylist;","java.util.arrays;","java.util.list;","leetcode90","leetcode90subsets2","list","list,","list.add(new","list;","list>","main(string[]","new","note:","num","nums)","nums,","nums2","nums[i","nums[i]","output:","packag","possibl","power","printdoublelist(subsets(nums));","printdoublelist(subsets(nums2));","printdoublelist(subsets2(nums));","public","return","set","set).","skip","solut","start","start)","start;","static","subset","subsets.","subsets2(int[]","subsets多了一个条件：给定的nums可能有重复元素","system.out.println(\"=======================\");","tmplist,","tmplist.add(nums[i]);","tmplist.remove(tmplist.size()","void","{","}","基本回溯能实现，skip"],"bfs-dfs/leetcode386.html":["\"","\");","(cur","(int","(integ","+","...","....","...19","/\\","0;","1","10","100...109","13,","1;","2","20...29","3","30...39","390...399","5,000,000.",":","=",">","[1,10,11,12,13,2,3,4,5,6,7,8,9].","algorithm","args)","array","array)","arraylist","arraylist.add(1);","arraylist.add(2);","arraylist.add(3);","arraylist<>();","backtracking;","class","cur)","example,","format.printlist.printlist;","format;","given","import","input","int","integ","integer[]","integer[list.size()]);","i），按顺序进行先序遍历。","java.util.arraylist;","java.util.list;","larg","leetcode386","leetcode386lexicographicalnumb","less","lexicalorder(int","lexicograph","list","list)","list,","list.add(cur);","list.toarray(new","main(string[]","n","n)","n,","new","number","optim","order.","packag","pleas","printlist","printlist(arraylist);","printlist(list","public","return","return:","return;","size","space.","static","system.out.print(i","system.out.println();","time","us","void","{","}","打印函数：","看成9颗树，子节点是在父节点的基础上加一位（*10"],"dp/leetcode55.html":["(int","(startindex",")","*","*/","+","/**","//","0","0,","0;","1","1)","1);","1,","1:","1;","1，那么所有的位置都可以选择走或者不走，时间复杂度o(2的n次方)，","2:","3","=","==",">=","[2,3,1,1,4]","[3,2,1,0,4]","alway","array","array.","array;","arriv","bad,","boolean","canjumpfromposition1(int[]","class","determin","each","element","enum","exampl","explanation:","fals","first","game","given","good,","imposs","index","index.","initi","input:","int","integers,","jump","last","lastindex","lastindex)","leetcode55","leetcode55jumpgam","length","make","math.min(startindex","matter","maximum","neg","nextindex","nextmaxindex","non","nums,","nums.length","nums[startindex]","nums[startindex],","nums[startindex]步，","nums[startindex]，","output:","packag","posit","position.","public","reach","repres","return","startindex","startindex)","startindex;","step","true","true;","unknown","what.","{","}","~","从startindex开始可以走0","停止的位置是startindex","基于当前情况做深度搜索(一步步走到底)","如果nums[]中的每个数都>=nums.length","如果中间包含lastindex则表示可以从startindex走到lastindex","算出边界条件","结束条件","自想1：回溯（超时）","递归深度为n，空间复杂度o(n)"],"dp/leetcode62.html":["'finish'","'start'","(int","(mark","*","*/","/*=====================================================================================*/","/*自想1：","0;","100.","1:","2","28","2:","3","3,","7","7,","=",">","abov","array;","below).","bottom","class","corner","corner,","corner:","diagram","down","dp问题：","exampl","explanation:","grid","grid(mark","grid.","input:","int","int[][]","int[n][m];","j","leetcode62","leetcode62uniquepath","left","locat","m","m,","mani","move","n","n)","new","note:","output:","packag","path","point","possibl","public","reach","right","robot","static","there?","time.","top","total","tri","uniqu","uniquepaths(int","way","x","{","时间复杂度o(n²)，空间复杂度o(m*n)","用int[n][m]矩阵记录到达坐标为(i,j)的paths数量"],"dp/leetcode621.html":["'a'，value为这个char出现的次数","(max","(n","(nums[i]",")","*","+","++;","/*=====================================================================================*/","/*自想1：","0;","1)","1)*n+次数最多的char的种类maxcount，如a,b并列最多，maxcount","10000].","100].","2","8","=","==",">","[\"a\",\"a\",\"a\",\"b\",\"b\",\"b\"],","[0,","[1,","args)","array","array;","b","b.","between","capit","char","char[]","char[]{'a','a','a','b','b','b'};","class","contain","cool","cpu","differ","do","do.","done","each","example:","explanation:","finish","given","however,","idl","idle.","import","index为char","input:","integ","interv","interval,","interval.","java.util.arrays;","leetcode621","leetcode621taskschedul","letter","main(string[]","math.max((max","max)","maxcount","maxcount,","mean","n","need","neg","new","non","note:","number","on","order.","origin","output:","packag","public","rang","repres","return","same","schedul","static","system.out.println(taskscheduler(tasks,2));","take","task","tasks,","tasks.","tasks.length);","two","void","without","z","{","}","以次数最多的char满足n间隔算出总数为","先排出现次数多的，再排出现次数少的","如果这个数=","如果这个数>sum，那么取这个数，","按出现次数从大到小重新排列，并把字符数组转换成int数组，"],"Fast-Slow-pointers/leetcode142.html":["!=","&&","(fast","(slow","//","//listnod","//node3.next","//node4.next","=","==","args)","begins.","break;","class","cycl","cycle,","detectcycle(listnod","extra","fast","fast)","fast.next","fast.next.next;","fast.next;","follow","given","head)","head;","ii","int","leetcode142","leetcode142linkedlistcycle2","link","linkedlist;","list","list,","list.","listnod","listnode(1);","listnode(2);","listnode(4);","listnode(int","main(string[]","modifi","new","next","next;","node","node1","node1.next","node1;","node2","node2.next","node2;","node3","node4","node4;","note:","null","null)","null.","null;","packag","public","return","slow","slow.next;","slow;","solv","space?","static","system.out.println(detectcycle(node1).val);","up:","us","val","val;","void","without","x)","x;","{","||","}","可能第一个节点就是入环节点，应该把检测放在前面","快指针一次走两步，慢指针一次走一步","快指针回到起点，快指针和慢指针都一次走一步"],"Fast-Slow-pointers/leetcode287.html":["(assum","(fast","(inclusive),","(int","*/","+","/*自想1：用两个指针遍历，时间复杂度o(n²)，空间复杂度o(1)","//","0;","1","1:","1;","2","2:","3","=","[1,3,4,2,2]","[3,1,3,4,2]","array","array,","array;","assum","between","class","complex","constant,","contain","duplic","each","exampl","exist.","extra","fast","find","findtheduplicatenumber1(int[]","given","input:","int","integ","leetcode287","leetcode287findtheduplicatenumb","less","modifi","more","n","note:","num","number","number,","nums)","nums.length)","o(1)","o(n2).","on","once.","one.","only).","output:","packag","prove","public","read","repeat","return","runtim","space.","static","us","{","但是没有利用到n+1个数都在[1,n]之间的条件","先固定指针1，用尾指针去找与头指针相同的数，找到则返回，","初始p1指向nums[0],p2指向nums[1]，","快指针回到起点，快指针和慢指针都一次走一步","没找到则头指针后移一步，继续用尾指针找与头指针相同的数"],"Matrix/leetcode48.html":["\"","\");","(clockwise).","(int","(int[]","*","*/","+","++)","...","/*","/*=====================================================================================*/","//","0;","1","1)/4","1,","1:","1;","1],","2","2,","2:","2d","3","3,","4","4(n","4,","4n/4+","5","5,","5],","6","6,","7","7,10,11]","7],","8","8,","8,10],","9","9,11],","90","9],",":","=","=>",">",">上)，逆序操作，不然覆盖了",">下",">左(","[","[1,2,3],","[12,","[13,","[14,","[15,13,","[15,14,12,16]","[16,","[4,5,6],","[7,4,1],","[7,8,9]","[8,5,2],","[9,6,3]","]","],","alloc","anoth","anticlockwis","args)","array;","becomes:","class","clockwis","degre","directly.","down,","exampl","first","format.printmatrix.printndegreematrix;","format;","given","i,","imag","image.","import","input","int","int[][]","int[][]{{1,2,3},{4,5,6},{7,8,9}};","j","j)","j);","j]","j];","j][j]","j][j];","j][n","j层在坐标下加上(j,j)","j表示从外向内的层数","leetcode48","leetcode48rotateimag","left","main(string[]","matrix","matrix)","matrix,","matrix.length);","matrix[i","matrix[j][i","matrix[n","mean","modifi","n","n)","n,","new","note:","num","nums)","o(n²)，空间复杂度o(1)","packag","place","place,","printmatrix","printndegreematrix(int[][]","printndegreematrix(matrix);","public","repres","revers","right,","rotat","rotateimage(int[][]","rotateimage2(int[][]","rotateimageedge(int[][]","rotateimageedge(matrix,","rotateimagehelper(int[][]","rotateimagehelper(matrix,","rotation.","static","such","symmetri","system.out.print(num","system.out.println();","tmp","tmp;","transpos","transpose(int[][]","transpose(matrix);","up","updownreverse(matrix);","updownreverse2(matrix);","void","x","{","}","​","上的值给右","下的值给左","右","右的值给下","左的值给上","打印函数：","把上存起来","把矩阵像剥洋葱一样分成一层一层的，每层都是正方形四条等长的边，边长度设为n，层数为j，最外面一层为0，","时间复杂度","时间复杂度o(n²)，空间复杂度o(1)","自想1：纯数学方法找规律","讨论区：","转置函数","逐渐向里对每一层四个四个数分组进行旋转"],"Matrix/二维数组中的查找.html":["&&","(array","*/","/*自想1：","0","1.二维数组中的查找","10,","11,","12},","13},","15}};","1]的矩形中","2,","4,","7,","8,","9,","9},","=","==","args)","array","array)","array));","array.length","array[i][j])","boolean","class","false;","find(int","int[][]","int[][]{{1,","j","j++;","main(string[]","matrix;","new","null","packag","public","return","static","system.out.println(find(15,","target,","target大于基准则划掉基准所在的列，target小于基准则划掉基准所在的行，逐渐缩小范围","true;","void","{","{2,","{4,","{6,","||","}","二维数组中的查找","以左下角为基准进行范围的缩小，查找的范围为行在[0,i]，列在[j,n","剑指offer","在一个二维数组中（每个一维数组的长度相同），每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。请完成一个函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。","时间复杂度o(m+n)，空间复杂度o(1)"],"Sort/排序算法总结.html":["((hi","(cur","(hi","(i","(int","(int)","(leftindex","(lo","(maxindex","(num","(nums[i]","(nums[j]","(p1","(sorted)",")","*","+","/","//","0,","0;","1","1)","1);","1);要注意>>的优先级。","1,","1,i","1;","1]","1])","1];","1]位置选出最小的和nums[0]交换位置，再遍历[1,n","1]位置选出第二小的和nums[1]交换...第i轮(i从0开始)选数的时候前i个位置[0,i","1]的数都已经是在正确的位置上了，待选的范围是[i,","1]范围恢复成一个大根堆。","1]，nums下标的范围是[lo,","1]，右节点是nums[2","1]，第i轮选完[0.i]都在正确位置上了","1张都已经有序了","1而不是mid。","2","2)","2);","2...张牌比较，比前面的小就和前面的数交换位置，插第i张的时候前面i","2;","2]","2])","2]，父节点是nums[(i",":","=","==",">",">>","?","[0,1)","[0,hi","[lo,","^","boolean","bubblesort(int[]","cur","equalrang","equalrange[0]","equalrange[1]","false;","heapify()调整函数：节点上的某个值变小后要下沉，若左右两个孩子中最大的比我大则和我交换，不断下沉直到[0,","heapify(int[]","heapify(nums,","heapinsert()建堆函数：当堆中插入一个新节点（第i号节点nums[i]）时，向上和父节点比大小，若大则换，不断调整成大根堆","heapinsert(int[]","heapsiz","heapsize)","heapsize);","heapsort()堆排序：每次堆的头和堆的最后一个数交换，最后一个最大的数固定，heaps","heapsort(int[]","helper","hi","hi)","hi);","hi);一个是类型转换的括号要打在int上，一个是random()是小写。","hi);写成swap(nums,","hi)函数没有去除lo","hi+1)=[lo,hi]","hi;","hi]","hi]之间的数：(int)(lo","hi会）","hi的情况","hi的情况，使得一旦同一个数自己和自己发生交换就会清零。","hi的时候，是同一个数，就会将这个数清零（nums[lo]","i)","i);","i,","i;","insertionsort(int[]","int","int(lo","int[]","int[length];","i，而不是nums.length","j","j)","leftindex","leftindex;","length","less","lo","lo)","lo+1)","lo+1)=[lo,","lo+hi","lo,","lo;","math.random()","math.random())","math.random()),","maxindex","maxindex,","maxindex;","merge(int[]","merge(nums,","mergesort(int[]","mergesortpart(nums,","mid","mid);","mid,","more","more从hi开始，保护nums[hi]在大于区域中不会被换掉，最后再替换","n","new","null","nums)","nums,","nums.length","nums[(i","nums[hi]","nums[hi];","nums[hi]不会，lo","nums[i]","nums[j","nums[j]","nums[j];","nums[leftindex]","nums[lo]","nums[maxindex]","p1","p2","p2的起始值是mid","partition(int[]","partition(nums,","partition函数：随机取一个基准点，把基准点和最后一个数交换，partition函数的目的是要将[lo,hi]从左到右分为小于基准点区域、等于基准点区域、大于基准点区域三个区域，然后返回等于区域的左右下标给quicksortpart函数。partition的实现看成往小于区域和大于区域发货。","public","quicksort(int[]","quicksortpart(nums,","quicksortpart函数：调用partition函数，partition后返回等于区域下标后在小于区域和大于区域中递归调用自己，直到小于区域和大于区域都只有一个数。","quicksort函数：调用quicksortpart函数，实现快排。","return;","selectionsort(int[]","sort","static","swap(int[]","swap(nums,","tmp","tmp;","true;","void","{","||","}","不要忘记随机选一个数和最后一个数nums[hi]换作为基准点，nums[hi]一直呆在大于队列中，最后不要忘了把nums[hi]和nums[more]调换，放回到等于队列中。","优先级队列","关于冒泡排序、插入排序、选择排序、归并排序、快速排序、堆排序的总结。","冒泡排序","写冒泡排序自己的错误：","写归并排序的时候自己的几个错误：","写快排的时候自己的几个错误：","写选择排序自己的错误：","前面i已经在全局中被定义了，后面写for","又习惯性地加了int，重复定义了变量。","因为循环中有j+1作为索引，所以j的边界结束值是j","在全局定义了minindex的起始值是0，后面忘记了应该是i，而不是一直是0，应该把minindex放在for循环中赋值，每次进入for循环都有不同的minindex","堆","堆排序","完全二叉树","完全二叉树是一种逻辑结构，实际存储在数组中，nums[i]的左节点是nums[2","归并排序","快速排序","思路：","思路：两两比较，大的沉底。i是轮数，在进行第i轮的时候确定了最大的i个值；如果一轮下来都没有交换证明已经有序","思路：像小孩子插扑克牌一样，要一张张比，把第1张和第0张比较，把第2张和[0,1]张比较，从后往前把第i张牌和第i","思路：分治后从下往上两两归并，借助mergesortpart分别将左边和右边sort，再将两边merge起来。","思路：遍历[0,n","排序算法总结","插入排序","时间复杂度：o(nlogn)","时间复杂度：o(nlogn)，最好时间复杂度o(nlogn)","时间复杂度：o(n²)，最好时间复杂度o(n)","时间复杂度：o(n²)，最好时间复杂度o(n²)","注意i的范围是[0,","注意：用位运算交换两个数有一个问题，就是当lo","稳定性：可以实现成稳定的","稳定性：无法实现成稳定的","空间复杂度：o(1)","空间复杂度：o(logn)（因为递归深度是logn，用用来记录切分点）","空间复杂度：o(n)","要排除lo","记一个结论","记一个结论：把完全二叉树逻辑结构存在数组实际结构中，nums[i]的左节点是nums[2","选择排序","随机得到一个在[lo,","随机选取基准点和最后一个数交换","，由于头被换成了一个比较小的数，于是要做一次heapify()调成大根堆，再重复每次将堆的头和堆的最后一个数交换。"],"Bit/二进制中1的个数.html":["!=","&","((flag","(flag","*","*/","/**","//","0)","0;","11.二进制中1的个数","1;","=","bit;","class","count","count++;","flag","int","n)","numberof11(int","packag","public","{","}","一位位地比较，用1（1自身左移运算，其实后来就不是1了）和n的每位进行位与","二进制中1的个数","剑指offer","整数4个字节，32位，当flag左移超过了32位，前面被砍断，后面32位为0则结束","时间复杂度o(n)，空间复杂度o(1)","注意不能用n向右移来和1比较，因为如果n是负数，向右移高位会补1，会增加1的个数","讨论区方法1：","输入一个整数，输出该数二进制表示中1的个数。其中负数用补码表示。"],"Bit/数值的整数次方.html":["&&","(base","*","*/","/","/**","0","1","1)","1,","10^0001","10^0100","10^1000。","10^1101","12.数值的整数次方","1;",":","=","==",">",">=","?","absexp","base","base,","base;","bit;","class","cur","cur;","doubl","expon","exponent)","f(n","f(n)","factor","int","math.abs(exponent);","packag","power1(doubl","power2(doubl","public","return","{","}","举例，13表达为二进制1101。","剑指offer","数值的整数次方","给定一个double类型的浮点数base和int类型的整数exponent。求base的exponent次方。","自想1：连乘","讨论区：用位运算代替连乘","通过&1和>>1来逐位读取1101，为1时将该位代表的乘数累乘到最终结果。"]},"length":52},"tokenStore":{"root":{"0":{"docs":{"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.010309278350515464},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.00881057268722467},"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.011111111111111112},"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.008875739644970414},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00819672131147541},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.007566204287515763},"String/替换空格.html":{"ref":"String/替换空格.html","tf":0.010416666666666666},"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.007518796992481203},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.003080082135523614},"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.005780346820809248},"Matrix/二维数组中的查找.html":{"ref":"Matrix/二维数组中的查找.html","tf":0.013888888888888888},"Bit/数值的整数次方.html":{"ref":"Bit/数值的整数次方.html","tf":0.041237113402061855}},";":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.0273972602739726},"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.013071895424836602},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.007194244604316547},"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0072992700729927005},"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.014388489208633094},"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.017094017094017096},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.01951219512195122},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.01507537688442211},"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":0.013333333333333334},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.021739130434782608},"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.035398230088495575},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.026627218934911243},"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609},"Array/旋转数组的最小元素.html":{"ref":"Array/旋转数组的最小元素.html","tf":0.030303030303030304},"Array/矩阵覆盖.html":{"ref":"Array/矩阵覆盖.html","tf":0.0125},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876},"String/替换空格.html":{"ref":"String/替换空格.html","tf":0.020833333333333332},"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.007518796992481203},"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.006160164271047228},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.01},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547},"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.017341040462427744},"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.007692307692307693},"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625},"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.021739130434782608},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.007334963325183374},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0072992700729927005},"Bit/二进制中1的个数.html":{"ref":"Bit/二进制中1的个数.html","tf":0.022222222222222223}}},")":{"docs":{"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.006535947712418301},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736},"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704},"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":0.02666666666666667},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.028985507246376812},"Array/旋转数组的最小元素.html":{"ref":"Array/旋转数组的最小元素.html","tf":0.015151515151515152},"Array/矩阵覆盖.html":{"ref":"Array/矩阵覆盖.html","tf":0.0125},"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.005813953488372093},"String/替换空格.html":{"ref":"String/替换空格.html","tf":0.010416666666666666},"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.007194244604316547},"Bit/二进制中1的个数.html":{"ref":"Bit/二进制中1的个数.html","tf":0.044444444444444446}},".":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835}}},")":{"docs":{},";":{"docs":{"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.00881057268722467}}}},";":{"docs":{"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.00975609756097561},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203}}}},",":{"0":{"docs":{},",":{"0":{"docs":{},",":{"6":{"docs":{"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704}}},"docs":{}}},"docs":{}}},"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.014184397163120567},"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.0196078431372549},"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.010309278350515464},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.00881057268722467},"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502},"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943},"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.010050251256281407},"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.008849557522123894},"Array/旋转数组的最小元素.html":{"ref":"Array/旋转数组的最小元素.html","tf":0.015151515151515152},"Array/变态跳台阶.html":{"ref":"Array/变态跳台阶.html","tf":0.02},"Array/矩阵覆盖.html":{"ref":"Array/矩阵覆盖.html","tf":0.0125},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938},"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.021560574948665298},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576},"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.005780346820809248},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0036496350364963502}}},"'":{"docs":{"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":0.013333333333333334}},"s":{"docs":{},",":{"docs":{"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.018867924528301886}}}}},".":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274}}},"}":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}},";":{"docs":{"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.010050251256281407}}},",":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.004106776180698152}}}},"，":{"1":{"docs":{},"，":{"2":{"docs":{},"，":{"4":{"docs":{},"，":{"8":{"docs":{},",":{"docs":{"Array/变态跳台阶.html":{"ref":"Array/变态跳台阶.html","tf":0.02}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"时":{"docs":{},"前":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"下":{"docs":{},"标":{"docs":{},"为":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.0035971223021582736}}}}}}}}}},"队":{"docs":{},"列":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"如":{"docs":{},"还":{"docs":{},"要":{"docs":{},"取":{"docs":{},"数":{"docs":{},"给":{"docs":{},"用":{"docs":{},"户":{"docs":{},"报":{"docs":{},"错":{"docs":{},"。":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.0035971223021582736}}}}}}}}}}}}}}}}}}},"1":{"0":{"0":{"0":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625}}}}},"docs":{},",":{"docs":{"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.008849557522123894}}},"]":{"docs":{"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.008849557522123894}}}},"docs":{},".":{"docs":{"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.007692307692307693}},".":{"docs":{},".":{"1":{"0":{"9":{"docs":{"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547}}},"docs":{}},"docs":{}},"docs":{}}}},"]":{"docs":{},".":{"docs":{"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625}}}}},"docs":{"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547}},",":{"0":{"0":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047}}}}},"docs":{}},"docs":{}},"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.005917159763313609},"Matrix/二维数组中的查找.html":{"ref":"Matrix/二维数组中的查找.html","tf":0.013888888888888888}}},".":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"覆":{"docs":{},"盖":{"docs":{"Array/矩阵覆盖.html":{"ref":"Array/矩阵覆盖.html","tf":5}}}}}}},"^":{"0":{"0":{"0":{"1":{"docs":{"Bit/数值的整数次方.html":{"ref":"Bit/数值的整数次方.html","tf":0.010309278350515464}}},"docs":{}},"docs":{}},"1":{"0":{"0":{"docs":{"Bit/数值的整数次方.html":{"ref":"Bit/数值的整数次方.html","tf":0.010309278350515464}}},"docs":{}},"docs":{}},"docs":{}},"1":{"0":{"0":{"0":{"docs":{},"。":{"docs":{"Bit/数值的整数次方.html":{"ref":"Bit/数值的整数次方.html","tf":0.010309278350515464}}}},"docs":{}},"docs":{}},"1":{"0":{"1":{"docs":{"Bit/数值的整数次方.html":{"ref":"Bit/数值的整数次方.html","tf":0.010309278350515464}}},"docs":{}},"docs":{}},"docs":{}},"7":{"docs":{},".":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}},"docs":{}},")":{"docs":{},")":{"docs":{},";":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938}}}}},";":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.005044136191677175}}},"}":{"docs":{},";":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876}}}}},"1":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}},",":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.00684931506849315},"Matrix/二维数组中的查找.html":{"ref":"Matrix/二维数组中的查找.html","tf":0.013888888888888888}}},")":{"docs":{},")":{"docs":{},";":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938}}}}},".":{"docs":{},"二":{"docs":{},"进":{"docs":{},"制":{"docs":{},"中":{"1":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{"Bit/二进制中1的个数.html":{"ref":"Bit/二进制中1的个数.html","tf":5}}}}}},"docs":{}}}}}}},"2":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}},"}":{"docs":{},",":{"docs":{"Matrix/二维数组中的查找.html":{"ref":"Matrix/二维数组中的查找.html","tf":0.013888888888888888}}}},".":{"docs":{},"数":{"docs":{},"值":{"docs":{},"的":{"docs":{},"整":{"docs":{},"数":{"docs":{},"次":{"docs":{},"方":{"docs":{"Bit/数值的整数次方.html":{"ref":"Bit/数值的整数次方.html","tf":5}}}}}}}}}}},"3":{"docs":{},".":{"docs":{},"调":{"docs":{},"整":{"docs":{},"数":{"docs":{},"组":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"使":{"docs":{},"奇":{"docs":{},"数":{"docs":{},"位":{"docs":{},"于":{"docs":{},"偶":{"docs":{},"数":{"docs":{},"前":{"docs":{},"面":{"docs":{"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":5}}}}}}}}}}}}}}}}}},",":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547}}},"}":{"docs":{},",":{"docs":{"Matrix/二维数组中的查找.html":{"ref":"Matrix/二维数组中的查找.html","tf":0.013888888888888888}}}}},"5":{"docs":{"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.007246376811594203}},"]":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047}},",":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.00684931506849315}}}},"}":{"docs":{},"}":{"docs":{},";":{"docs":{"Matrix/二维数组中的查找.html":{"ref":"Matrix/二维数组中的查找.html","tf":0.013888888888888888}}}}}},"7":{"docs":{},")":{"docs":{},";":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}}},"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835},"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.006535947712418301},"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.015463917525773196},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.00881057268722467},"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.008547008547008548},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.014492753623188406},"Array/变态跳台阶.html":{"ref":"Array/变态跳台阶.html","tf":0.04},"Array/矩阵覆盖.html":{"ref":"Array/矩阵覆盖.html","tf":0.025},"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.005813953488372093},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847},"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.021739130434782608},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.007186858316221766},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.014388489208633094},"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.005780346820809248},"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.021739130434782608},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.03667481662591687},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0036496350364963502},"Bit/数值的整数次方.html":{"ref":"Bit/数值的整数次方.html","tf":0.020618556701030927}},"]":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704},"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.011834319526627219},"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.011627906976744186},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.003080082135523614},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}},".":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.00684931506849315},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736}}},";":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0072992700729927005},"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.0035971223021582736},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}},"即":{"docs":{},"差":{"docs":{},"额":{"docs":{},"相":{"docs":{},"当":{"docs":{},"于":{"docs":{},"最":{"docs":{},"大":{"docs":{},"子":{"docs":{},"数":{"docs":{},"列":{"docs":{},"中":{"docs":{},"的":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"x":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274}}}}}}}}}}}}}}}}}}},")":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}},")":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374}}}},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"整":{"docs":{},"体":{"docs":{},"后":{"docs":{},"移":{"docs":{},"一":{"docs":{},"位":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"将":{"docs":{},"找":{"docs":{},"到":{"docs":{},"的":{"docs":{},"奇":{"docs":{},"数":{"docs":{},"放":{"docs":{},"入":{"docs":{},"i":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"i":{"docs":{},"+":{"docs":{},"+":{"docs":{},"。":{"docs":{"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.005813953488372093}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"矩":{"docs":{},"形":{"docs":{},"中":{"docs":{"Matrix/二维数组中的查找.html":{"ref":"Matrix/二维数组中的查找.html","tf":0.013888888888888888}}}}},"数":{"docs":{},"都":{"docs":{},"已":{"docs":{},"经":{"docs":{},"是":{"docs":{},"在":{"docs":{},"正":{"docs":{},"确":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"上":{"docs":{},"了":{"docs":{},"，":{"docs":{},"待":{"docs":{},"选":{"docs":{},"的":{"docs":{},"范":{"docs":{},"围":{"docs":{},"是":{"docs":{},"[":{"docs":{},"i":{"docs":{},",":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}}}}}}}}}}}}}}}}}}}}},"~":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"[":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"Tree/重建二叉树.html":{"ref":"Tree/重建二叉树.html","tf":0.022222222222222223}}}}}}}}}}}}}},"，":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"是":{"docs":{},"[":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.007246376811594203}}}}}}}}}}}}}},"节":{"docs":{},"点":{"docs":{},"是":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"2":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0036496350364963502}}},"docs":{}}}}}}}}}},"根":{"docs":{},"是":{"docs":{},"i":{"docs":{},"n":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"，":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"是":{"docs":{},"[":{"docs":{},"i":{"docs":{},"n":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"下":{"docs":{},"标":{"docs":{},"的":{"docs":{},"范":{"docs":{},"围":{"docs":{},"是":{"docs":{},"[":{"docs":{},"l":{"docs":{},"o":{"docs":{},",":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}}}}}}}}}}},"第":{"docs":{},"i":{"docs":{},"轮":{"docs":{},"选":{"docs":{},"完":{"docs":{},"[":{"0":{"docs":{},".":{"docs":{},"i":{"docs":{},"]":{"docs":{},"都":{"docs":{},"在":{"docs":{},"正":{"docs":{},"确":{"docs":{},"位":{"docs":{},"置":{"docs":{},"上":{"docs":{},"了":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}}}}}}}}},"docs":{}}}}}}}},",":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}},"位":{"docs":{},"置":{"docs":{},"选":{"docs":{},"出":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"和":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},"交":{"docs":{},"换":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"再":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"[":{"1":{"docs":{},",":{"docs":{},"n":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}},"docs":{}}}}}}}}}}}},"docs":{}}}}}}}}}},"第":{"docs":{},"二":{"docs":{},"小":{"docs":{},"的":{"docs":{},"和":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"1":{"docs":{},"]":{"docs":{},"交":{"docs":{},"换":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"第":{"docs":{},"i":{"docs":{},"轮":{"docs":{},"(":{"docs":{},"i":{"docs":{},"从":{"0":{"docs":{},"开":{"docs":{},"始":{"docs":{},")":{"docs":{},"选":{"docs":{},"数":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"前":{"docs":{},"i":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{},"[":{"0":{"docs":{},",":{"docs":{},"i":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}},"docs":{}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}},"范":{"docs":{},"围":{"docs":{},"恢":{"docs":{},"复":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"大":{"docs":{},"根":{"docs":{},"堆":{"docs":{},"。":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}}}}}}}}},";":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835},"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.013071895424836602},"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.020618556701030927},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.01762114537444934},"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502},"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.011111111111111112},"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.010050251256281407},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.01775147928994083},"Array/旋转数组的最小元素.html":{"ref":"Array/旋转数组的最小元素.html","tf":0.030303030303030304},"Array/矩阵覆盖.html":{"ref":"Array/矩阵覆盖.html","tf":0.0125},"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.011627906976744186},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.01366120218579235},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.021437578814627996},"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.007518796992481203},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547},"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.011560693641618497},"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.010869565217391304},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.014598540145985401},"Bit/二进制中1的个数.html":{"ref":"Bit/二进制中1的个数.html","tf":0.022222222222222223},"Bit/数值的整数次方.html":{"ref":"Bit/数值的整数次方.html","tf":0.010309278350515464}}},",":{"2":{"docs":{},",":{"1":{"docs":{},",":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502}}},"]":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502}}}},"3":{"docs":{},",":{"0":{"docs":{"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704}}},"4":{"docs":{},",":{"5":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.006535947712418301},"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.010309278350515464},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.014388489208633094},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.00881057268722467},"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502},"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943},"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.01282051282051282},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704},"Array/跳台阶.html":{"ref":"Array/跳台阶.html","tf":0.03125},"Array/变态跳台阶.html":{"ref":"Array/变态跳台阶.html","tf":0.02},"Array/矩阵覆盖.html":{"ref":"Array/矩阵覆盖.html","tf":0.025},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.005044136191677175},"String/替换空格.html":{"ref":"String/替换空格.html","tf":0.010416666666666666},"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0025974025974025974},"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.036231884057971016},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.018480492813141684},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.009216589861751152},"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.005780346820809248},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0036496350364963502},"Bit/数值的整数次方.html":{"ref":"Bit/数值的整数次方.html","tf":0.010309278350515464}},"h":{"docs":{},"i":{"docs":{},")":{"docs":{"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805}}}}},"s":{"docs":{},"o":{"docs":{"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609}}}},"i":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}},":":{"docs":{"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.006535947712418301},"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.004405286343612335},"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.007194244604316547},"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805},"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.008849557522123894},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576},"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.005780346820809248},"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.007692307692307693},"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.010869565217391304},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}},")":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736},"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274},"Array/跳台阶.html":{"ref":"Array/跳台阶.html","tf":0.03125},"Array/变态跳台阶.html":{"ref":"Array/变态跳台阶.html","tf":0.02},"Array/矩阵覆盖.html":{"ref":"Array/矩阵覆盖.html","tf":0.025},"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.007194244604316547},"Stack-Queue/用两个栈实现队列.html":{"ref":"Stack-Queue/用两个栈实现队列.html","tf":0.013513513513513514},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.005780346820809248},"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.0125},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.010948905109489052},"Bit/数值的整数次方.html":{"ref":"Bit/数值的整数次方.html","tf":0.010309278350515464}},";":{"docs":{"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.010309278350515464},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.007194244604316547},"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.00975609756097561},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203},"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.008849557522123894},"Array/旋转数组的最小元素.html":{"ref":"Array/旋转数组的最小元素.html","tf":0.015151515151515152},"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.005813953488372093},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.01366120218579235},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0201765447667087},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.004106776180698152},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.014492753623188406},"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.011560693641618497},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0036496350364963502}},"要":{"docs":{},"注":{"docs":{},"意":{"docs":{},">":{"docs":{},">":{"docs":{},"的":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"。":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}}}}}}}},")":{"docs":{},";":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876}}}},"：":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374}}},"*":{"docs":{},"n":{"docs":{},"+":{"docs":{},"次":{"docs":{},"数":{"docs":{},"最":{"docs":{},"多":{"docs":{},"的":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"的":{"docs":{},"种":{"docs":{},"类":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"，":{"docs":{},"如":{"docs":{},"a":{"docs":{},",":{"docs":{},"b":{"docs":{},"并":{"docs":{},"列":{"docs":{},"最":{"docs":{},"多":{"docs":{},"，":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"/":{"4":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}},"docs":{}}},".":{"1":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876}}},"2":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938}}},"3":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938}}},"4":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876}}},"5":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0037831021437578815}}},"6":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938}}},"7":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876}}},"8":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938}}},"docs":{"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732}},"二":{"docs":{},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"的":{"docs":{},"查":{"docs":{},"找":{"docs":{"Matrix/二维数组中的查找.html":{"ref":"Matrix/二维数组中的查找.html","tf":5}}}}}}}}}}},"}":{"docs":{},";":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.007194244604316547}}}},"。":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.008827238335435058}},"栈":{"docs":{},"空":{"docs":{},"，":{"docs":{},"如":{"docs":{},"还":{"docs":{},"要":{"docs":{},"弹":{"docs":{},"出":{"docs":{},"给":{"docs":{},"用":{"docs":{},"户":{"docs":{},"报":{"docs":{},"错":{"docs":{},"。":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.0035971223021582736}}}}}}}}}}}}}}}}},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"最":{"docs":{},"后":{"docs":{},"在":{"docs":{},"右":{"docs":{},"半":{"docs":{},"段":{"docs":{},"没":{"docs":{},"有":{"docs":{},"找":{"docs":{},"到":{"docs":{},"更":{"docs":{},"大":{"docs":{},"的":{"docs":{},"，":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.005044136191677175}}}}}}}}}}}}}}}}}}}}}}}},"在":{"docs":{},"(":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},",":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00546448087431694}}}}}}}},"栈":{"docs":{},"满":{"docs":{},"，":{"docs":{},"如":{"docs":{},"还":{"docs":{},"要":{"docs":{},"压":{"docs":{},"入":{"docs":{},"则":{"docs":{},"给":{"docs":{},"用":{"docs":{},"户":{"docs":{},"报":{"docs":{},"错":{"docs":{},"。":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.0035971223021582736}}}}}}}}}}}}}}}}}}}}}},"那":{"docs":{},"么":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"都":{"docs":{},"可":{"docs":{},"以":{"docs":{},"选":{"docs":{},"择":{"docs":{},"走":{"docs":{},"或":{"docs":{},"者":{"docs":{},"不":{"docs":{},"走":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"2":{"docs":{},"的":{"docs":{},"n":{"docs":{},"次":{"docs":{},"方":{"docs":{},")":{"docs":{},"，":{"docs":{"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.005780346820809248}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}},"→":{"3":{"docs":{},"→":{"1":{"docs":{},"→":{"1":{"docs":{},"→":{"1":{"docs":{"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.011111111111111112}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"'":{"docs":{"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943}},"s":{"docs":{},",":{"docs":{"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943}}}}},"e":{"7":{"docs":{},",":{"docs":{"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.008849557522123894}}},"]":{"docs":{},".":{"docs":{"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.008849557522123894}}}}},"docs":{}},"的":{"docs":{},"范":{"docs":{},"围":{"docs":{},"内":{"docs":{},"。":{"docs":{"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609}}}}}}},"块":{"docs":{},"与":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"块":{"docs":{},"无":{"docs":{},"连":{"docs":{},"接":{"docs":{"Array/矩阵覆盖.html":{"ref":"Array/矩阵覆盖.html","tf":0.0125}}}}},"有":{"docs":{},"连":{"docs":{},"接":{"docs":{"Array/矩阵覆盖.html":{"ref":"Array/矩阵覆盖.html","tf":0.0125}}}}}}}}}}},"为":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}},"=":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"下":{"docs":{},"标":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}}}}}}}}}}}},">":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00546448087431694}}}},"张":{"docs":{},"都":{"docs":{},"已":{"docs":{},"经":{"docs":{},"有":{"docs":{},"序":{"docs":{},"了":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}}}},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"。":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}}}}},"2":{"0":{"docs":{"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.007246376811594203}},",":{"0":{"0":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.008849557522123894}}}}},"docs":{}},"docs":{}},"docs":{}},".":{"docs":{},".":{"docs":{},".":{"2":{"9":{"docs":{"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547}}},"docs":{}},"docs":{}}}}},"5":{"6":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}},"docs":{}},"8":{"docs":{"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.007692307692307693}}},"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.00684931506849315},"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.006535947712418301},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.00881057268722467},"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943},"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805},"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.017699115044247787},"Array/跳台阶.html":{"ref":"Array/跳台阶.html","tf":0.03125},"Array/变态跳台阶.html":{"ref":"Array/变态跳台阶.html","tf":0.02},"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.011627906976744186},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00546448087431694},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547},"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.007692307692307693},"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.0125},"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.010869565217391304},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.014669926650366748},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.005474452554744526}},".":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835}},"替":{"docs":{},"换":{"docs":{},"空":{"docs":{},"格":{"docs":{"String/替换空格.html":{"ref":"String/替换空格.html","tf":5}}}}}},".":{"docs":{},".":{"docs":{},"张":{"docs":{},"牌":{"docs":{},"比":{"docs":{},"较":{"docs":{},"，":{"docs":{},"比":{"docs":{},"前":{"docs":{},"面":{"docs":{},"的":{"docs":{},"小":{"docs":{},"就":{"docs":{},"和":{"docs":{},"前":{"docs":{},"面":{"docs":{},"的":{"docs":{},"数":{"docs":{},"交":{"docs":{},"换":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"插":{"docs":{},"第":{"docs":{},"i":{"docs":{},"张":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"前":{"docs":{},"面":{"docs":{},"i":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},",":{"1":{"docs":{},",":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502}}}},"3":{"docs":{},",":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274}}}},"docs":{"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.013071895424836602},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736},"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.008547008547008548},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.01507537688442211},"Array/矩阵覆盖.html":{"ref":"Array/矩阵覆盖.html","tf":0.0125},"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.005813953488372093},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876},"String/替换空格.html":{"ref":"String/替换空格.html","tf":0.010416666666666666},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.007334963325183374},"Matrix/二维数组中的查找.html":{"ref":"Matrix/二维数组中的查找.html","tf":0.013888888888888888}}},":":{"docs":{"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.006535947712418301},"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.004405286343612335},"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.007194244604316547},"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576},"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.005780346820809248},"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.007692307692307693},"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.010869565217391304},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}},")":{"docs":{"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704},"Array/跳台阶.html":{"ref":"Array/跳台阶.html","tf":0.03125},"Array/变态跳台阶.html":{"ref":"Array/变态跳台阶.html","tf":0.02},"Array/矩阵覆盖.html":{"ref":"Array/矩阵覆盖.html","tf":0.025},"Stack-Queue/用两个栈实现队列.html":{"ref":"Stack-Queue/用两个栈实现队列.html","tf":0.013513513513513514},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}},")":{"docs":{},";":{"docs":{"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.00881057268722467},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0037831021437578815}}}},";":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}},";":{"docs":{"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.00881057268722467},"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0072992700729927005},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047},"Array/矩阵覆盖.html":{"ref":"Array/矩阵覆盖.html","tf":0.025},"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"/":{"2":{"docs":{},")":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502},"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.007246376811594203}}}},"docs":{}}}}},"'":{"docs":{},"s":{"docs":{},",":{"docs":{"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943}}},".":{"docs":{"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943}}}}},"]":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0036496350364963502}},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"0":{"docs":{},"的":{"docs":{},"子":{"docs":{},"数":{"docs":{},"列":{"docs":{},"在":{"docs":{},"这":{"docs":{},"里":{"docs":{},"就":{"docs":{},"是":{"docs":{},"不":{"docs":{},"做":{"docs":{},"股":{"docs":{},"票":{"docs":{},"的":{"docs":{},"交":{"docs":{},"易":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274}}}}}}}}}}}}}}}}}}},"docs":{}}}}}},"父":{"docs":{},"节":{"docs":{},"点":{"docs":{},"是":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"(":{"docs":{},"i":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0036496350364963502}}}}}}}}}}}}}},")":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}},"}":{"docs":{},";":{"docs":{"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704}}}},"d":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.007334963325183374}}}},"3":{"0":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"3":{"9":{"docs":{"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547}}},"docs":{}},"docs":{}}}}},"9":{"0":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"3":{"9":{"9":{"docs":{"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547}}},"docs":{}},"docs":{}},"docs":{}}}}},"docs":{}},"docs":{"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00546448087431694},"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.007246376811594203},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547},"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.011560693641618497},"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.03076923076923077},"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.010869565217391304},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.014669926650366748}},"种":{"docs":{},"做":{"docs":{},"法":{"docs":{},"，":{"docs":{},"整":{"docs":{},"理":{"docs":{},"成":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{},"方":{"docs":{},"便":{"docs":{},"自":{"docs":{},"己":{"docs":{},"查":{"docs":{},"阅":{"docs":{},"，":{"docs":{},"也":{"docs":{},"希":{"docs":{},"望":{"docs":{},"能":{"docs":{},"与":{"docs":{},"小":{"docs":{},"伙":{"docs":{},"伴":{"docs":{},"们":{"docs":{},"共":{"docs":{},"同":{"docs":{},"刷":{"docs":{},"题":{"docs":{},"共":{"docs":{},"同":{"docs":{},"进":{"docs":{},"步":{"docs":{},"。":{"docs":{"./":{"ref":"./","tf":0.16666666666666666}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},",":{"4":{"docs":{},",":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502}}}},"docs":{"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.006535947712418301},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.007194244604316547},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.010050251256281407},"Array/矩阵覆盖.html":{"ref":"Array/矩阵覆盖.html","tf":0.0125},"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.005813953488372093},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938},"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.007692307692307693},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.004889975550122249}}},":":{"docs":{"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.004405286343612335}}},";":{"docs":{"Array/矩阵覆盖.html":{"ref":"Array/矩阵覆盖.html","tf":0.0125},"String/替换空格.html":{"ref":"String/替换空格.html","tf":0.010416666666666666}}},".":{"docs":{},"从":{"docs":{},"尾":{"docs":{},"到":{"docs":{},"头":{"docs":{},"打":{"docs":{},"印":{"docs":{},"链":{"docs":{},"表":{"docs":{"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":5}}}}}}}}}}},"}":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}},"4":{"9":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835}},".":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835}}}},"docs":{"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.006535947712418301},"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.004405286343612335},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.014669926650366748}},")":{"docs":{},";":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.01079136690647482}}}},",":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.039568345323741004},"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.008547008547008548},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.005917159763313609},"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.005813953488372093},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.004889975550122249},"Matrix/二维数组中的查找.html":{"ref":"Matrix/二维数组中的查找.html","tf":0.013888888888888888}}},":":{"docs":{"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.004405286343612335}}},"，":{"docs":{},"其":{"docs":{},"连":{"docs":{},"续":{"docs":{},"子":{"docs":{},"数":{"docs":{},"列":{"docs":{},"中":{"docs":{},"和":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"是":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274}}}}}}}}}}}}}}},"}":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}},";":{"docs":{"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704}}}},".":{"docs":{},"重":{"docs":{},"建":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{"Tree/重建二叉树.html":{"ref":"Tree/重建二叉树.html","tf":5}}}}}}}},"(":{"docs":{},"n":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}},"n":{"docs":{},"/":{"4":{"docs":{},"+":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}},"docs":{}}}},"5":{"0":{"0":{"0":{"0":{"0":{"docs":{},";":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876}}}},"5":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.004405286343612335},"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.008547008547008548},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.014669926650366748}},",":{"0":{"0":{"0":{"docs":{},",":{"0":{"0":{"0":{"docs":{},".":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547}}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"4":{"docs":{},"]":{"docs":{},",":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502}}}}},"docs":{"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.006535947712418301},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736},"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.005813953488372093},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}},"}":{"docs":{},";":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.007194244604316547}}}},")":{"docs":{},")":{"docs":{},";":{"docs":{"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.00881057268722467}}}}},".":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274}},"用":{"docs":{},"两":{"docs":{},"个":{"docs":{},"栈":{"docs":{},"实":{"docs":{},"现":{"docs":{},"队":{"docs":{},"列":{"docs":{"Stack-Queue/用两个栈实现队列.html":{"ref":"Stack-Queue/用两个栈实现队列.html","tf":5}}}}}}}}}}},"×":{"1":{"0":{"5":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}},"docs":{}},"docs":{}},"docs":{}},"]":{"docs":{},",":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}},";":{"docs":{"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576}}}},"6":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736},"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502},"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.014669926650366748}},",":{"4":{"docs":{},",":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274}}}},"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736},"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.004889975550122249}}},".":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502}},"旋":{"docs":{},"转":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"元":{"docs":{},"素":{"docs":{"Array/旋转数组的最小元素.html":{"ref":"Array/旋转数组的最小元素.html","tf":5}}}}}}}}}}}},")":{"docs":{},",":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274}}}},"}":{"docs":{},";":{"docs":{"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.005813953488372093}}}},"]":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576}},",":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576}}}}},"7":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.00684931506849315},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.004405286343612335},"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.011111111111111112},"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00546448087431694},"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.007246376811594203},"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.007692307692307693},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.014669926650366748}},",":{"1":{"0":{"docs":{},",":{"1":{"1":{"docs":{},"]":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.00684931506849315},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736},"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.005813953488372093},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.007692307692307693},"Matrix/二维数组中的查找.html":{"ref":"Matrix/二维数组中的查找.html","tf":0.013888888888888888}}},")":{"docs":{},")":{"docs":{},";":{"docs":{"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.00881057268722467},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938}}}}},".":{"docs":{},"斐":{"docs":{},"波":{"docs":{},"那":{"docs":{},"契":{"docs":{},"数":{"docs":{},"列":{"docs":{"Array/斐波那契数列.html":{"ref":"Array/斐波那契数列.html","tf":5}}}}}}}}},"]":{"docs":{},",":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}}},"8":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736},"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.014669926650366748}},")":{"docs":{},")":{"docs":{},";":{"docs":{"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938}}}}},",":{"1":{"0":{"docs":{},"]":{"docs":{},",":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}}},"docs":{}},"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736},"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.005917159763313609},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247},"Matrix/二维数组中的查找.html":{"ref":"Matrix/二维数组中的查找.html","tf":0.027777777777777776}}},".":{"docs":{},"跳":{"docs":{},"台":{"docs":{},"阶":{"docs":{"Array/跳台阶.html":{"ref":"Array/跳台阶.html","tf":5}}}}}},";":{"docs":{"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576}}}},"9":{"0":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}},"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847},"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.007246376811594203},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.014669926650366748}},",":{"1":{"1":{"docs":{},"]":{"docs":{},",":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}}},"docs":{}},"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.0136986301369863},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938},"Matrix/二维数组中的查找.html":{"ref":"Matrix/二维数组中的查找.html","tf":0.013888888888888888}}},"}":{"docs":{},";":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736}}},",":{"docs":{"Matrix/二维数组中的查找.html":{"ref":"Matrix/二维数组中的查找.html","tf":0.013888888888888888}}}},"]":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047}},",":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}},".":{"docs":{},"变":{"docs":{},"态":{"docs":{},"跳":{"docs":{},"台":{"docs":{},"阶":{"docs":{"Array/变态跳台阶.html":{"ref":"Array/变态跳台阶.html","tf":5}}}}}}}}},"docs":{},"a":{"1":{"docs":{},",":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835}}}},"2":{"docs":{},",":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835}}}},"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.16666666666666666},"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.018867924528301886},"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547}},"'":{"docs":{"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.006535947712418301},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.010050251256281407}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.011111111111111112}}}}},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805},"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.005780346820809248}}}}}},"d":{"docs":{},"d":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.00684931506849315}}},"j":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},",":{"docs":{"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943}}}}}}}}}},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.00684931506849315},"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835},"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":2.0130718954248366},"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":2.0103092783505154},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":1.2535971223021583},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.004405286343612335},"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502},"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.02830188679245283},"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.00975609756097561},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":2.5150753768844223},"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":0.013333333333333334},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":2.0144927536231885},"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.02654867256637168},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.011834319526627219},"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.029585798816568046},"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.005813953488372093},"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.007518796992481203},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547},"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.011560693641618497},"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625},"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.03260869565217391},"Matrix/二维数组中的查找.html":{"ref":"Matrix/二维数组中的查找.html","tf":0.013888888888888888}},";":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.00684931506849315},"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835},"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.006535947712418301},"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.004405286343612335},"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502},"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.007194244604316547},"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.011111111111111112},"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943},"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704},"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":0.013333333333333334},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203},"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.008849557522123894},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047},"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609},"Array/旋转数组的最小元素.html":{"ref":"Array/旋转数组的最小元素.html","tf":0.015151515151515152},"Array/斐波那契数列.html":{"ref":"Array/斐波那契数列.html","tf":0.047619047619047616},"Array/跳台阶.html":{"ref":"Array/跳台阶.html","tf":0.03125},"Array/变态跳台阶.html":{"ref":"Array/变态跳台阶.html","tf":0.02},"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.005813953488372093},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938},"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.007194244604316547},"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.007246376811594203},"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.005780346820809248},"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.007692307692307693},"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625},"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.010869565217391304},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}},",":{"docs":{"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.006535947712418301},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047},"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.005813953488372093},"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.010869565217391304}}},"[":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.0035971223021582736}},"]":{"docs":{"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.006535947712418301}}},"h":{"docs":{},"i":{"docs":{},"]":{"docs":{},")":{"docs":{"Array/旋转数组的最小元素.html":{"ref":"Array/旋转数组的最小元素.html","tf":0.015151515151515152}}}}}},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"]":{"docs":{},";":{"docs":{"Array/旋转数组的最小元素.html":{"ref":"Array/旋转数组的最小元素.html","tf":0.015151515151515152}}}}}}},"i":{"docs":{},"+":{"docs":{},"+":{"docs":{},"]":{"docs":{"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.005813953488372093}}}}},"]":{"docs":{"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.029069767441860465},"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.007518796992481203}},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},")":{"docs":{"Matrix/二维数组中的查找.html":{"ref":"Matrix/二维数组中的查找.html","tf":0.013888888888888888}}}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.0035971223021582736}}}}}}},"j":{"docs":{"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.005813953488372093}},"]":{"docs":{"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.005813953488372093}},";":{"docs":{"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.023255813953488372}}}}},"k":{"docs":{"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.005813953488372093}},"]":{"docs":{},";":{"docs":{"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.005813953488372093}}}}}},".":{"docs":{"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.004405286343612335},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805},"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":0.013333333333333334},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203},"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.005780346820809248}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"Array/旋转数组的最小元素.html":{"ref":"Array/旋转数组的最小元素.html","tf":0.030303030303030304},"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.011627906976744186},"Matrix/二维数组中的查找.html":{"ref":"Matrix/二维数组中的查找.html","tf":0.013888888888888888}},")":{"docs":{"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.005813953488372093}}},"时":{"docs":{},"队":{"docs":{},"列":{"docs":{},"为":{"docs":{},"满":{"docs":{},"，":{"docs":{},"如":{"docs":{},"还":{"docs":{},"要":{"docs":{},"加":{"docs":{},"数":{"docs":{},"给":{"docs":{},"用":{"docs":{},"户":{"docs":{},"报":{"docs":{},"错":{"docs":{},"，":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.0035971223021582736}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203},"Array/旋转数组的最小元素.html":{"ref":"Array/旋转数组的最小元素.html","tf":0.015151515151515152},"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.011627906976744186},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547},"Matrix/二维数组中的查找.html":{"ref":"Matrix/二维数组中的查找.html","tf":0.013888888888888888}},",":{"docs":{"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203}}},")":{"docs":{},";":{"docs":{"Matrix/二维数组中的查找.html":{"ref":"Matrix/二维数组中的查找.html","tf":0.013888888888888888}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.007407407407407408},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203},"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.03007518796992481},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.007407407407407408},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547}},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"1":{"docs":{},",":{"2":{"docs":{},",":{"3":{"docs":{},",":{"4":{"docs":{},")":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}}}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"4":{"docs":{},",":{"5":{"docs":{},",":{"6":{"docs":{},")":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}}}}}}},"docs":{}}},"docs":{}}},"7":{"docs":{},",":{"8":{"docs":{},")":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}}}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}},")":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.006160164271047228},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.01},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203}}},";":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.018518518518518517},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203},"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.007518796992481203},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.007186858316221766},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.01},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.018518518518518517},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.014388489208633094}}}},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.007407407407407408},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.004106776180698152},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.01},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.011111111111111112},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.007518796992481203}}}}}}}}}}}}}}}}}}}}}}}}}}},">":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}}},"s":{"docs":{},")":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.007407407407407408},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.007407407407407408}}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.011111111111111112},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.011111111111111112}}}}}}}}}}},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203}}}}}}}},"t":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547}}}}},"2":{"docs":{},")":{"docs":{},";":{"docs":{"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547}}}}},"3":{"docs":{},")":{"docs":{},";":{"docs":{"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547}}}}},"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.007518796992481203}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.007518796992481203}}}}}}},"s":{"docs":{},")":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.007407407407407408},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.007407407407407408}}},".":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.0035971223021582736}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.0035971223021582736}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"f":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"t":{"docs":{},"h":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.007194244604316547}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.0035971223021582736}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.0035971223021582736}}}}}}}}}}}}},"i":{"docs":{},"v":{"docs":{"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.005780346820809248}}}}},"e":{"docs":{},"a":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835}}}},"g":{"docs":{},"s":{"docs":{},")":{"docs":{"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.004405286343612335},"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704},"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.005813953488372093},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.005044136191677175},"String/替换空格.html":{"ref":"String/替换空格.html","tf":0.010416666666666666},"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.007518796992481203},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547},"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625},"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.005952380952380952},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247},"Matrix/二维数组中的查找.html":{"ref":"Matrix/二维数组中的查找.html","tf":0.013888888888888888}}}}}},"s":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.00684931506849315},"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.004405286343612335},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203},"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.007246376811594203},"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.010869565217391304}}}}},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.014792899408284023}}}}}},"k":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}},"b":{"docs":{},"o":{"docs":{},"v":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835},"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.007692307692307693}}}},"s":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{"Bit/数值的整数次方.html":{"ref":"Bit/数值的整数次方.html","tf":0.010309278350515464}}}}}}},"i":{"docs":{},")":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835}},".":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835}}}}},"x":{"docs":{},"i":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835}},"s":{"docs":{},".":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.006535947712418301},"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}}},"a":{"docs":{},"l":{"docs":{},"y":{"docs":{},"s":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},")":{"docs":{"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}}}}}}}}}}},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.006535947712418301},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.021739130434782608}}}}},"r":{"docs":{},"o":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},",":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502}}}}}}}}}},"=":{"2":{"docs":{},",":{"docs":{},"b":{"docs":{},"=":{"2":{"docs":{},",":{"docs":{},"d":{"docs":{},"=":{"1":{"docs":{"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805}}},"docs":{}}}}},"docs":{}}}}},"docs":{}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.0410958904109589},"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.02127659574468085},"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.0392156862745098},"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.041237113402061855},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.017985611510791366},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.048458149779735685},"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.011111111111111112},"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.06569343065693431},"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.02877697841726619},"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.03333333333333333},"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.029914529914529916},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.04878048780487805},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704},"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":0.013333333333333334},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203},"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.05309734513274336},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.020710059171597635},"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.01775147928994083},"Array/旋转数组的最小元素.html":{"ref":"Array/旋转数组的最小元素.html","tf":0.030303030303030304},"Array/斐波那契数列.html":{"ref":"Array/斐波那契数列.html","tf":0.047619047619047616},"Array/跳台阶.html":{"ref":"Array/跳台阶.html","tf":0.03125},"Array/变态跳台阶.html":{"ref":"Array/变态跳台阶.html","tf":0.02},"Array/矩阵覆盖.html":{"ref":"Array/矩阵覆盖.html","tf":0.025},"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.01744186046511628},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.040983606557377046},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.044136191677175286},"String/替换空格.html":{"ref":"String/替换空格.html","tf":0.020833333333333332},"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.007518796992481203},"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.04316546762589928},"Stack-Queue/用两个栈实现队列.html":{"ref":"Stack-Queue/用两个栈实现队列.html","tf":0.013513513513513514},"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.00909090909090909},"Tree/重建二叉树.html":{"ref":"Tree/重建二叉树.html","tf":0.022222222222222223},"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.007246376811594203},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.013347022587268994},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.02304147465437788},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.014388489208633094},"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.017341040462427744},"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.015384615384615385},"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.005952380952380952},"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.010869565217391304},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.009779951100244499},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.04562043795620438},"Bit/二进制中1的个数.html":{"ref":"Bit/二进制中1的个数.html","tf":0.06666666666666667},"Bit/数值的整数次方.html":{"ref":"Bit/数值的整数次方.html","tf":0.030927835051546393}},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":10}}}}}}}},"[":{"docs":{},"]":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.02054794520547945},"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.03597122302158273},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.004405286343612335},"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.011111111111111112},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.03015075376884422},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047},"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.005813953488372093},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876},"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.007194244604316547},"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.007246376811594203},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.006160164271047228},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.013824884792626729},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.01},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.013605442176870748},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.021739130434782608},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.005474452554744526}},"{":{"1":{"0":{"docs":{},",":{"1":{"docs":{},",":{"2":{"docs":{},",":{"7":{"docs":{},",":{"6":{"docs":{},",":{"1":{"docs":{},",":{"5":{"docs":{},"}":{"docs":{},";":{"docs":{"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{},",":{"1":{"docs":{},",":{"2":{"docs":{},"}":{"docs":{},";":{"docs":{"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374}}}}},"docs":{}}},"2":{"docs":{},",":{"2":{"docs":{},",":{"4":{"docs":{},"}":{"docs":{},";":{"docs":{"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203}}}}},"docs":{}}},"3":{"docs":{},",":{"4":{"docs":{},"}":{"docs":{},";":{"docs":{"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203}}}}},"docs":{}}},"docs":{}}},"3":{"docs":{},",":{"5":{"docs":{},",":{"6":{"docs":{},"}":{"docs":{},";":{"docs":{"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.004405286343612335}}}}},"docs":{}}},"docs":{}}},"docs":{"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.01507537688442211}}}},"2":{"docs":{},",":{"5":{"docs":{},",":{"2":{"docs":{},",":{"1":{"docs":{},",":{"2":{"docs":{},"}":{"docs":{},";":{"docs":{"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"9":{"docs":{},",":{"docs":{"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704}}}},"docs":{},"i":{"docs":{},",":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.00684931506849315}}}}},"[":{"docs":{},"]":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076},"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.007692307692307693},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247},"Matrix/二维数组中的查找.html":{"ref":"Matrix/二维数组中的查找.html","tf":0.027777777777777776}},"{":{"docs":{},"{":{"1":{"docs":{},",":{"2":{"docs":{},",":{"3":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"4":{"docs":{},",":{"5":{"docs":{},",":{"6":{"docs":{},"}":{"docs":{},",":{"docs":{},"{":{"7":{"docs":{},",":{"8":{"docs":{},",":{"9":{"docs":{},"}":{"docs":{},"}":{"docs":{},";":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}}}},"docs":{}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{"Matrix/二维数组中的查找.html":{"ref":"Matrix/二维数组中的查找.html","tf":0.013888888888888888}}}},"docs":{}}}}}},"m":{"docs":{},"]":{"docs":{},";":{"docs":{"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.011111111111111112}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"]":{"docs":{},";":{"docs":{"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704}}}}}}}}}}}}}},"]":{"docs":{},"[":{"docs":{},"m":{"docs":{},"]":{"docs":{},";":{"docs":{"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.007692307692307693}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"]":{"docs":{},";":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}}}}}},"e":{"docs":{},"g":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736},"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502},"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203},"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.02654867256637168},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047},"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00546448087431694},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547},"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625},"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.021739130434782608}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},",":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.00684931506849315},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.01},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704},"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.005780346820809248}}},".":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576}}},":":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}},".":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.008875739644970414}}}}}}}}}}},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274}}},")":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047}}},",":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.008875739644970414}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},"o":{"1":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},",":{"docs":{"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.007194244604316547}}}}}}}}}},"docs":{}}}}}}}}}}},"[":{"docs":{},"]":{"docs":{"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203},"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.007518796992481203},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"]":{"docs":{},";":{"docs":{"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.007518796992481203}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547}}}}}}}}}}}}}}}}}}},"r":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}},"r":{"docs":{},"v":{"docs":{"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":3.3693045563549155},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.01092896174863388},"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.01875}},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.007194244604316547}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.007194244604316547}}}}}},".":{"docs":{"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.007194244604316547},"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.007194244604316547}}}}}}}},"s":{"docs":{},")":{"docs":{"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.014388489208633094}}},",":{"docs":{"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.007194244604316547}}},".":{"docs":{"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.007194244604316547},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.007194244604316547}}}}}}}}}},",":{"docs":{"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625}}}}}}}},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.00684931506849315}}}},"e":{"docs":{},"x":{"docs":{"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.00881057268722467},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203},"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.023121387283236993}},",":{"docs":{"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732}}},"[":{"0":{"docs":{},",":{"docs":{},"n":{"docs":{"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609}}}}},"docs":{}},";":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.0035971223021582736}}},"]":{"docs":{},";":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.0035971223021582736}}}},".":{"docs":{"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.017341040462427744}}},"为":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.00684931506849315},"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.006535947712418301},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.005917159763313609},"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00546448087431694},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.012224938875305624}},":":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835},"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.010309278350515464},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.007194244604316547},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.01762114537444934},"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.007407407407407408},"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502},"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.014388489208633094},"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.011111111111111112},"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943},"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.008547008547008548},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.00975609756097561},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704},"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":0.013333333333333334},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203},"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.008849557522123894},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.008213552361396304},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.009216589861751152},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.01},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203},"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.011560693641618497},"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.015384615384615385},"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625},"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.021739130434782608}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":2.504405286343612}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":0.013333333333333334}}}}}},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}},"e":{"docs":{},".":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"Tree/重建二叉树.html":{"ref":"Tree/重建二叉树.html","tf":0.044444444444444446},"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.028985507246376812}},";":{"docs":{"Tree/重建二叉树.html":{"ref":"Tree/重建二叉树.html","tf":0.044444444444444446},"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.014492753623188406}}},"]":{"docs":{},"，":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"是":{"docs":{},"[":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203}}}}}},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},")":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.007194244604316547}}}}}}},"i":{"docs":{"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.005780346820809248}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"Tree/重建二叉树.html":{"ref":"Tree/重建二叉树.html","tf":0.022222222222222223}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":1.450310559006211}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0025974025974025974}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0025974025974025974}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0025974025974025974}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0025974025974025974}}}}}}}}}}}}},")":{"docs":{"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.007246376811594203}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},")":{"docs":{"Tree/重建二叉树.html":{"ref":"Tree/重建二叉树.html","tf":0.022222222222222223},"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.007246376811594203}}},"]":{"docs":{"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.007246376811594203}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.043478260869565216}}}}}}},")":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.00684931506849315},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0036496350364963502}},";":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.0136986301369863},"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.025925925925925925},"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.014388489208633094},"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.011111111111111112},"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203},"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.017699115044247787},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.005917159763313609},"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.01775147928994083},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00546448087431694},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0037831021437578815},"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.03007518796992481},"Stack-Queue/用两个栈实现队列.html":{"ref":"Stack-Queue/用两个栈实现队列.html","tf":0.013513513513513514},"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.003896103896103896},"Tree/重建二叉树.html":{"ref":"Tree/重建二叉树.html","tf":0.022222222222222223},"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.007246376811594203},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.018433179723502304},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.03},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.027210884353741496},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.022222222222222223},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.036231884057971016},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.03597122302158273},"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}},"s":{"docs":{},"s":{"docs":{"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.005780346820809248}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.007194244604316547}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},";":{"docs":{"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609}}}}}}}}}}}}}}},"a":{"docs":{},"g":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":3.3382233088834554}},"e":{"docs":{},".":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}}}}},";":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736},"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.005813953488372093},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}},"s":{"docs":{},":":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.007407407407407408},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.004106776180698152},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.009216589861751152}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943}}}},"h":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274}}}},".":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.008547008547008548}},"e":{"docs":{},".":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274}}}}},",":{"docs":{"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.005813953488372093},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.005474452554744526}}},"从":{"docs":{},"左":{"docs":{},"向":{"docs":{},"右":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"找":{"docs":{},"到":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"偶":{"docs":{},"数":{"docs":{},"。":{"docs":{"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.005813953488372093}}}}}}}}}}}}}}}}},"存":{"docs":{},"偶":{"docs":{},"数":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"，":{"docs":{},"j":{"docs":{},"存":{"docs":{},"i":{"docs":{},"之":{"docs":{},"后":{"docs":{},"的":{"docs":{},"奇":{"docs":{},"数":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.005813953488372093}}}}}}}}}}}}}}}}}}}},"i":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.003080082135523614},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":2.5},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":3.333333333333333},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":3.333333333333333},"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":2}}},"）":{"docs":{},"，":{"docs":{},"按":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"进":{"docs":{},"行":{"docs":{},"先":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"。":{"docs":{"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547}}}}}}}}}}}}}},"d":{"docs":{},"l":{"docs":{"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.0125}},"e":{"docs":{},".":{"docs":{"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.0125}}}}}},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}}}}}}}}}}}}},"小":{"docs":{},"仙":{"docs":{},"女":{"docs":{},"算":{"docs":{},"法":{"docs":{},"修":{"docs":{},"仙":{"docs":{},"之":{"docs":{},"路":{"docs":{"./":{"ref":"./","tf":0.16666666666666666}}}}}}}}}},"和":{"docs":{},"为":{"0":{"docs":{},"，":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"也":{"docs":{},"需":{"docs":{},"要":{"docs":{},"+":{"1":{"docs":{"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.008849557522123894}}},"docs":{}}}}}}}}}}}},"docs":{}}}},"本":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{},"是":{"docs":{},"按":{"docs":{},"刷":{"docs":{},"题":{"docs":{},"的":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{},"分":{"docs":{},"类":{"docs":{},"，":{"docs":{},"全":{"docs":{},"书":{"docs":{},"用":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"一":{"docs":{},"般":{"docs":{},"每":{"docs":{},"个":{"docs":{},"题":{"docs":{},"里":{"docs":{},"都":{"docs":{},"有":{"2":{"docs":{"./":{"ref":"./","tf":0.16666666666666666}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"书":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"u":{"docs":{},"b":{"docs":{},"地":{"docs":{},"址":{"docs":{},"：":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"u":{"docs":{},"b":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"l":{"docs":{},"m":{"docs":{},"t":{"docs":{},"s":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{},"i":{"docs":{},"e":{"docs":{},"/":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{"./":{"ref":"./","tf":0.16666666666666666}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"联":{"docs":{},"系":{"docs":{},"邮":{"docs":{},"箱":{"docs":{},"：":{"docs":{},"l":{"docs":{},"m":{"docs":{},"t":{"docs":{},"s":{"docs":{},"u":{"docs":{},"n":{"docs":{},"n":{"docs":{},"i":{"docs":{},"e":{"docs":{},"@":{"1":{"6":{"3":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.16666666666666666}}}}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}},"(":{"docs":{},"i":{"docs":{"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609},"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.005813953488372093},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.005474452554744526}},"n":{"docs":{},"t":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.0273972602739726},"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.006535947712418301},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736},"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.007407407407407408},"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.010948905109489052},"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.011111111111111112},"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.008547008547008548},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.014634146341463415},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.020100502512562814},"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":0.013333333333333334},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.028985507246376812},"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.017699115044247787},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.01775147928994083},"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.011834319526627219},"Array/矩阵覆盖.html":{"ref":"Array/矩阵覆盖.html","tf":0.0125},"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.005813953488372093},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00546448087431694},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876},"String/替换空格.html":{"ref":"String/替换空格.html","tf":0.010416666666666666},"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.007518796992481203},"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987},"Tree/重建二叉树.html":{"ref":"Tree/重建二叉树.html","tf":0.022222222222222223},"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.007246376811594203},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.011293634496919919},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.01},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.007407407407407408},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.014388489208633094},"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.011560693641618497},"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.007692307692307693},"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.010869565217391304},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.009779951100244499},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0072992700729927005}},"[":{"docs":{},"]":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}},"e":{"docs":{},"g":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.007407407407407408},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.01},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.007407407407407408},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547}}},"r":{"docs":{},"v":{"docs":{"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.014388489208633094}}}}},"*":{"docs":{},")":{"docs":{},"a":{"docs":{},";":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}},"b":{"docs":{},";":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}}}},")":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.005474452554744526}}}},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576}}},"s":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},")":{"docs":{},",":{"docs":{"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.010869565217391304}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":0.013333333333333334}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.0035971223021582736}}}}},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.007194244604316547}}}}}},",":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.02127659574468085}}},".":{"docs":{},"e":{"docs":{},".":{"docs":{},",":{"docs":{"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732},"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274}}}}}}},"b":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835}}}}},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{"Bit/数值的整数次方.html":{"ref":"Bit/数值的整数次方.html","tf":0.020618556701030927}}}}}},"h":{"docs":{},"i":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.014184397163120567},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.004405286343612335},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.005474452554744526}}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}}}},"l":{"docs":{},"o":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835},"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.010309278350515464},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.013215859030837005},"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0072992700729927005},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047},"Array/旋转数组的最小元素.html":{"ref":"Array/旋转数组的最小元素.html","tf":0.015151515151515152},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00819672131147541},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0072992700729927005}}},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}}}},"n":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.01},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.007518796992481203}}}}}}}}},"n":{"docs":{"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203},"Array/斐波那契数列.html":{"ref":"Array/斐波那契数列.html","tf":0.047619047619047616},"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625}},"u":{"docs":{},"m":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835},"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.007194244604316547},"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943},"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":0.02666666666666667},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203},"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.012610340479192938},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.004106776180698152},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.01},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.005474452554744526}},"s":{"docs":{},"[":{"docs":{},"l":{"docs":{},"o":{"docs":{},"]":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835}}}}},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"]":{"docs":{"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00546448087431694},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876}}}}}},"i":{"docs":{},"]":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047},"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203}}}}}}}},"h":{"docs":{},"i":{"docs":{},"]":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047}}}}},"j":{"docs":{},"]":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.006535947712418301}}}}}}}}}},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609}}}}}}}},";":{"docs":{"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.013071895424836602}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.01762114537444934},"Array/跳台阶.html":{"ref":"Array/跳台阶.html","tf":0.03125},"Array/变态跳台阶.html":{"ref":"Array/变态跳台阶.html","tf":0.02},"Array/矩阵覆盖.html":{"ref":"Array/矩阵覆盖.html","tf":0.0375},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876}},")":{"docs":{},",":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576}}}}},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.01},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"Array/旋转数组的最小元素.html":{"ref":"Array/旋转数组的最小元素.html","tf":0.015151515151515152},"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.011627906976744186},"Matrix/二维数组中的查找.html":{"ref":"Matrix/二维数组中的查找.html","tf":0.013888888888888888}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}}}}}},"[":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"]":{"docs":{"Array/旋转数组的最小元素.html":{"ref":"Array/旋转数组的最小元素.html","tf":0.015151515151515152}}}}}},"j":{"docs":{},"]":{"docs":{"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.005813953488372093}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.010869565217391304}}}}}}},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502}}}}}}},"p":{"docs":{},"y":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047}}}}}}}},"u":{"docs":{},"r":{"docs":{"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.007518796992481203},"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.005194805194805195},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.00909090909090909},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.00909090909090909},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},")":{"docs":{},".":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576}}}}}},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.007194244604316547}}}}}}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.01948051948051948},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0072992700729927005},"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}}},"p":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},")":{"docs":{"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.014634146341463415}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076}}}}}}}}}}}}},"r":{"docs":{},"k":{"docs":{"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.007692307692307693}}}}},"i":{"docs":{},"n":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047}}}}},"p":{"1":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}},"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.008547008547008548}}}}},"e":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.007246376811594203}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.007194244604316547}}}}}}}}}}}}}}}}}},"!":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"1":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"Stack-Queue/用两个栈实现队列.html":{"ref":"Stack-Queue/用两个栈实现队列.html","tf":0.013513513513513514}}}}}}}}}}}}}},"2":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"Stack-Queue/用两个栈实现队列.html":{"ref":"Stack-Queue/用两个栈实现队列.html","tf":0.013513513513513514}}}}}}}}}}}}}},"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.006493506493506494}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.003896103896103896}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.0035971223021582736}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.0035971223021582736}}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0025974025974025974},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},")":{"docs":{"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},")":{"docs":{},")":{"docs":{"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.011834319526627219}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}}},"t":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},")":{"docs":{"String/替换空格.html":{"ref":"String/替换空格.html","tf":0.010416666666666666}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.011560693641618497}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.011904761904761904}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}}}},"(":{"docs":{},"h":{"docs":{},"i":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0036496350364963502}}}},"f":{"docs":{},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{"Bit/二进制中1的个数.html":{"ref":"Bit/二进制中1的个数.html","tf":0.022222222222222223}}}}}}},"*":{"docs":{},"p":{"docs":{},"a":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}},"b":{"docs":{},")":{"docs":{},";":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"1":{"docs":{},")":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938}}}},"docs":{}}}}}}}}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.017857142857142856},"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.010869565217391304}}}}},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{"Bit/二进制中1的个数.html":{"ref":"Bit/二进制中1的个数.html","tf":0.022222222222222223}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"1":{"docs":{},",":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938}}}},"docs":{}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.007194244604316547}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.007194244604316547}}}}}}}}}}}}},"回":{"docs":{},"顾":{"docs":{},"先":{"docs":{},"序":{"docs":{},"：":{"docs":{},"用":{"docs":{},"栈":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"弹":{"docs":{},"出":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"作":{"docs":{},"为":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"打":{"docs":{},"印":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"*":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.02054794520547945},"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.06382978723404255},"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.032679738562091505},"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.010309278350515464},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.025179856115107913},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.004405286343612335},"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502},"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.08633093525179857},"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.044444444444444446},"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.02830188679245283},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.06341463414634146},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.035175879396984924},"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.05309734513274336},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.029585798816568046},"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.05917159763313609},"Array/旋转数组的最小元素.html":{"ref":"Array/旋转数组的最小元素.html","tf":0.030303030303030304},"Array/斐波那契数列.html":{"ref":"Array/斐波那契数列.html","tf":0.14285714285714285},"Array/跳台阶.html":{"ref":"Array/跳台阶.html","tf":0.09375},"Array/变态跳台阶.html":{"ref":"Array/变态跳台阶.html","tf":0.08},"Array/矩阵覆盖.html":{"ref":"Array/矩阵覆盖.html","tf":0.075},"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.06976744186046512},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.05422446406052964},"String/替换空格.html":{"ref":"String/替换空格.html","tf":0.020833333333333332},"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.03759398496240601},"Stack-Queue/用两个栈实现队列.html":{"ref":"Stack-Queue/用两个栈实现队列.html","tf":0.10810810810810811},"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987},"Tree/重建二叉树.html":{"ref":"Tree/重建二叉树.html","tf":0.06666666666666667},"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.050724637681159424},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.006160164271047228},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.014492753623188406},"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.017341040462427744},"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.03076923076923077},"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.05},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.04156479217603912},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.023722627737226276},"Bit/二进制中1的个数.html":{"ref":"Bit/二进制中1的个数.html","tf":0.08888888888888889},"Bit/数值的整数次方.html":{"ref":"Bit/数值的整数次方.html","tf":0.09278350515463918}},"/":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.02054794520547945},"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.014184397163120567},"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.006535947712418301},"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.01079136690647482},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.00881057268722467},"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0072992700729927005},"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.014388489208633094},"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.011111111111111112},"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943},"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.01282051282051282},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.01951219512195122},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704},"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":0.013333333333333334},"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.017699115044247787},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.008875739644970414},"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.011834319526627219},"Array/旋转数组的最小元素.html":{"ref":"Array/旋转数组的最小元素.html","tf":0.015151515151515152},"Array/斐波那契数列.html":{"ref":"Array/斐波那契数列.html","tf":0.047619047619047616},"Array/跳台阶.html":{"ref":"Array/跳台阶.html","tf":0.03125},"Array/变态跳台阶.html":{"ref":"Array/变态跳台阶.html","tf":0.02},"Array/矩阵覆盖.html":{"ref":"Array/矩阵覆盖.html","tf":0.0125},"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.011627906976744186},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.012610340479192938},"String/替换空格.html":{"ref":"String/替换空格.html","tf":0.020833333333333332},"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.015037593984962405},"Stack-Queue/用两个栈实现队列.html":{"ref":"Stack-Queue/用两个栈实现队列.html","tf":0.013513513513513514},"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.007246376811594203},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.003080082135523614},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203},"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.005780346820809248},"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.007692307692307693},"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.010869565217391304},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.004889975550122249},"Matrix/二维数组中的查找.html":{"ref":"Matrix/二维数组中的查找.html","tf":0.013888888888888888},"Bit/二进制中1的个数.html":{"ref":"Bit/二进制中1的个数.html","tf":0.022222222222222223},"Bit/数值的整数次方.html":{"ref":"Bit/数值的整数次方.html","tf":0.020618556701030927}}},"=":{"docs":{"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.01507537688442211}}},"d":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609}}}}}}}},"a":{"docs":{},",":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}},"b":{"docs":{},")":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}},"p":{"docs":{},"a":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}},"b":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}}},"+":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.0136986301369863},"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.010309278350515464},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.025179856115107913},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.030837004405286344},"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.011111111111111112},"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.029197080291970802},"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.008547008547008548},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.00975609756097561},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.014492753623188406},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.011834319526627219},"Array/旋转数组的最小元素.html":{"ref":"Array/旋转数组的最小元素.html","tf":0.015151515151515152},"Array/跳台阶.html":{"ref":"Array/跳台阶.html","tf":0.03125},"Array/变态跳台阶.html":{"ref":"Array/变态跳台阶.html","tf":0.12},"Array/矩阵覆盖.html":{"ref":"Array/矩阵覆盖.html","tf":0.025},"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.005813953488372093},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.01912568306010929},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.02395964691046658},"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.02857142857142857},"Tree/重建二叉树.html":{"ref":"Tree/重建二叉树.html","tf":0.044444444444444446},"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.08695652173913043},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.007186858316221766},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.013824884792626729},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.01},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.014814814814814815},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.014388489208633094},"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.03468208092485549},"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.0125},"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.010869565217391304},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.03667481662591687},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.04562043795620438}},"=":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502}}},"+":{"docs":{},"]":{"docs":{"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":0.013333333333333334}}},";":{"docs":{"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625}}},")":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}}},"/":{"docs":{"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.00881057268722467},"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805},"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987},"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.014492753623188406},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.009124087591240875},"Bit/数值的整数次方.html":{"ref":"Bit/数值的整数次方.html","tf":0.020618556701030927}},"*":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.00684931506849315},"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.006535947712418301},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.00881057268722467},"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502},"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.01282051282051282},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704},"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":0.013333333333333334},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.008875739644970414},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.003080082135523614},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.004889975550122249}},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"*":{"docs":{},"/":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.00684931506849315},"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.014184397163120567},"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.006535947712418301},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.013215859030837005},"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0072992700729927005},"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.011111111111111112},"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943},"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.01282051282051282},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.014634146341463415},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.010050251256281407},"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":0.013333333333333334},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203},"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.008849557522123894},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.011834319526627219},"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.011834319526627219},"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.006493506493506494},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203},"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.007692307692307693},"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.0125},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.004889975550122249}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"区":{"docs":{},"方":{"docs":{},"法":{"2":{"docs":{},"：":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835}}}},"docs":{}}},"看":{"docs":{},"到":{"docs":{},"的":{"docs":{},"：":{"docs":{},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805}}}}}}}}}}},"：":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047}}}}}}}}}}}},"自":{"docs":{},"想":{"1":{"docs":{},"：":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835},"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.008849557522123894},"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.007692307692307693},"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625},"Matrix/二维数组中的查找.html":{"ref":"Matrix/二维数组中的查找.html","tf":0.013888888888888888}},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{},"背":{"docs":{},"包":{"docs":{},"问":{"docs":{},"题":{"docs":{},"：":{"docs":{"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.011111111111111112}}}}}}}}}}},"排":{"docs":{},"序":{"docs":{},"再":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"一":{"docs":{},"遍":{"docs":{},"找":{"docs":{},"到":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609}}}}}}}}}}}}}}}}}}},"用":{"docs":{},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"²":{"docs":{},")":{"docs":{},"，":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.010869565217391304}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{},"：":{"docs":{},"荷":{"docs":{},"兰":{"docs":{},"国":{"docs":{},"旗":{"docs":{},"问":{"docs":{},"题":{"docs":{"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943}}}}}}}}}},"己":{"docs":{},"没":{"docs":{},"想":{"docs":{},"到":{"docs":{},"，":{"docs":{},"看":{"docs":{},"的":{"docs":{},"讨":{"docs":{},"论":{"docs":{},"区":{"docs":{},"的":{"docs":{},"：":{"docs":{"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203}}}}}}}}}}}}}}},"*":{"docs":{"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.01079136690647482},"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.014388489208633094},"Array/旋转数组的最小元素.html":{"ref":"Array/旋转数组的最小元素.html","tf":0.015151515151515152},"Array/斐波那契数列.html":{"ref":"Array/斐波那契数列.html","tf":0.047619047619047616},"Array/跳台阶.html":{"ref":"Array/跳台阶.html","tf":0.03125},"Array/变态跳台阶.html":{"ref":"Array/变态跳台阶.html","tf":0.02},"Array/矩阵覆盖.html":{"ref":"Array/矩阵覆盖.html","tf":0.0125},"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.011627906976744186},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.01639344262295082},"String/替换空格.html":{"ref":"String/替换空格.html","tf":0.020833333333333332},"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.015037593984962405},"Stack-Queue/用两个栈实现队列.html":{"ref":"Stack-Queue/用两个栈实现队列.html","tf":0.013513513513513514},"Tree/重建二叉树.html":{"ref":"Tree/重建二叉树.html","tf":0.022222222222222223},"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.007246376811594203},"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.005780346820809248},"Bit/二进制中1的个数.html":{"ref":"Bit/二进制中1的个数.html","tf":0.022222222222222223},"Bit/数值的整数次方.html":{"ref":"Bit/数值的整数次方.html","tf":0.020618556701030927}}},"i":{"docs":{},"f":{"docs":{"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.004405286343612335},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805}}}},"讨":{"docs":{},"论":{"docs":{},"区":{"docs":{},"：":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704}}}}}},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502}}}}}}},"评":{"docs":{},"论":{"docs":{},"区":{"docs":{},"最":{"docs":{},"简":{"docs":{},"方":{"docs":{},"法":{"docs":{},"：":{"docs":{},"b":{"docs":{},"o":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047}}}}},"《":{"docs":{},"剑":{"docs":{},"指":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"第":{"2":{"docs":{},"版":{"docs":{},"》":{"docs":{},"p":{"3":{"9":{"docs":{},"：":{"docs":{"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609}}}},"docs":{}},"docs":{}}}}},"docs":{}}}}}}}}}},"把":{"docs":{},"常":{"docs":{},"用":{"docs":{},"的":{"docs":{},"变":{"docs":{},"量":{"docs":{},"变":{"docs":{},"成":{"docs":{},"全":{"docs":{},"局":{"docs":{},"的":{"docs":{},"减":{"docs":{},"少":{"docs":{},"参":{"docs":{},"数":{"docs":{},"传":{"docs":{},"递":{"docs":{},"*":{"docs":{},"/":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}}}}}}}}}}}}}}}}}}},"必":{"docs":{},"然":{"docs":{},"是":{"docs":{},"看":{"docs":{},"的":{"docs":{},"讨":{"docs":{},"论":{"docs":{},"区":{"docs":{},"的":{"docs":{},"：":{"docs":{"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}}}}}}}}}}}},"比":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"7":{"8":{"docs":{"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203}}},"docs":{}},"docs":{}}}}}}}}}}},"/":{"docs":{"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.014388489208633094},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.01762114537444934},"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.007407407407407408},"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0072992700729927005},"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.022222222222222223},"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.008849557522123894},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.01775147928994083},"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609},"Array/旋转数组的最小元素.html":{"ref":"Array/旋转数组的最小元素.html","tf":0.015151515151515152},"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.011627906976744186},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.01639344262295082},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.031525851197982346},"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.007194244604316547},"Stack-Queue/用两个栈实现队列.html":{"ref":"Stack-Queue/用两个栈实现队列.html","tf":0.02702702702702703},"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.04415584415584416},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.007186858316221766},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.011111111111111112},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203},"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.03468208092485549},"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.017857142857142856},"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.010869565217391304},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.022004889975550123},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.009124087591240875},"Bit/二进制中1的个数.html":{"ref":"Bit/二进制中1的个数.html","tf":0.022222222222222223}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"2":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.007407407407407408},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.007407407407407408}}}}}}}}}}}}}}}}},"docs":{}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.011904761904761904}}}}}}}}},"数":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"在":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"l":{"docs":{},"o":{"docs":{},"]":{"docs":{"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00546448087431694}}}}},"从":{"docs":{},"小":{"docs":{},"到":{"docs":{},"大":{"docs":{},"排":{"docs":{},"序":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"3":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.005952380952380952}}}}}}}},"4":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.005952380952380952}}}}}}}},"docs":{}}}}}},"\\":{"docs":{"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.06474820143884892}}}},"=":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.07534246575342465},"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.02127659574468085},"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.0718954248366013},"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.04639175257731959},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.07553956834532374},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.02643171806167401},"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.037037037037037035},"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.08029197080291971},"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.04316546762589928},"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.06666666666666667},"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.08547008547008547},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.03902439024390244},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.05527638190954774},"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":0.02666666666666667},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.057971014492753624},"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.07079646017699115},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.06804733727810651},"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.029585798816568046},"Array/旋转数组的最小元素.html":{"ref":"Array/旋转数组的最小元素.html","tf":0.045454545454545456},"Array/跳台阶.html":{"ref":"Array/跳台阶.html","tf":0.09375},"Array/变态跳台阶.html":{"ref":"Array/变态跳台阶.html","tf":0.1},"Array/矩阵覆盖.html":{"ref":"Array/矩阵覆盖.html","tf":0.1125},"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.05813953488372093},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.040983606557377046},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.058007566204287514},"String/替换空格.html":{"ref":"String/替换空格.html","tf":0.0625},"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.09774436090225563},"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.03237410071942446},"Stack-Queue/用两个栈实现队列.html":{"ref":"Stack-Queue/用两个栈实现队列.html","tf":0.02702702702702703},"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.048051948051948054},"Tree/重建二叉树.html":{"ref":"Tree/重建二叉树.html","tf":0.06666666666666667},"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.057971014492753624},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.049281314168377825},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.05069124423963134},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.02},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.04081632653061224},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.02962962962962963},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.028985507246376812},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.03597122302158273},"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.04046242774566474},"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.046153846153846156},"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.025},"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.10119047619047619},"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.03260869565217391},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.034229828850855744},"Matrix/二维数组中的查找.html":{"ref":"Matrix/二维数组中的查找.html","tf":0.027777777777777776},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.07116788321167883},"Bit/二进制中1的个数.html":{"ref":"Bit/二进制中1的个数.html","tf":0.044444444444444446},"Bit/数值的整数次方.html":{"ref":"Bit/数值的整数次方.html","tf":0.061855670103092786}},"=":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835},"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.006535947712418301},"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.02158273381294964},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.004405286343612335},"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.010948905109489052},"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.007194244604316547},"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805},"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":0.02666666666666667},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.028985507246376812},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047},"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.011834319526627219},"Array/旋转数组的最小元素.html":{"ref":"Array/旋转数组的最小元素.html","tf":0.030303030303030304},"Array/矩阵覆盖.html":{"ref":"Array/矩阵覆盖.html","tf":0.0375},"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.029069767441860465},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.015132408575031526},"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.014388489208633094},"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.02077922077922078},"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.014492753623188406},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.012320328542094456},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.009216589861751152},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.02},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.02040816326530612},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203},"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.011560693641618497},"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625},"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.023809523809523808},"Matrix/二维数组中的查找.html":{"ref":"Matrix/二维数组中的查找.html","tf":0.013888888888888888},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.021897810218978103},"Bit/数值的整数次方.html":{"ref":"Bit/数值的整数次方.html","tf":0.020618556701030927}}},">":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.009779951100244499}}}},"[":{"0":{"docs":{},",":{"0":{"docs":{},",":{"1":{"docs":{},",":{"1":{"docs":{},",":{"1":{"docs":{},",":{"2":{"docs":{},",":{"2":{"docs":{},",":{"3":{"docs":{},",":{"3":{"docs":{},",":{"4":{"docs":{},"]":{"docs":{},",":{"docs":{"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.006535947712418301}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"2":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"1":{"docs":{},",":{"0":{"docs":{},",":{"3":{"docs":{},",":{"1":{"2":{"docs":{},"]":{"docs":{"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":0.013333333333333334}}}},"docs":{}},"docs":{}}},"docs":{}}},"2":{"docs":{},",":{"4":{"docs":{},",":{"5":{"docs":{},",":{"6":{"docs":{},",":{"7":{"docs":{},"]":{"docs":{"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"]":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374}}}},"docs":{}},"]":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374}}},")":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}},"2":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374}}}},"docs":{}},"]":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374}}}},"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.00684931506849315},"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625}},"h":{"docs":{},"i":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}},"1":{"0":{"docs":{},",":{"1":{"docs":{},",":{"2":{"docs":{},",":{"7":{"docs":{},",":{"6":{"docs":{},",":{"1":{"docs":{},",":{"5":{"docs":{},"]":{"docs":{},",":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"2":{"docs":{},",":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}},"3":{"docs":{},",":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}},"4":{"docs":{},",":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}},"5":{"docs":{},",":{"1":{"3":{"docs":{},",":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}},"4":{"docs":{},",":{"1":{"2":{"docs":{},",":{"1":{"6":{"docs":{},"]":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"6":{"docs":{},",":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}},"docs":{},",":{"1":{"0":{"docs":{},",":{"1":{"1":{"docs":{},",":{"1":{"2":{"docs":{},",":{"1":{"3":{"docs":{},",":{"2":{"docs":{},",":{"3":{"docs":{},",":{"4":{"docs":{},",":{"5":{"docs":{},",":{"6":{"docs":{},",":{"7":{"docs":{},",":{"8":{"docs":{},",":{"9":{"docs":{},"]":{"docs":{},".":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{},",":{"1":{"docs":{},"]":{"docs":{},",":{"docs":{"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.008849557522123894}}}}},"2":{"docs":{},"]":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374}},",":{"docs":{"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.006535947712418301},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374}}}}},"docs":{}}},"2":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{},",":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374}}}}},"2":{"docs":{},"]":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.003080082135523614},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.013605442176870748},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203}},",":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203}}}}},"3":{"docs":{},",":{"4":{"docs":{},"]":{"docs":{"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704}}}},"docs":{}},"]":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.01},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}},",":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.01},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}}},"docs":{}},"]":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.013605442176870748}},",":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203}}}}},"3":{"docs":{},",":{"1":{"2":{"docs":{},",":{"0":{"docs":{},",":{"0":{"docs":{},"]":{"docs":{"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":0.013333333333333334}}}},"docs":{}}},"docs":{}}},"docs":{},"]":{"docs":{},",":{"docs":{"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.011111111111111112}}}}},"2":{"docs":{},"]":{"docs":{},",":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.01}}}}},"4":{"docs":{},",":{"2":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.010869565217391304}}}},"docs":{}}},"docs":{}}},"5":{"docs":{},",":{"6":{"docs":{},"]":{"docs":{},",":{"docs":{"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.01762114537444934}}}}},"docs":{}}},"docs":{}},"]":{"docs":{"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.007194244604316547}},",":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}}}}},"4":{"docs":{},"]":{"docs":{"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.007194244604316547}}}},"5":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{},",":{"docs":{"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.011111111111111112}}}}},"docs":{}}},"6":{"docs":{},"]":{"docs":{},".":{"docs":{"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.007194244604316547}}}}},"8":{"docs":{},",":{"6":{"docs":{},",":{"2":{"docs":{},",":{"5":{"docs":{},",":{"4":{"docs":{},",":{"8":{"docs":{},",":{"3":{"docs":{},",":{"7":{"docs":{},"]":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835}},".":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203},"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.008849557522123894},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.003080082135523614},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.013824884792626729},"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625}}},"]":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.013605442176870748}},",":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203}}}}},"2":{"4":{"docs":{},",":{"1":{"2":{"docs":{},",":{"8":{"docs":{},",":{"6":{"docs":{},"]":{"docs":{"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{},",":{"0":{"docs":{},",":{"2":{"docs":{},",":{"1":{"docs":{},",":{"1":{"docs":{},",":{"0":{"docs":{},"]":{"docs":{"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"1":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374}}}},"3":{"docs":{},"]":{"docs":{},",":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.01}}}}},"docs":{}}},"2":{"docs":{},",":{"1":{"docs":{},",":{"1":{"docs":{},",":{"1":{"docs":{},",":{"2":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"2":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{},",":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}},"docs":{}}},"3":{"docs":{},"]":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}},"docs":{}},"]":{"docs":{},",":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203}}}}},"3":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{},",":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.01}}}},",":{"1":{"docs":{},",":{"4":{"docs":{},"]":{"docs":{"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.005780346820809248}}}},"docs":{}}},"docs":{}}},"3":{"docs":{},"]":{"docs":{},",":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}},"5":{"docs":{},"]":{"docs":{},",":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}},"6":{"docs":{},",":{"7":{"docs":{},"]":{"docs":{},",":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}},"docs":{}}},"docs":{}},"]":{"docs":{},",":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}}}}},"5":{"docs":{},",":{"2":{"docs":{},",":{"1":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{},",":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"6":{"docs":{},"]":{"docs":{"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.007194244604316547}}}},"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.00684931506849315},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576}}},"]":{"docs":{},",":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203}}}}},"3":{"docs":{},",":{"1":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{},",":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.01}}}}},"3":{"docs":{},",":{"4":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.010869565217391304}}}},"docs":{}}},"docs":{}}},"docs":{}}},"2":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.01}}},",":{"0":{"docs":{},",":{"4":{"docs":{},"]":{"docs":{"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.005780346820809248}}}},"docs":{}}},"docs":{}}},"3":{"docs":{},"]":{"docs":{"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805}}}},"docs":{}}},"4":{"docs":{},"]":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736}}}},"5":{"docs":{},"]":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}},"9":{"docs":{},",":{"2":{"0":{"docs":{},",":{"1":{"5":{"docs":{},",":{"7":{"docs":{},"]":{"docs":{"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.007246376811594203}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"]":{"docs":{},",":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}}}}},"4":{"docs":{},",":{"2":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.011111111111111112}}}},"docs":{}}},"3":{"docs":{},",":{"2":{"docs":{},",":{"7":{"docs":{},",":{"8":{"docs":{},",":{"2":{"docs":{},",":{"3":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"5":{"docs":{},",":{"6":{"docs":{},",":{"7":{"docs":{},",":{"0":{"docs":{},",":{"1":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{},")":{"docs":{},".":{"docs":{"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732}}}},",":{"docs":{"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.010309278350515464}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"]":{"docs":{},",":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}}},"docs":{}},"]":{"docs":{"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.007194244604316547}}}},"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502}}}},"5":{"docs":{},",":{"6":{"docs":{},"]":{"docs":{"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203}}}},"7":{"docs":{},",":{"7":{"docs":{},",":{"8":{"docs":{},",":{"8":{"docs":{},",":{"1":{"0":{"docs":{},"]":{"docs":{},",":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.007194244604316547}}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"]":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576}}}},"6":{"docs":{},",":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047}}}},"7":{"docs":{},"]":{"docs":{},",":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}},",":{"1":{"docs":{},",":{"5":{"docs":{},",":{"3":{"docs":{},",":{"6":{"docs":{},",":{"4":{"docs":{},"]":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274}},",":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"4":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{},",":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}}},"docs":{}}},"6":{"docs":{},",":{"4":{"docs":{},",":{"3":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274}}}},"docs":{}}},"docs":{}}},"docs":{}}},"8":{"docs":{},",":{"9":{"docs":{},"]":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}},"docs":{}}},"docs":{}}},"8":{"docs":{},",":{"5":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{},",":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}}},"docs":{}}},"docs":{}}},"9":{"docs":{},",":{"3":{"docs":{},",":{"1":{"5":{"docs":{},",":{"2":{"0":{"docs":{},",":{"7":{"docs":{},"]":{"docs":{"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.007246376811594203}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"6":{"docs":{},",":{"3":{"docs":{},"]":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}},"docs":{}}},"docs":{}}},"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.007194244604316547},"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.007407407407407408},"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502},"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.011111111111111112},"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274},"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.017699115044247787},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.008213552361396304},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.009216589861751152},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.01},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.014669926650366748}},"[":{"1":{"docs":{},",":{"3":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"2":{"docs":{},",":{"6":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"8":{"docs":{},",":{"1":{"0":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"1":{"5":{"docs":{},",":{"1":{"8":{"docs":{},"]":{"docs":{},"]":{"docs":{"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.007194244604316547}}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}}}},"docs":{}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}}}},"4":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"4":{"docs":{},",":{"5":{"docs":{},"]":{"docs":{},"]":{"docs":{"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.007194244604316547}}}}},"docs":{}}},"docs":{}}}}},"5":{"docs":{},"]":{"docs":{},"]":{"docs":{"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.007194244604316547}}}}},"6":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"8":{"docs":{},",":{"1":{"0":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"1":{"5":{"docs":{},",":{"1":{"8":{"docs":{},"]":{"docs":{},"]":{"docs":{"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.007194244604316547}}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}}}},"docs":{}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}},"]":{"docs":{"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203}}},"a":{"docs":{},",":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.01092896174863388}}}},"\"":{"docs":{},"a":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"b":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"b":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"b":{"docs":{},"\"":{"docs":{},"]":{"docs":{},",":{"docs":{"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},",":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.00684931506849315},"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835},"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.006535947712418301},"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.004405286343612335},"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.007407407407407408},"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502},"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.02158273381294964},"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.011111111111111112},"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943},"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.010050251256281407},"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":0.013333333333333334},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203},"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.008849557522123894},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047},"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609},"Array/旋转数组的最小元素.html":{"ref":"Array/旋转数组的最小元素.html","tf":0.015151515151515152},"Array/斐波那契数列.html":{"ref":"Array/斐波那契数列.html","tf":0.047619047619047616},"Array/跳台阶.html":{"ref":"Array/跳台阶.html","tf":0.03125},"Array/变态跳台阶.html":{"ref":"Array/变态跳台阶.html","tf":0.02},"Array/矩阵覆盖.html":{"ref":"Array/矩阵覆盖.html","tf":0.0125},"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.005813953488372093},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938},"String/替换空格.html":{"ref":"String/替换空格.html","tf":0.010416666666666666},"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.007518796992481203},"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.014388489208633094},"Stack-Queue/用两个栈实现队列.html":{"ref":"Stack-Queue/用两个栈实现队列.html","tf":0.013513513513513514},"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.003896103896103896},"Tree/重建二叉树.html":{"ref":"Tree/重建二叉树.html","tf":0.022222222222222223},"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.007246376811594203},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.01},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.007407407407407408},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.014388489208633094},"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.005780346820809248},"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.007692307692307693},"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625},"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.011904761904761904},"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.010869565217391304},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.004889975550122249},"Matrix/二维数组中的查找.html":{"ref":"Matrix/二维数组中的查找.html","tf":0.013888888888888888},"Bit/二进制中1的个数.html":{"ref":"Bit/二进制中1的个数.html","tf":0.022222222222222223},"Bit/数值的整数次方.html":{"ref":"Bit/数值的整数次方.html","tf":0.010309278350515464}}}}},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938}},",":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835},"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274}}},"是":{"docs":{},"左":{"docs":{},"边":{"docs":{},"或":{"docs":{},"右":{"docs":{},"边":{"docs":{},"只":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"求":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"的":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"必":{"docs":{},"然":{"docs":{},"是":{"docs":{},"自":{"docs":{},"己":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"上":{"docs":{},"的":{"docs":{},"改":{"docs":{},"进":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938}}}}}}}},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.022222222222222223},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.012320328542094456},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.027649769585253458}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.007186858316221766},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.018433179723502304}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576}}}}}}}}},"[":{"docs":{},"i":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576}},"]":{"docs":{},")":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576}},";":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576}}}}}}}}}}}}}},"j":{"docs":{},"u":{"docs":{},"m":{"docs":{},"p":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"1":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.005780346820809248}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}}}},"p":{"docs":{},"i":{"docs":{},"t":{"docs":{"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625}}}}}},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":3.3687943262411344},"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.006160164271047228},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.014492753623188406},"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625},"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.010869565217391304}},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"w":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"1":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835}}}}}}}}},"2":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835}}}}}}}}},"docs":{}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502}}}},"n":{"docs":{},"u":{"docs":{"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.008849557522123894},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":2.0088757396449703}},"e":{"docs":{},";":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.003080082135523614},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.010948905109489052},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805}},":":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0072992700729927005}}}}}}},"s":{"docs":{},"i":{"docs":{},"d":{"docs":{"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.007194244604316547}}},"s":{"docs":{},"t":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}}},"t":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704}},",":{"docs":{"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.010869565217391304}}}}}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":1.4358178053830226}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}}}},"l":{"docs":{"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704},"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.010869565217391304}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"?":{"docs":{"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704}}}}}}},"t":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274}}}}},"a":{"docs":{},"r":{"docs":{"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.007194244604316547}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.007194244604316547}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}}}}}},")":{"docs":{},";":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}}}}}},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":3.3370370370370366},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.004106776180698152},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":2.5046082949308754}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576}}},"u":{"docs":{},"m":{"2":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576}}}}}}}}},"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}}}}}}}},".":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},";":{"docs":{"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.007194244604316547}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},".":{"docs":{},"*":{"docs":{},";":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},";":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},";":{"docs":{"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.007518796992481203}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},";":{"docs":{"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.007518796992481203}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},";":{"docs":{"Tree/重建二叉树.html":{"ref":"Tree/重建二叉树.html","tf":0.022222222222222223},"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.007246376811594203}}}}}}}}}}}}}}},"e":{"docs":{"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943}}}},"d":{"docs":{},"e":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502}}}},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.007194244604316547},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.004106776180698152},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.01},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203}}}}}},"o":{"docs":{},"r":{"docs":{"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.03773584905660377}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.018867924528301886},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203},"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.017699115044247787},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847},"Bit/二进制中1的个数.html":{"ref":"Bit/二进制中1的个数.html","tf":0.022222222222222223}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"Bit/二进制中1的个数.html":{"ref":"Bit/二进制中1的个数.html","tf":0.022222222222222223}}}}}}}},"p":{"docs":{},"i":{"docs":{"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":0.013333333333333334},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047}}}},"r":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.015384615384615385}},",":{"docs":{"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.007692307692307693}}},":":{"docs":{"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.007692307692307693}}}}}}}},"+":{"docs":{},"+":{"docs":{},"：":{"docs":{"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.006535947712418301}}}}},"h":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}}},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}}}}},"a":{"docs":{},"r":{"docs":{"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625}},"[":{"docs":{},"]":{"docs":{"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625}},"{":{"docs":{},"'":{"docs":{},"a":{"docs":{},"'":{"docs":{},",":{"docs":{},"'":{"docs":{},"a":{"docs":{},"'":{"docs":{},",":{"docs":{},"'":{"docs":{},"a":{"docs":{},"'":{"docs":{},",":{"docs":{},"'":{"docs":{},"b":{"docs":{},"'":{"docs":{},",":{"docs":{},"'":{"docs":{},"b":{"docs":{},"'":{"docs":{},",":{"docs":{},"'":{"docs":{},"b":{"docs":{},"'":{"docs":{},"}":{"docs":{},";":{"docs":{"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{"Array/矩阵覆盖.html":{"ref":"Array/矩阵覆盖.html","tf":0.0125},"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.03759398496240601},"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.01948051948051948},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751},"Bit/数值的整数次方.html":{"ref":"Bit/数值的整数次方.html","tf":0.041237113402061855}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.011111111111111112}},"[":{"0":{"docs":{},"]":{"docs":{"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.011111111111111112}}}},"docs":{}}}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.015037593984962405}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},";":{"docs":{"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.007518796992481203}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},";":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0025974025974025974}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},";":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0025974025974025974}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},";":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.0035971223021582736}}}}}}},";":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.00909090909090909},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"Bit/数值的整数次方.html":{"ref":"Bit/数值的整数次方.html","tf":0.020618556701030927}}},")":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547}}},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}}}}}}}},"/":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"docs":{"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609}},",":{"docs":{"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609}}}}}}},"p":{"docs":{},"u":{"docs":{"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.025}}}},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":2.005952380952381}},"e":{"docs":{},",":{"docs":{"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.005952380952380952}}}}}}}},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.00684931506849315},"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835},"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.006535947712418301},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.01639344262295082},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704},"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.005780346820809248},"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.0125},"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.010869565217391304}}}},"s":{"docs":{},"y":{"docs":{},"，":{"docs":{},"但":{"docs":{},"它":{"docs":{},"的":{"docs":{},"各":{"docs":{},"种":{"docs":{},"变":{"docs":{},"形":{"docs":{},"扣":{"docs":{},"边":{"docs":{},"界":{"docs":{},"真":{"docs":{},"的":{"docs":{},"需":{"docs":{},"要":{"docs":{},"总":{"docs":{},"结":{"docs":{},"一":{"docs":{},"下":{"docs":{},"。":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.00684931506849315},"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.0196078431372549},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":1.25},"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":3.3479674796747965},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.014492753623188406},"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.005780346820809248}},".":{"docs":{"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805}}},"s":{"docs":{},".":{"docs":{"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":0.013333333333333334}}}}}}}}}},"x":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.00684931506849315}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.013071895424836602},"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.010309278350515464},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.007194244604316547},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.01762114537444934},"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.007407407407407408},"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.014388489208633094},"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.008547008547008548},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.00975609756097561},"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.008849557522123894},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.004106776180698152},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.009216589861751152},"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.011560693641618497},"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.015384615384615385},"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.021739130434782608},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.004889975550122249}},"e":{"docs":{},":":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.00684931506849315},"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835},"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502},"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.011111111111111112},"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704},"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":0.013333333333333334},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.004106776180698152},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.01},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203},"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625}}},",":{"docs":{"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.007246376811594203},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.013071895424836602},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.014492753623188406},"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.005952380952380952},"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.010869565217391304}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805},"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.007246376811594203}},".":{"docs":{"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.010869565217391304}}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502},"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.014388489208633094},"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.011111111111111112},"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.008547008547008548},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047},"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.011560693641618497},"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.007692307692307693},"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{"Bit/数值的整数次方.html":{"ref":"Bit/数值的整数次方.html","tf":0.030927835051546393}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{"Bit/数值的整数次方.html":{"ref":"Bit/数值的整数次方.html","tf":0.020618556701030927}}}}}}}}},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":2.5050251256281406}}}}}}},"n":{"docs":{},"d":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736},"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.014388489208633094},"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":0.013333333333333334},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835}}}}}}},";":{"docs":{"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.007194244604316547},"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.0035971223021582736}}}},"u":{"docs":{},"m":{"docs":{"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.005780346820809248}},"e":{"docs":{},"r":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}}}}},")":{"docs":{"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.007194244604316547}}},";":{"docs":{"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.007194244604316547}}},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805}}},"y":{"docs":{},"!":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.007194244604316547}}}}}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.014388489208633094}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704},"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":2.0088495575221237},"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}},"e":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}},"1":{"docs":{},"]":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}},"docs":{}}}}}}}}}}}},"g":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.0136986301369863},"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835},"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.0196078431372549},"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.007194244604316547},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.004405286343612335},"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502},"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.007194244604316547},"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.011111111111111112},"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943},"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704},"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":0.013333333333333334},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203},"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.008849557522123894},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847},"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.014492753623188406},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.008213552361396304},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.01},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.014388489208633094},"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.005780346820809248},"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.0125},"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.005952380952380952},"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.010869565217391304},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.007334963325183374}}}}}},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.011111111111111112},"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.007692307692307693}},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.007692307692307693}}}}}}},".":{"docs":{"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.007692307692307693}}}}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}}}}}},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}}}}}}},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"2":{"docs":{},",":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938}}}},"docs":{}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"l":{"docs":{},")":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}},"r":{"docs":{},")":{"docs":{},";":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}}}}}}}}}}}}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":3.333333333333333}}}}},"o":{"docs":{},"o":{"docs":{},"d":{"docs":{},",":{"docs":{"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.005780346820809248}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.0136986301369863},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805},"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.008849557522123894}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.011834319526627219}}}}}}}}}}}},"p":{"docs":{},"p":{"docs":{},"y":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"String/替换空格.html":{"ref":"String/替换空格.html","tf":0.010416666666666666}}}}},".":{"docs":{},"则":{"docs":{},"经":{"docs":{},"过":{"docs":{},"替":{"docs":{},"换":{"docs":{},"之":{"docs":{},"后":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"为":{"docs":{},"w":{"docs":{},"e":{"docs":{},"%":{"2":{"0":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"%":{"2":{"0":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"y":{"docs":{},"。":{"docs":{"String/替换空格.html":{"ref":"String/替换空格.html","tf":0.010416666666666666}}}}}}}}},"docs":{}},"docs":{}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835},"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.004405286343612335},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.03550295857988166},"Array/旋转数组的最小元素.html":{"ref":"Array/旋转数组的最小元素.html","tf":0.015151515151515152},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.01092896174863388},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.008827238335435058},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0036496350364963502}},"的":{"docs":{},"起":{"docs":{},"始":{"docs":{},"值":{"docs":{},"分":{"docs":{},"别":{"docs":{},"为":{"0":{"docs":{},",":{"docs":{},"n":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835}}}}},"docs":{}}}}}}},"情":{"docs":{},"况":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}},"，":{"docs":{},"使":{"docs":{},"得":{"docs":{},"一":{"docs":{},"旦":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"自":{"docs":{},"己":{"docs":{},"和":{"docs":{},"自":{"docs":{},"己":{"docs":{},"发":{"docs":{},"生":{"docs":{},"交":{"docs":{},"换":{"docs":{},"就":{"docs":{},"会":{"docs":{},"清":{"docs":{},"零":{"docs":{},"。":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}}}}}}}}}}}}}}}}}}}}}},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"是":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"就":{"docs":{},"会":{"docs":{},"将":{"docs":{},"这":{"docs":{},"个":{"docs":{},"数":{"docs":{},"清":{"docs":{},"零":{"docs":{},"（":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"l":{"docs":{},"o":{"docs":{},"]":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.00881057268722467},"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0072992700729927005}}},"：":{"docs":{},"最":{"docs":{},"小":{"docs":{},"值":{"docs":{},"在":{"docs":{},"右":{"docs":{},"半":{"docs":{},"部":{"docs":{},"分":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938}},"，":{"docs":{},"不":{"docs":{},"可":{"docs":{},"能":{"docs":{},"是":{"docs":{},"自":{"docs":{},"己":{"docs":{},"了":{"docs":{"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938}}}}}}}}}}}}}}}}}}},")":{"docs":{"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.013215859030837005},"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.010948905109489052},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00819672131147541},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.010948905109489052}},";":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.009124087591240875}},"一":{"docs":{},"个":{"docs":{},"是":{"docs":{},"类":{"docs":{},"型":{"docs":{},"转":{"docs":{},"换":{"docs":{},"的":{"docs":{},"括":{"docs":{},"号":{"docs":{},"要":{"docs":{},"打":{"docs":{},"在":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"上":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"是":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"(":{"docs":{},")":{"docs":{},"是":{"docs":{},"小":{"docs":{},"写":{"docs":{},"。":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"写":{"docs":{},"成":{"docs":{},"s":{"docs":{},"w":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}}}}}}}}}},"中":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00546448087431694}}},"函":{"docs":{},"数":{"docs":{},"没":{"docs":{},"有":{"docs":{},"去":{"docs":{},"除":{"docs":{},"l":{"docs":{},"o":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}}}}}},";":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}},"，":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"在":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"的":{"docs":{},"右":{"docs":{},"边":{"docs":{},"，":{"docs":{},"不":{"docs":{},"可":{"docs":{},"能":{"docs":{},"是":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"Array/旋转数组的最小元素.html":{"ref":"Array/旋转数组的最小元素.html","tf":0.015151515151515152}}}}}}}}}}}}}}}}}}}}},"]":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}},"中":{"docs":{},"找":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876}}}},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"数":{"docs":{},"：":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}}}}}}}}}}},"+":{"1":{"docs":{},")":{"docs":{},"=":{"docs":{},"[":{"docs":{},"l":{"docs":{},"o":{"docs":{},",":{"docs":{},"h":{"docs":{},"i":{"docs":{},"]":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}}}}}}},"docs":{}},"会":{"docs":{},"）":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047},"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609}},",":{"docs":{"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943}}}}},"l":{"docs":{},"p":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.007194244604316547}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.007194244604316547}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.0035971223021582736}}}}}}}}}}}},";":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.007194244604316547}}},"e":{"docs":{},"r":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}},"a":{"docs":{},"d":{"docs":{},")":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987},"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.005952380952380952}}},",":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}}}}},";":{"docs":{"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.017857142857142856}}}},"p":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},"调":{"docs":{},"整":{"docs":{},"函":{"docs":{},"数":{"docs":{},"：":{"docs":{},"节":{"docs":{},"点":{"docs":{},"上":{"docs":{},"的":{"docs":{},"某":{"docs":{},"个":{"docs":{},"值":{"docs":{},"变":{"docs":{},"小":{"docs":{},"后":{"docs":{},"要":{"docs":{},"下":{"docs":{},"沉":{"docs":{},"，":{"docs":{},"若":{"docs":{},"左":{"docs":{},"右":{"docs":{},"两":{"docs":{},"个":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"中":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"比":{"docs":{},"我":{"docs":{},"大":{"docs":{},"则":{"docs":{},"和":{"docs":{},"我":{"docs":{},"交":{"docs":{},"换":{"docs":{},"，":{"docs":{},"不":{"docs":{},"断":{"docs":{},"下":{"docs":{},"沉":{"docs":{},"直":{"docs":{},"到":{"docs":{},"[":{"0":{"docs":{},",":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}}}}},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},"建":{"docs":{},"堆":{"docs":{},"函":{"docs":{},"数":{"docs":{},"：":{"docs":{},"当":{"docs":{},"堆":{"docs":{},"中":{"docs":{},"插":{"docs":{},"入":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"节":{"docs":{},"点":{"docs":{},"（":{"docs":{},"第":{"docs":{},"i":{"docs":{},"号":{"docs":{},"节":{"docs":{},"点":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"）":{"docs":{},"时":{"docs":{},"，":{"docs":{},"向":{"docs":{},"上":{"docs":{},"和":{"docs":{},"父":{"docs":{},"节":{"docs":{},"点":{"docs":{},"比":{"docs":{},"大":{"docs":{},"小":{"docs":{},"，":{"docs":{},"若":{"docs":{},"大":{"docs":{},"则":{"docs":{},"换":{"docs":{},"，":{"docs":{},"不":{"docs":{},"断":{"docs":{},"调":{"docs":{},"整":{"docs":{},"成":{"docs":{},"大":{"docs":{},"根":{"docs":{},"堆":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}},"e":{"docs":{},")":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}},";":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0036496350364963502}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},"堆":{"docs":{},"排":{"docs":{},"序":{"docs":{},"：":{"docs":{},"每":{"docs":{},"次":{"docs":{},"堆":{"docs":{},"的":{"docs":{},"头":{"docs":{},"和":{"docs":{},"堆":{"docs":{},"的":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"交":{"docs":{},"换":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"数":{"docs":{},"固":{"docs":{},"定":{"docs":{},"，":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0025974025974025974}},",":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}}}}}},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625}}}}}}}}}},"j":{"docs":{"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.026143790849673203},"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0072992700729927005},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.011834319526627219},"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.01744186046511628},"String/替换空格.html":{"ref":"String/替换空格.html","tf":0.03125},"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.015384615384615385},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.004889975550122249},"Matrix/二维数组中的查找.html":{"ref":"Matrix/二维数组中的查找.html","tf":0.013888888888888888},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},".":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},".":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},";":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.00684931506849315},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805},"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.008849557522123894}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},";":{"docs":{"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},";":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.00684931506849315},"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.008849557522123894}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},";":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.007407407407407408},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203},"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.007518796992481203},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.01},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.007407407407407408},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.014388489208633094}}}}}}},"s":{"docs":{},";":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.007407407407407408},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047},"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938},"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.007518796992481203},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203},"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},";":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.007407407407407408},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.01},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.007407407407407408},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.014388489208633094}}}}},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},";":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}}}}}}}}}},"*":{"docs":{},";":{"docs":{"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.007194244604316547}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},";":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047},"Stack-Queue/用两个栈实现队列.html":{"ref":"Stack-Queue/用两个栈实现队列.html","tf":0.013513513513513514},"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}}}}},"e":{"docs":{},"t":{"docs":{},";":{"docs":{"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609}}}}},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},";":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}}}}}}}}}}},"：":{"docs":{"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.006535947712418301}}},"运":{"docs":{},"行":{"docs":{},"结":{"docs":{},"果":{"docs":{},"：":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}}}}}}}},"遍":{"docs":{},"历":{"docs":{},"完":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{},"题":{"docs":{},"目":{"docs":{},"说":{"docs":{},"了":{"docs":{},"后":{"docs":{},"面":{"docs":{},"的":{"docs":{},"数":{"docs":{},"不":{"docs":{},"用":{"docs":{},"管":{"docs":{},"，":{"docs":{},"函":{"docs":{},"数":{"docs":{},"直":{"docs":{},"接":{"docs":{},"返":{"docs":{},"回":{"docs":{},"i":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.006535947712418301}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047}}},"u":{"docs":{},"m":{"docs":{},"p":{"docs":{"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":3.3506743737957607}},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Array/跳台阶.html":{"ref":"Array/跳台阶.html","tf":0.03125}}}}}},"i":{"docs":{},"i":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Array/变态跳台阶.html":{"ref":"Array/变态跳台阶.html","tf":0.02}}}}}}}}}}}}}}}},")":{"docs":{"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.011627906976744186},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0036496350364963502}},";":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.005813953488372093},"Matrix/二维数组中的查找.html":{"ref":"Matrix/二维数组中的查找.html","tf":0.013888888888888888}}}}},",":{"docs":{"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.005813953488372093}}},"从":{"docs":{},"i":{"docs":{},"+":{"1":{"docs":{},"开":{"docs":{},"始":{"docs":{},"向":{"docs":{},"后":{"docs":{},"找":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"找":{"docs":{},"到":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"奇":{"docs":{},"数":{"docs":{},"。":{"docs":{"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.005813953488372093}}}}}}}}}}}}}}}}}}},"docs":{}}}},"]":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.007334963325183374}},";":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.007334963325183374}}},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}},";":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}}},"n":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.009779951100244499}}}}},"层":{"docs":{},"在":{"docs":{},"坐":{"docs":{},"标":{"docs":{},"下":{"docs":{},"加":{"docs":{},"上":{"docs":{},"(":{"docs":{},"j":{"docs":{},",":{"docs":{},"j":{"docs":{},")":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}}}}}}}}}}}},"表":{"docs":{},"示":{"docs":{},"从":{"docs":{},"外":{"docs":{},"向":{"docs":{},"内":{"docs":{},"的":{"docs":{},"层":{"docs":{},"数":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}}}}}}}}}},"l":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"1":{"0":{"5":{"docs":{"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":1.4285714285714284}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"1":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":3.333333333333333}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"w":{"docs":{},"a":{"docs":{},"t":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835}}}}}}}}}}}}}}}}}}}}}}},"2":{"1":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":1.6666666666666665}},"b":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"b":{"docs":{},"u":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"4":{"2":{"docs":{"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":2}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"c":{"docs":{},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"2":{"docs":{"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.005952380952380952}}},"docs":{}}}}}}}}}}}}}}}}},"docs":{}},"6":{"9":{"docs":{"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":3.333333333333333}},"m":{"docs":{},"a":{"docs":{},"j":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"e":{"docs":{},"l":{"docs":{"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805}}}}}}}}}}}}},"docs":{}},"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":3.333333333333333}},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.00684931506849315}}}}}}}}},"2":{"3":{"8":{"docs":{"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":2.5}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"f":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"6":{"docs":{"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":2}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.006535947712418301}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"8":{"3":{"docs":{"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":3.333333333333333}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":0.013333333333333334}}}}}}}}}}},"7":{"docs":{"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":2.5}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"3":{"3":{"docs":{"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":2}},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"4":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":1.25}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"o":{"docs":{},"f":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"5":{"docs":{"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":2.5}},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.004405286343612335}}}}}}}}}}}}}}}}}}}}}}},"8":{"6":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":3.333333333333333}},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"9":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":3.333333333333333},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704}}}}}}}}}}}}}}}}},"docs":{}},"4":{"0":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":2.5}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"2":{"docs":{"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576}}},"docs":{}}}}}}}}}}}}}}}},"4":{"8":{"docs":{"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":2}}},"docs":{}},"6":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":5}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.01}}}}}}}}},"7":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":3.333333333333333}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"2":{"docs":{"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374}}},"docs":{}}}}}}}}}}}}},"8":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":3.333333333333333}},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}}}}}}}}}}},"docs":{}},"5":{"3":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":3.333333333333333}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502}}}}}}}}}}}}}}}}}},"5":{"docs":{"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":3.333333333333333}},"j":{"docs":{},"u":{"docs":{},"m":{"docs":{},"p":{"docs":{},"g":{"docs":{},"a":{"docs":{},"m":{"docs":{"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.005780346820809248}}}}}}}}}},"6":{"0":{"docs":{"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":2}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"k":{"docs":{"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.008849557522123894}}}}}}}}}}}}}}}}}}}}},"docs":{"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":3.333333333333333}},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.007194244604316547}}}}}}}}}}}}}},"8":{"1":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":2}},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"6":{"2":{"1":{"docs":{"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":3.333333333333333}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625}}}}}}}}}}}}}},"docs":{"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":3.333333333333333}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.007692307692307693}}}}}}}}}}}}},"4":{"docs":{"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":2.5}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.011111111111111112}}}}}}}}}}}}}}}}},"docs":{}},"7":{"5":{"docs":{"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":5}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943}}}}}}}}}}}},"8":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":5}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}}}}}}}}},"docs":{}},"9":{"0":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":3.333333333333333}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"2":{"docs":{"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203}}},"docs":{}}}}}}}}},"docs":{}},"docs":{}}}}}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"4":{"4":{"8":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}}}}},"a":{"docs":{},"v":{"docs":{"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.006535947712418301}}}},"n":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.0196078431372549},"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.008849557522123894},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047},"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.011834319526627219},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847},"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.015037593984962405},"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.011560693641618497},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.010948905109489052}},".":{"docs":{"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.0196078431372549},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047}}},",":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609}}}}}},":":{"docs":{"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.007518796992481203}}}}}}}},")":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0025974025974025974}},";":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0025974025974025974}}}},"l":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}},";":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}},"m":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0025974025974025974}},")":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}},"r":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}},"f":{"docs":{},"t":{"docs":{"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.011111111111111112},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805},"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.015384615384615385},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.005044136191677175},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.005474452554744526}},";":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}}},";":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0025974025974025974}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.014492753623188406}}}}}}}}}},"s":{"docs":{},"s":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547},"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.010869565217391304},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}},"x":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547}}}}}}}}}}}}},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":3.3405275779376495}}}}}}}}}}},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.0125}}}}}}},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.02127659574468085},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00819672131147541}},"s":{"docs":{},",":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835}}}}},"k":{"docs":{"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":2.011904761904762}},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.007194244604316547},"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.007194244604316547},"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0025974025974025974},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076}}}}}}},";":{"docs":{"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.007518796992481203},"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.005952380952380952}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.018518518518518517},"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.007194244604316547},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.015400410677618069},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.013824884792626729},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.03},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.013605442176870748},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.018518518518518517},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.014492753623188406},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.02877697841726619},"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":2}},")":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.01},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547}}},",":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547},"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.005952380952380952}}},";":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203}}},">":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.011111111111111112},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.006160164271047228},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.01},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.014814814814814815},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.014492753623188406}}},"s":{"2":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.007407407407407408},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.007407407407407408}}}}}}}}}}},"docs":{},")":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.007407407407407408},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.009216589861751152},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.02},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.007407407407407408}}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"1":{"docs":{},",":{"2":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}}}}}},"docs":{}}},"4":{"docs":{},",":{"5":{"docs":{},",":{"6":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}}}}}},"docs":{}}},"docs":{}}},"7":{"docs":{},",":{"8":{"docs":{},",":{"9":{"docs":{},",":{"1":{"0":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}}}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.004106776180698152},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.01},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}}}}}}}}}},",":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.006160164271047228},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.01},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}}},";":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.006160164271047228},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.01},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.022556390977443608},"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.041666666666666664}},"e":{"docs":{},"(":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.007518796992481203}}}}},"1":{"docs":{},")":{"docs":{},";":{"docs":{"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.005952380952380952}}}}},"2":{"4":{"docs":{},")":{"docs":{},";":{"docs":{"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.007518796992481203}}}}},"docs":{},")":{"docs":{},";":{"docs":{"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.011904761904761904}}}}},"4":{"docs":{},")":{"docs":{},";":{"docs":{"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.005952380952380952}}}}},"5":{"8":{"docs":{},")":{"docs":{},";":{"docs":{"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.007518796992481203}}}}},"docs":{}},"6":{"7":{"docs":{},")":{"docs":{},";":{"docs":{"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.007518796992481203}}}}},"docs":{}},"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.005952380952380952}}}}}},")":{"docs":{"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.015037593984962405}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.007518796992481203}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.007518796992481203}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.007518796992481203}}}}}}}}}}}}}}}}},";":{"docs":{"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.015037593984962405}}}}}}},".":{"docs":{"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.005952380952380952}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547}}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547}}}}}}}}}}}}}}}},"b":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"'":{"docs":{"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943}}}}}}}}},"o":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835},"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.015463917525773196},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.02643171806167401},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.026627218934911243},"Array/旋转数组的最小元素.html":{"ref":"Array/旋转数组的最小元素.html","tf":0.030303030303030304},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.01366120218579235},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.011349306431273645},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.012773722627737226}},")":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.014184397163120567},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.004405286343612335},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0036496350364963502}},";":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047}}}},",":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835},"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.004405286343612335},"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.014598540145985401},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00819672131147541},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.016423357664233577}}},";":{"docs":{"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.00881057268722467},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.01092896174863388},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}},"*":{"docs":{},"/":{"docs":{"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.004405286343612335}}}}},"g":{"docs":{},"n":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502}},"切":{"docs":{},"分":{"docs":{},"点":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{},"切":{"docs":{},"分":{"docs":{},"点":{"docs":{},"有":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"个":{"docs":{},"要":{"docs":{},"保":{"docs":{},"留":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"入":{"docs":{},"口":{"docs":{},",":{"docs":{},"l":{"docs":{},"o":{"docs":{},",":{"docs":{},"h":{"docs":{},"i":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}},"b":{"docs":{},"(":{"docs":{},"a":{"docs":{},")":{"docs":{},"=":{"docs":{},"d":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.007692307692307693}}}}},"+":{"1":{"docs":{},")":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.005474452554744526}},"=":{"docs":{},"[":{"docs":{},"l":{"docs":{},"o":{"docs":{},",":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}}}},"docs":{},"h":{"docs":{},"i":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":1.25},"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.017341040462427744}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.011560693641618497}},")":{"docs":{"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.005780346820809248}}}}}}}}}},"r":{"docs":{},"g":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0072992700729927005}}}},"r":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274}}}}}},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0025974025974025974},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}}}}}}}}}}}}}}}},"y":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00546448087431694}}}},"m":{"docs":{"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.022222222222222223},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.01092896174863388},"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.03076923076923077}},"a":{"docs":{},"p":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.04794520547945205},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805},"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.017699115044247787}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},")":{"docs":{},"}":{"docs":{},";":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.00684931506849315}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},")":{"docs":{"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"0":{"docs":{},",":{"docs":{"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.008849557522123894}}}},"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},",":{"docs":{"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805}}}}}}},"i":{"docs":{},"f":{"docs":{},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},",":{"docs":{"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},",":{"docs":{"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805}}}}}}}}}}}}}}}},"x":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835},"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.014598540145985401},"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.00975609756097561},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.005917159763313609}},"w":{"docs":{},"a":{"docs":{},"t":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.02127659574468085}},"e":{"docs":{},"r":{"docs":{},";":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.02127659574468085}}}}}}}},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502}},",":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.008547008547008548}},",":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.008547008547008548}}}}}}}}}},")":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502},"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625}}},";":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805}}},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":3.3406326034063256},"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274},"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.011560693641618497}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"1":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502}}}}}}}}},"2":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502}}}}}}}}},"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.010948905109489052}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0036496350364963502}},",":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}},";":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"s":{"docs":{},"s":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502}}}}}}}},")":{"docs":{},";":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502}}}},";":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502}}},"分":{"docs":{},"为":{"docs":{},"求":{"docs":{},"左":{"docs":{},"边":{"docs":{},"以":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"]":{"docs":{},"结":{"docs":{},"束":{"docs":{},"的":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"，":{"docs":{},"右":{"docs":{},"边":{"docs":{},"以":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"+":{"1":{"docs":{},"]":{"docs":{},"开":{"docs":{},"始":{"docs":{},"的":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.010948905109489052}},")":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502}}},";":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0072992700729927005}},")":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502}},",":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502}}}},";":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502}}}}}}}}}},"o":{"docs":{},"f":{"docs":{},"a":{"docs":{},"r":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.01282051282051282}},")":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.008547008547008548}}}}}}},"i":{"docs":{},"z":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876}}}}},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.010948905109489052}},")":{"docs":{},";":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502}}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.01282051282051282}}}},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625}},",":{"docs":{"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{},"i":{"docs":{},"t":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.017094017094017096}},";":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.017094017094017096}}}}}}}}},"为":{"docs":{},"上":{"docs":{},"升":{"docs":{},"中":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"，":{"docs":{},"极":{"docs":{},"值":{"docs":{},"点":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876}}}}}}},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.013071895424836602},"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.005780346820809248}}}}},"h":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502}}}}}}}}}}}}}}}}}}}},"x":{"docs":{},",":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502}}}}}}}}}},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502}}}}}}}},"j":{"docs":{},",":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047}}}},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"i":{"docs":{},",":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047}}}},"l":{"docs":{},"o":{"docs":{},",":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047}}}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},",":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.011560693641618497}}}}}}}}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},")":{"docs":{"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"Bit/数值的整数次方.html":{"ref":"Bit/数值的整数次方.html","tf":0.010309278350515464}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"(":{"docs":{},")":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.005474452554744526}},")":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0036496350364963502}},",":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.005474452554744526}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.019559902200488997}},")":{"docs":{"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.011111111111111112},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.012224938875305624}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.011111111111111112},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076}}},")":{"docs":{},";":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.011111111111111112}}},")":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076}}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{},";":{"docs":{"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.011111111111111112}}}}},"docs":{}}}},"docs":{},"i":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.004889975550122249}},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},"为":{"1":{"docs":{},"表":{"docs":{},"示":{"docs":{},"有":{"docs":{},"从":{"docs":{},"i":{"docs":{},"到":{"docs":{},"j":{"docs":{},"的":{"docs":{},"有":{"docs":{},"向":{"docs":{},"边":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076}}}}}}}}}}}}}},"docs":{}}}}}}},"j":{"docs":{},"]":{"docs":{},"[":{"docs":{},"i":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.004889975550122249}}}}}},"n":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.009779951100244499}}}},";":{"docs":{"Array/矩阵覆盖.html":{"ref":"Array/矩阵覆盖.html","tf":0.0125},"Matrix/二维数组中的查找.html":{"ref":"Matrix/二维数组中的查找.html","tf":0.013888888888888888}}},"为":{"docs":{},"n":{"docs":{},"*":{"docs":{},"n":{"docs":{},"邻":{"docs":{},"接":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"：":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076}}}}}}}}}}},",":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.004889975550122249}}}}}}},"i":{"docs":{},"n":{"1":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"[":{"docs":{},"]":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938}}}}}}}}}}}},"2":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"[":{"docs":{},"]":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938}}}}}}}}}}}},"3":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"[":{"docs":{},"]":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938}}}}}}}}}}}},"4":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"[":{"docs":{},"]":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938}}}}}}}}}}}},"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"[":{"docs":{},"]":{"docs":{"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.004405286343612335},"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704},"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.005813953488372093},"String/替换空格.html":{"ref":"String/替换空格.html","tf":0.010416666666666666},"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.007518796992481203},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547},"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625},"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.005952380952380952},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247},"Matrix/二维数组中的查找.html":{"ref":"Matrix/二维数组中的查找.html","tf":0.013888888888888888}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":0.013333333333333334}}}}}}}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"公":{"docs":{},"式":{"docs":{},"，":{"docs":{},"d":{"docs":{},"=":{"1":{"docs":{},",":{"docs":{},"a":{"docs":{},"=":{"docs":{},"b":{"docs":{},"=":{"2":{"docs":{},",":{"docs":{},"d":{"docs":{},"=":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"b":{"docs":{},"a":{"docs":{},"=":{"1":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502}}},"docs":{}}}}}}}}}}},"docs":{}}}}}}},"docs":{}}}}}}}}}},"j":{"docs":{},"o":{"docs":{},"r":{"docs":{"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":3.3528455284552843}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"1":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805}}}}}}}}},"2":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805}}}}}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805}}}}}}}}}}}}},"3":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805}}}}}}}}},"docs":{}}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":0.013333333333333334},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704},"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.005780346820809248}}}},"n":{"docs":{},"i":{"docs":{"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.015384615384615385}}}}},"i":{"docs":{},"n":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.014184397163120567},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.005917159763313609}},"i":{"docs":{},"m":{"docs":{"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.022222222222222223},"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":0.013333333333333334}},"u":{"docs":{},"m":{"docs":{"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":2.5}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{},"[":{"docs":{},"]":{"docs":{"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.011111111111111112}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.01282051282051282}},"e":{"docs":{},"要":{"docs":{},"求":{"docs":{},"最":{"docs":{},"大":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274}}}}}}}}}}},")":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047}}},"为":{"docs":{},"下":{"docs":{},"降":{"docs":{},"中":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"值":{"docs":{},"，":{"docs":{},"极":{"docs":{},"值":{"docs":{},"点":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Array/旋转数组的最小元素.html":{"ref":"Array/旋转数组的最小元素.html","tf":0.015151515151515152}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.015463917525773196},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.01762114537444934},"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.014598540145985401},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805},"Array/旋转数组的最小元素.html":{"ref":"Array/旋转数组的最小元素.html","tf":0.030303030303030304},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.02459016393442623},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.015132408575031526},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0072992700729927005}},";":{"docs":{"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.010309278350515464},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.013215859030837005},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00546448087431694},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.005044136191677175}}},")":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502}},";":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0072992700729927005},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}},",":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0036496350364963502}}}}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},".":{"docs":{"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.006535947712418301}}},":":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}}}}},"r":{"docs":{},"g":{"docs":{"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":3.347721822541966}},"e":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.007194244604316547}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0036496350364963502}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047},"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}}},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.013071895424836602},"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.005952380952380952},"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.010869565217391304},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}}}},"r":{"docs":{},"e":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805},"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.010869565217391304},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}},"从":{"docs":{},"h":{"docs":{},"i":{"docs":{},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"保":{"docs":{},"护":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"h":{"docs":{},"i":{"docs":{},"]":{"docs":{},"在":{"docs":{},"大":{"docs":{},"于":{"docs":{},"区":{"docs":{},"域":{"docs":{},"中":{"docs":{},"不":{"docs":{},"会":{"docs":{},"被":{"docs":{},"换":{"docs":{},"掉":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"再":{"docs":{},"替":{"docs":{},"换":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.011111111111111112},"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":3.3466666666666662},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704},"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.007692307692307693}},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":0.013333333333333334}}}}}}}}}}}}},".":{"docs":{"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}}}}},"o":{"docs":{},"r":{"docs":{"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805}}}}},"为":{"docs":{},"行":{"docs":{},"数":{"docs":{},"，":{"docs":{},"即":{"docs":{},"一":{"docs":{},"列":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.011111111111111112}}}}}}}}}}}},"行":{"docs":{},"n":{"docs":{},"列":{"docs":{},"的":{"docs":{},"矩":{"docs":{},"阵":{"docs":{"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.011111111111111112}}}}}}}},"b":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00546448087431694}}},",":{"docs":{"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.007692307692307693}}}},"n":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.02127659574468085},"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.022222222222222223},"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.010050251256281407},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00819672131147541},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.003080082135523614},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547},"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.03076923076923077},"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.025},"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.021739130434782608},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.004889975550122249},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0036496350364963502}},"e":{"docs":{},"w":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.02054794520547945},"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.006535947712418301},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.004405286343612335},"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.022222222222222223},"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.007194244604316547},"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.011111111111111112},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.02512562814070352},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203},"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.008849557522123894},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047},"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.01775147928994083},"String/替换空格.html":{"ref":"String/替换空格.html","tf":0.010416666666666666},"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.05263157894736842},"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.03597122302158273},"Stack-Queue/用两个栈实现队列.html":{"ref":"Stack-Queue/用两个栈实现队列.html","tf":0.02702702702702703},"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.016883116883116882},"Tree/重建二叉树.html":{"ref":"Tree/重建二叉树.html","tf":0.022222222222222223},"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.007246376811594203},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.018480492813141684},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.018433179723502304},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.02},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.027210884353741496},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.022222222222222223},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.028985507246376812},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.014388489208633094},"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.007692307692307693},"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625},"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.023809523809523808},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247},"Matrix/二维数组中的查找.html":{"ref":"Matrix/二维数组中的查找.html","tf":0.013888888888888888},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}},"g":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835},"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.011111111111111112},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847},"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.005780346820809248},"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625}}},"e":{"docs":{},"d":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274},"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.008849557522123894},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.008875739644970414},"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.0125}}}},"x":{"docs":{},"t":{"docs":{"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.005952380952380952}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.023121387283236993}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.011560693641618497}}}}}}}}}},";":{"docs":{"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.005952380952380952}}}}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835},"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.007194244604316547},"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.007194244604316547},"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943},"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":0.013333333333333334},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.014492753623188406},"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.011834319526627219},"Array/旋转数组的最小元素.html":{"ref":"Array/旋转数组的最小元素.html","tf":0.015151515151515152},"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.011627906976744186},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.012610340479192938},"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0025974025974025974},"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.014492753623188406},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.006160164271047228},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.01},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374},"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.017857142857142856},"Matrix/二维数组中的查找.html":{"ref":"Matrix/二维数组中的查找.html","tf":0.013888888888888888},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.005474452554744526}},";":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.00684931506849315},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203},"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.007518796992481203},"Tree/重建二叉树.html":{"ref":"Tree/重建二叉树.html","tf":0.022222222222222223},"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.007246376811594203},"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.017857142857142856}}},")":{"docs":{"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.00975609756097561},"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.015037593984962405},"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.04155844155844156},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.003080082135523614},"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.017857142857142856}}},".":{"docs":{"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.005952380952380952}}}}},"m":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.00684931506849315},"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.026143790849673203},"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.015463917525773196},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.01079136690647482},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.004405286343612335},"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.01507537688442211},"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":0.013333333333333334},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203},"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.008849557522123894},"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.011834319526627219},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203},"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.010869565217391304},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.004889975550122249}},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.00684931506849315},"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.022222222222222223},"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.011111111111111112},"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.018867924528301886},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.00975609756097561},"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":0.013333333333333334},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":2},"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.017699115044247787},"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.011834319526627219},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00546448087431694},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.013347022587268994},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.02304147465437788},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":3.333333333333333},"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.0125},"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":2.5217391304347827}},")":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502}}},"s":{"docs":{},",":{"docs":{"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.011111111111111112}}},")":{"docs":{"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609}}}}}}}}},":":{"docs":{"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609}}},"[":{"docs":{},"]":{"docs":{},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609}}}}}}}}},"返":{"docs":{},"回":{"docs":{},"上":{"docs":{},"一":{"docs":{},"个":{"docs":{"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805}}}}}}},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"只":{"docs":{},"要":{"docs":{},"某":{"docs":{},"一":{"docs":{},"个":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"大":{"docs":{},"于":{"docs":{},"n":{"docs":{},"/":{"2":{"docs":{},"它":{"docs":{},"就":{"docs":{},"是":{"docs":{},"m":{"docs":{},"a":{"docs":{},"j":{"docs":{},"o":{"docs":{},"r":{"docs":{"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609}}}}},",":{"docs":{"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.011834319526627219},"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.010869565217391304}}},"o":{"docs":{},"f":{"1":{"1":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Bit/二进制中1的个数.html":{"ref":"Bit/二进制中1的个数.html","tf":0.022222222222222223}}}}}}},"docs":{}},"docs":{}}}}}},"s":{"1":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576}}},"2":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203}}},"3":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704}}},"4":{"docs":{"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704}}},"docs":{},")":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.00684931506849315},"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.014184397163120567},"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.013071895424836602},"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732},"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.010948905109489052},"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.01951219512195122},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.01507537688442211},"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":0.02666666666666667},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.021739130434782608},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.008875739644970414},"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.01775147928994083},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.00513347022587269},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.02},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203},"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.010869565217391304},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.010948905109489052}},";":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.01}}}},",":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.02054794520547945},"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.006535947712418301},"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.010309278350515464},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.01079136690647482},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.013215859030837005},"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.011111111111111112},"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.010948905109489052},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805},"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":0.013333333333333334},"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.017699115044247787},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00546448087431694},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.013871374527112233},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.01026694045174538},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.02040816326530612},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.011111111111111112},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.028985507246376812},"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.005780346820809248},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.012773722627737226}}},"[":{"0":{"docs":{},"]":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.00684931506849315}},")":{"docs":{"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732}}},",":{"docs":{"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805}}}}},"1":{"docs":{},"]":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.00684931506849315}}}},"docs":{},"i":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203}},"]":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.010948905109489052}},"那":{"docs":{},"么":{"docs":{},"把":{"docs":{},"j":{"docs":{},"位":{"docs":{},"置":{"docs":{},"的":{"docs":{},"数":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"给":{"docs":{},"+":{"docs":{},"+":{"docs":{},"i":{"docs":{},"位":{"docs":{},"置":{"docs":{},"的":{"docs":{},"数":{"docs":{},"（":{"docs":{},"+":{"docs":{},"+":{"docs":{},"i":{"docs":{},"位":{"docs":{},"置":{"docs":{},"是":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"也":{"docs":{},"没":{"docs":{},"关":{"docs":{},"系":{"docs":{},"）":{"docs":{"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.006535947712418301}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}},".":{"docs":{"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704}}},")":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.005917159763313609},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}},";":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.005917159763313609}}}}},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":0.013333333333333334}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203}},";":{"docs":{"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203}}}}}}}}},"h":{"docs":{},"i":{"docs":{},"]":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}},")":{"docs":{"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876}}},"中":{"docs":{},"共":{"docs":{},"出":{"docs":{},"现":{"docs":{},"了":{"docs":{},"多":{"docs":{},"少":{"docs":{},"次":{"docs":{"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805}}}}}}}}}},";":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.005474452554744526}}},"不":{"docs":{},"会":{"docs":{},"，":{"docs":{},"l":{"docs":{},"o":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0072992700729927005}},"]":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00546448087431694}},")":{"docs":{"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.00881057268722467},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876}}},"，":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"在":{"docs":{},"右":{"docs":{},"半":{"docs":{},"段":{"docs":{},"，":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.005044136191677175}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00546448087431694}}}},"在":{"docs":{},"右":{"docs":{},"半":{"docs":{},"段":{"docs":{},"，":{"docs":{},"在":{"docs":{},"[":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876}}}}}}}}}}}}},",":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0072992700729927005}}}}}},"a":{"docs":{},"x":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"]":{"docs":{"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.004405286343612335},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.009124087591240875}},")":{"docs":{"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.00881057268722467}}},";":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502}}}}},"]":{"docs":{},";":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"]":{"docs":{},";":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}}}}}},"f":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}}}}}}},"j":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.005474452554744526}},"]":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0036496350364963502}},")":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.005917159763313609}}},"且":{"docs":{},"i":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047}}}},";":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0072992700729927005}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},"]":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047}}}}}}}}}}}},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.005780346820809248}},",":{"docs":{"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.011560693641618497}}},"步":{"docs":{},"，":{"docs":{"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.005780346820809248}}}},"，":{"docs":{"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.005780346820809248}}}}}}}}}}}}}},"(":{"docs":{},"i":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.014184397163120567},"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.020618556701030927},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.007194244604316547},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.00881057268722467},"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502},"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.00975609756097561},"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":0.013333333333333334},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.008875739644970414},"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.013871374527112233},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.004106776180698152},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.01},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374},"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.017341040462427744},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0072992700729927005}},")":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.01},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374},"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.010869565217391304}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047}}}}}}}}}}},";":{"docs":{"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.006535947712418301}}},"中":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"值":{"docs":{},"为":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"的":{"docs":{},"数":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736}}}}}}}}}}}}}}}}},")":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.007194244604316547},"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}},";":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502}}}},",":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805}}},";":{"docs":{"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704},"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":0.013333333333333334},"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.011834319526627219},"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.0035971223021582736}}},"o":{"docs":{},"f":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"k":{"1":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.008849557522123894}}}}}}}}},"4":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.008849557522123894}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835},"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.011111111111111112},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805},"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":0.013333333333333334},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847},"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.005780346820809248},"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625}},"e":{"docs":{"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}}}},"t":{"docs":{},"e":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274}},":":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835},"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.011111111111111112},"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704},"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":0.013333333333333334},"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.008849557522123894},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047},"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.007246376811594203},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.004106776180698152},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203},"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.007692307692307693},"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625},"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.005952380952380952},"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.010869565217391304},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}},"：":{"docs":{},"给":{"docs":{},"出":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"元":{"docs":{},"素":{"docs":{},"都":{"docs":{},"大":{"docs":{},"于":{"0":{"docs":{},"，":{"docs":{},"若":{"docs":{},"数":{"docs":{},"组":{"docs":{},"大":{"docs":{},"小":{"docs":{},"为":{"0":{"docs":{},"，":{"docs":{},"请":{"docs":{},"返":{"docs":{},"回":{"0":{"docs":{},"。":{"docs":{"Array/旋转数组的最小元素.html":{"ref":"Array/旋转数组的最小元素.html","tf":0.015151515151515152}}}},"docs":{}}}}}},"docs":{}}}}}}}}},"docs":{}}}}}}}}}}}}},",":{"docs":{"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.004405286343612335}}}},"d":{"docs":{},"e":{"1":{"docs":{"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.005952380952380952}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.005952380952380952}}}}}}},";":{"docs":{"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.005952380952380952}}}},"2":{"docs":{"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.005952380952380952}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.005952380952380952}}}}}}},";":{"docs":{"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.011904761904761904}}}},"3":{"docs":{"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.005952380952380952}}},"4":{"docs":{"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.005952380952380952}},";":{"docs":{"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.005952380952380952}}}},"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.01948051948051948},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.005952380952380952}},")":{"docs":{"Stack-Queue/用两个栈实现队列.html":{"ref":"Stack-Queue/用两个栈实现队列.html","tf":0.013513513513513514}}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0025974025974025974}}}}}}}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.006535947712418301},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}}}}}}},")":{"docs":{"Array/斐波那契数列.html":{"ref":"Array/斐波那契数列.html","tf":0.047619047619047616},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.014388489208633094},"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.007692307692307693},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247},"Bit/二进制中1的个数.html":{"ref":"Bit/二进制中1的个数.html","tf":0.044444444444444446}},".":{"docs":{"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502}}}}}},"的":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"b":{"docs":{},"a":{"docs":{},"次":{"docs":{},"方":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502}}}}}}}}}},",":{"docs":{"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.014388489208633094},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.004889975550122249}}},"/":{"2":{"docs":{"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805}}},"docs":{}},"]":{"docs":{"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203}},"的":{"docs":{},"整":{"docs":{},"数":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}}}},"o":{"1":{"docs":{},",":{"docs":{"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.007194244604316547}}}},"2":{"docs":{},")":{"docs":{"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.007194244604316547}}},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.007194244604316547}}}}}}}}}}},"docs":{},"n":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.00684931506849315},"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502},"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943},"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.01282051282051282},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047},"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.0125},"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.03260869565217391}},"c":{"docs":{"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.006535947712418301},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576}},"e":{"docs":{},".":{"docs":{"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203},"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.010869565217391304}}}}},"e":{"docs":{},".":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274},"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.010869565217391304}}}},"l":{"docs":{},"y":{"docs":{},")":{"docs":{},".":{"docs":{"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.010869565217391304}}}}}}},"u":{"docs":{},"t":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.010050251256281407},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00546448087431694}},":":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835},"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.010309278350515464},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.007194244604316547},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.01762114537444934},"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502},"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.014388489208633094},"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.011111111111111112},"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943},"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.008547008547008548},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.00975609756097561},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704},"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":0.013333333333333334},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203},"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.008849557522123894},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.004106776180698152},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.01},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203},"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.011560693641618497},"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.015384615384615385},"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625},"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.021739130434782608}}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704}}}}}}}},",":{"docs":{"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}}}}},"(":{"1":{"docs":{},")":{"docs":{"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.006535947712418301},"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.010869565217391304}}}},"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736}}}}},"n":{"2":{"docs":{},")":{"docs":{},".":{"docs":{"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.010869565217391304}}}}},"docs":{},")":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0072992700729927005},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.007407407407407408}},".":{"docs":{"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704}}},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.007246376811594203}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{},"，":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.007194244604316547}}}},"docs":{}}}}}}}}}}}}}},"²":{"docs":{},")":{"docs":{},"，":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}},"docs":{}}}}}}}}}}}}},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.010309278350515464},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736},"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943},"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":0.013333333333333334},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.005917159763313609}},",":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.005917159763313609}}},".":{"docs":{"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.004405286343612335},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547},"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625}}}}}},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203}},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732},"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609}}}}},".":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"a":{"docs":{},"p":{"docs":{"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.007194244604316547}},"p":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.007194244604316547}}}}}}},"s":{"docs":{},",":{"docs":{"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.007194244604316547}}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943}}}}}}}}},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.018867924528301886}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":0.013333333333333334}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547}}}}}},"d":{"docs":{},"d":{"docs":{"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.005813953488372093}},";":{"docs":{"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.005813953488372093}}}}},"j":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":3.333333333333333}},"地":{"docs":{},"址":{"docs":{},"：":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"d":{"docs":{},"s":{"docs":{},"a":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"h":{"docs":{},"u":{"docs":{},"a":{"docs":{},".":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},".":{"docs":{},"c":{"docs":{},"n":{"docs":{},"/":{"docs":{},"o":{"docs":{},"j":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{},"?":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{},"=":{"5":{"8":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.0035971223021582736}}}}}}}}}}},"p":{"1":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}},"2":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}},"的":{"docs":{},"起":{"docs":{},"始":{"docs":{},"值":{"docs":{},"是":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}}}}}},"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.00684931506849315},"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835},"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.006535947712418301},"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.004405286343612335},"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.007407407407407408},"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502},"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.007194244604316547},"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.011111111111111112},"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943},"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.010050251256281407},"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":0.013333333333333334},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203},"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.008849557522123894},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047},"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609},"Array/旋转数组的最小元素.html":{"ref":"Array/旋转数组的最小元素.html","tf":0.015151515151515152},"Array/斐波那契数列.html":{"ref":"Array/斐波那契数列.html","tf":0.047619047619047616},"Array/跳台阶.html":{"ref":"Array/跳台阶.html","tf":0.03125},"Array/变态跳台阶.html":{"ref":"Array/变态跳台阶.html","tf":0.02},"Array/矩阵覆盖.html":{"ref":"Array/矩阵覆盖.html","tf":0.0125},"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.005813953488372093},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938},"String/替换空格.html":{"ref":"String/替换空格.html","tf":0.010416666666666666},"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.007518796992481203},"Stack-Queue/用两个栈实现队列.html":{"ref":"Stack-Queue/用两个栈实现队列.html","tf":0.013513513513513514},"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987},"Tree/重建二叉树.html":{"ref":"Tree/重建二叉树.html","tf":0.022222222222222223},"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.007246376811594203},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.01},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.007407407407407408},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.014388489208633094},"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.005780346820809248},"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.007692307692307693},"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625},"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.005952380952380952},"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.010869565217391304},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.004889975550122249},"Matrix/二维数组中的查找.html":{"ref":"Matrix/二维数组中的查找.html","tf":0.013888888888888888},"Bit/二进制中1的个数.html":{"ref":"Bit/二进制中1的个数.html","tf":0.022222222222222223},"Bit/数值的整数次方.html":{"ref":"Bit/数值的整数次方.html","tf":0.010309278350515464}}}}}},"t":{"docs":{},"h":{"docs":{"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":2.522222222222222},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.007407407407407408},"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":3.356410256410256}},".":{"docs":{"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.011111111111111112}}}}},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"过":{"docs":{},"程":{"docs":{},"看":{"docs":{},"成":{"docs":{},"向":{"docs":{},"小":{"docs":{},"于":{"docs":{},"区":{"docs":{},"域":{"docs":{},"和":{"docs":{},"大":{"docs":{},"于":{"docs":{},"区":{"docs":{},"域":{"docs":{},"发":{"docs":{},"货":{"docs":{"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943}}}}}}}}}}}}}}}}}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}}},"函":{"docs":{},"数":{"docs":{},"：":{"docs":{},"随":{"docs":{},"机":{"docs":{},"取":{"docs":{},"一":{"docs":{},"个":{"docs":{},"基":{"docs":{},"准":{"docs":{},"点":{"docs":{},"，":{"docs":{},"把":{"docs":{},"基":{"docs":{},"准":{"docs":{},"点":{"docs":{},"和":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"交":{"docs":{},"换":{"docs":{},"，":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"目":{"docs":{},"的":{"docs":{},"是":{"docs":{},"要":{"docs":{},"将":{"docs":{},"[":{"docs":{},"l":{"docs":{},"o":{"docs":{},",":{"docs":{},"h":{"docs":{},"i":{"docs":{},"]":{"docs":{},"从":{"docs":{},"左":{"docs":{},"到":{"docs":{},"右":{"docs":{},"分":{"docs":{},"为":{"docs":{},"小":{"docs":{},"于":{"docs":{},"基":{"docs":{},"准":{"docs":{},"点":{"docs":{},"区":{"docs":{},"域":{"docs":{},"、":{"docs":{},"等":{"docs":{},"于":{"docs":{},"基":{"docs":{},"准":{"docs":{},"点":{"docs":{},"区":{"docs":{},"域":{"docs":{},"、":{"docs":{},"大":{"docs":{},"于":{"docs":{},"基":{"docs":{},"准":{"docs":{},"点":{"docs":{},"区":{"docs":{},"域":{"docs":{},"三":{"docs":{},"个":{"docs":{},"区":{"docs":{},"域":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"返":{"docs":{},"回":{"docs":{},"等":{"docs":{},"于":{"docs":{},"区":{"docs":{},"域":{"docs":{},"的":{"docs":{},"左":{"docs":{},"右":{"docs":{},"下":{"docs":{},"标":{"docs":{},"给":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"函":{"docs":{},"数":{"docs":{},"。":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"看":{"docs":{},"成":{"docs":{},"往":{"docs":{},"小":{"docs":{},"于":{"docs":{},"区":{"docs":{},"域":{"docs":{},"和":{"docs":{},"大":{"docs":{},"于":{"docs":{},"区":{"docs":{},"域":{"docs":{},"发":{"docs":{},"货":{"docs":{},"。":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},":":{"docs":{"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.018867924528301886}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.03424657534246575},"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.02127659574468085},"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.013071895424836602},"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.02577319587628866},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.017985611510791366},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.022026431718061675},"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.025925925925925925},"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.014598540145985401},"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.02877697841726619},"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.022222222222222223},"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.018867924528301886},"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.017094017094017096},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.024390243902439025},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.02512562814070352},"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":0.02666666666666667},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.014492753623188406},"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.02654867256637168},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.011834319526627219},"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.023668639053254437},"Array/旋转数组的最小元素.html":{"ref":"Array/旋转数组的最小元素.html","tf":0.030303030303030304},"Array/斐波那契数列.html":{"ref":"Array/斐波那契数列.html","tf":0.09523809523809523},"Array/跳台阶.html":{"ref":"Array/跳台阶.html","tf":0.0625},"Array/变态跳台阶.html":{"ref":"Array/变态跳台阶.html","tf":0.04},"Array/矩阵覆盖.html":{"ref":"Array/矩阵覆盖.html","tf":0.025},"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.029069767441860465},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00819672131147541},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.02269861286254729},"String/替换空格.html":{"ref":"String/替换空格.html","tf":0.041666666666666664},"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.03007518796992481},"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.05755395683453238},"Stack-Queue/用两个栈实现队列.html":{"ref":"Stack-Queue/用两个栈实现队列.html","tf":0.05405405405405406},"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.03766233766233766},"Tree/重建二叉树.html":{"ref":"Tree/重建二叉树.html","tf":0.022222222222222223},"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.014492753623188406},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.02053388090349076},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.02304147465437788},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.04},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.027210884353741496},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.02962962962962963},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.028985507246376812},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.03597122302158273},"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.011560693641618497},"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.015384615384615385},"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.0125},"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.023809523809523808},"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.021739130434782608},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.022004889975550123},"Matrix/二维数组中的查找.html":{"ref":"Matrix/二维数组中的查找.html","tf":0.041666666666666664},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.021897810218978103},"Bit/二进制中1的个数.html":{"ref":"Bit/二进制中1的个数.html","tf":0.044444444444444446},"Bit/数值的整数次方.html":{"ref":"Bit/数值的整数次方.html","tf":0.030927835051546393}}}}}},"r":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704}}}}}},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.0035971223021582736},"Stack-Queue/用两个栈实现队列.html":{"ref":"Stack-Queue/用两个栈实现队列.html","tf":0.013513513513513514}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.0035971223021582736}},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.007194244604316547}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},")":{"docs":{},";":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.0035971223021582736}}}}}}}}}}}}},";":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.0035971223021582736}}}}}}}},"的":{"docs":{},"栈":{"docs":{"Stack-Queue/用两个栈实现队列.html":{"ref":"Stack-Queue/用两个栈实现队列.html","tf":0.013513513513513514}}}}}}},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835},"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.011111111111111112},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.01639344262295082},"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.007692307692307693}},"o":{"docs":{},"r":{"docs":{"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609}}}},".":{"docs":{"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.007407407407407408}}}}}},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":1.2535971223021583},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":2.5},"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576},"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.005780346820809248}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.005780346820809248}}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0025974025974025974}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0025974025974025974}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0025974025974025974}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.003896103896103896}}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.004106776180698152},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.01},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203},"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.015384615384615385}}}}}}},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.0035971223021582736}}}}}},"p":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}},"(":{"docs":{},")":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.0035971223021582736},"Stack-Queue/用两个栈实现队列.html":{"ref":"Stack-Queue/用两个栈实现队列.html","tf":0.013513513513513514}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.0035971223021582736}},".":{"docs":{},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.0035971223021582736}}}}}}}},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.0035971223021582736}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.0035971223021582736}}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.0035971223021582736}}}}}}}},"栈":{"docs":{},"为":{"docs":{},"空":{"docs":{},"才":{"docs":{},"允":{"docs":{},"许":{"docs":{},"倒":{"docs":{},"数":{"docs":{},"据":{"docs":{},"。":{"docs":{},"只":{"docs":{},"要":{"docs":{},"满":{"docs":{},"足":{"docs":{},"以":{"docs":{},"上":{"docs":{},"两":{"docs":{},"个":{"docs":{},"限":{"docs":{},"制":{"docs":{},"，":{"docs":{},"倒":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"行":{"docs":{},"为":{"docs":{},"可":{"docs":{},"以":{"docs":{},"发":{"docs":{},"生":{"docs":{},"在":{"docs":{},"任":{"docs":{},"何":{"docs":{},"时":{"docs":{},"刻":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.0035971223021582736}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"不":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"不":{"docs":{},"允":{"docs":{},"许":{"docs":{},"倒":{"docs":{},"数":{"docs":{},"据":{"docs":{"Stack-Queue/用两个栈实现队列.html":{"ref":"Stack-Queue/用两个栈实现队列.html","tf":0.013513513513513514}}}}}}}}}}}}},"的":{"docs":{},"栈":{"docs":{"Stack-Queue/用两个栈实现队列.html":{"ref":"Stack-Queue/用两个栈实现队列.html","tf":0.013513513513513514}}}}},"w":{"docs":{},"e":{"docs":{},"r":{"1":{"docs":{},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"Bit/数值的整数次方.html":{"ref":"Bit/数值的整数次方.html","tf":0.010309278350515464}}}}}}}}},"2":{"docs":{},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"Bit/数值的整数次方.html":{"ref":"Bit/数值的整数次方.html","tf":0.010309278350515464}}}}}}}}},"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203}}}}}},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.013071895424836602},"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943},"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":0.013333333333333334},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.004889975550122249}},",":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}}}},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547}}}}}},"i":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732}}}}},"c":{"docs":{},"k":{"docs":{"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}}}}},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{},"[":{"docs":{},"]":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},">":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}}},"s":{"docs":{},")":{"docs":{},";":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},">":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.01},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}}},"s":{"2":{"docs":{},")":{"docs":{},";":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}}}}},"docs":{},")":{"docs":{},";":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"2":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"1":{"docs":{},",":{"docs":{"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576}}}},"2":{"docs":{},",":{"docs":{"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576}}}},"docs":{}}}}}}},"docs":{}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"2":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203}}}}}}}}}}},"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"2":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203}}}}}},"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.010050251256281407}}}}},"2":{"docs":{},")":{"docs":{},";":{"docs":{"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.010050251256281407}}}}},"3":{"docs":{},")":{"docs":{},";":{"docs":{"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.010050251256281407}}}}},"4":{"docs":{},")":{"docs":{},";":{"docs":{"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.010050251256281407}}}}},"docs":{}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"f":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"1":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"1":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704}}}}}},"2":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704}}}}}},"3":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704}}}}}},"4":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704}}}}}},"docs":{}}}}}}},"2":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"1":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704}}}}}},"2":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704}}}}}},"3":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704}}}}}},"4":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704}}}}}},"docs":{}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938}}}}},"2":{"docs":{},")":{"docs":{},";":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876}}}}},"docs":{}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"o":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"1":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.007518796992481203}}}}}}}}}}}}}}},"2":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.007518796992481203}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"o":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"1":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.007518796992481203}}}}}}}}}}},"2":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.007518796992481203}},"e":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.007518796992481203}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},",":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{},"[":{"docs":{},"]":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},")":{"docs":{},";":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502},"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.007194244604316547},"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.039568345323741004}}}}},"c":{"docs":{},"e":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.021367521367521368}},".":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274}}},"s":{"docs":{},")":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.017094017094017096}}},"[":{"docs":{},"i":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274}},"]":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274}}}},"j":{"docs":{},"]":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}},".":{"docs":{"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943}}}}}}},"f":{"docs":{},"i":{"docs":{},"t":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.008547008547008548}},".":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274}}}}}},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":2.5100502512562812}},";":{"docs":{"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704}}},"[":{"docs":{},"i":{"docs":{"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704}}}},"o":{"docs":{},"f":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"1":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.010869565217391304}}}}},"e":{"docs":{"Array/矩阵覆盖.html":{"ref":"Array/矩阵覆盖.html","tf":0.0125}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"Array/变态跳台阶.html":{"ref":"Array/变态跳台阶.html","tf":0.02}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.014492753623188406}},"]":{"docs":{"Tree/重建二叉树.html":{"ref":"Tree/重建二叉树.html","tf":0.022222222222222223}}}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":1.4430641821946169}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0025974025974025974}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0025974025974025974}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0025974025974025974}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0025974025974025974}}}}}}}}}}}}},",":{"docs":{"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.007246376811594203}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.007246376811594203}}}}}}}}}}}}}},"[":{"docs":{},"]":{"docs":{},"中":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"[":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"]":{"docs":{},"是":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"，":{"docs":{},"在":{"docs":{},"i":{"docs":{},"n":{"docs":{},"[":{"docs":{},"]":{"docs":{},"中":{"docs":{},"找":{"docs":{},"到":{"docs":{},"i":{"docs":{},"n":{"docs":{},"[":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{},"=":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"Tree/重建二叉树.html":{"ref":"Tree/重建二叉树.html","tf":0.022222222222222223}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"Tree/重建二叉树.html":{"ref":"Tree/重建二叉树.html","tf":0.022222222222222223}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"Tree/重建二叉树.html":{"ref":"Tree/重建二叉树.html","tf":0.022222222222222223},"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.007246376811594203}},"]":{"docs":{"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.014492753623188406}}}}}}}},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274}}}},"u":{"docs":{},"t":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":5},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":3.333333333333333}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.01},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374}}}}}}}}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.01}}}}}}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.01079136690647482}}}}}}}},"r":{"docs":{},"e":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.007194244604316547},"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.007194244604316547},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203},"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.007194244604316547}},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576}},";":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.02054794520547945}}},")":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576}}}}}},"o":{"docs":{},"v":{"docs":{"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":2.0065359477124183}},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.006535947712418301}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.006535947712418301}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.0273972602739726},"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835},"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.0392156862745098},"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.041237113402061855},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.017985611510791366},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.048458149779735685},"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.025547445255474453},"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.007194244604316547},"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.008547008547008548},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.00975609756097561},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.010050251256281407},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.014492753623188406},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.005917159763313609},"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.023668639053254437},"Array/旋转数组的最小元素.html":{"ref":"Array/旋转数组的最小元素.html","tf":0.045454545454545456},"Array/矩阵覆盖.html":{"ref":"Array/矩阵覆盖.html","tf":0.0375},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.01366120218579235},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.015132408575031526},"String/替换空格.html":{"ref":"String/替换空格.html","tf":0.020833333333333332},"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.015037593984962405},"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.02877697841726619},"Stack-Queue/用两个栈实现队列.html":{"ref":"Stack-Queue/用两个栈实现队列.html","tf":0.013513513513513514},"Tree/重建二叉树.html":{"ref":"Tree/重建二叉树.html","tf":0.022222222222222223},"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.014492753623188406},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.011293634496919919},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.02},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.013605442176870748},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.011111111111111112},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.014492753623188406},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547},"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.011560693641618497},"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.0125},"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.02976190476190476},"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.010869565217391304},"Matrix/二维数组中的查找.html":{"ref":"Matrix/二维数组中的查找.html","tf":0.027777777777777776},"Bit/数值的整数次方.html":{"ref":"Bit/数值的整数次方.html","tf":0.010309278350515464}},";":{"docs":{"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":0.013333333333333334},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203},"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.011627906976744186},"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.0035971223021582736},"Stack-Queue/用两个栈实现队列.html":{"ref":"Stack-Queue/用两个栈实现队列.html","tf":0.013513513513513514},"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.02077922077922078},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.004106776180698152},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.010948905109489052}}},":":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.014184397163120567},"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943},"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.005780346820809248},"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.0125},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.010869565217391304}}}}},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"1":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{"String/替换空格.html":{"ref":"String/替换空格.html","tf":0.010416666666666666}}}}}}}}}}}}}},"2":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{"String/替换空格.html":{"ref":"String/替换空格.html","tf":0.010416666666666666}}}}}}}}}}}}}},"docs":{}}}}}}}}}}},"s":{"1":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736}},"[":{"1":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736}}}}}},"docs":{}}},"2":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736}},"[":{"1":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736}}}}}},"docs":{}}},"3":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736}},"[":{"1":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736}}}}}},"docs":{}}},"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.013071895424836602},"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943}}}}}}}}}}}},";":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.014388489208633094},"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.007194244604316547}}},"[":{"0":{"docs":{},"]":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736}}}},"1":{"docs":{},"]":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.007194244604316547}}}},"docs":{}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.007194244604316547}}}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"i":{"docs":{"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203}}}}}}}},"存":{"docs":{},"储":{"docs":{},"结":{"docs":{},"果":{"docs":{},"，":{"docs":{},"(":{"docs":{},"因":{"docs":{},"为":{"docs":{},"增":{"docs":{},"删":{"docs":{},"多":{"docs":{},"所":{"docs":{},"以":{"docs":{},"用":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"而":{"docs":{},"不":{"docs":{},"用":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.007194244604316547}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}}}}}},"d":{"docs":{},",":{"docs":{"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.02830188679245283}}}},"l":{"docs":{"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":0.013333333333333334}}},"c":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Array/矩阵覆盖.html":{"ref":"Array/矩阵覆盖.html","tf":0.0125}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"1":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.005813953488372093}}}}}}}}},"2":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},")":{"docs":{},";":{"docs":{"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.005813953488372093}}}}}}}}}}},"3":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.005813953488372093}}}}}}}}},"docs":{}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.011560693641618497},"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.015384615384615385}}}},"d":{"docs":{"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.010869565217391304}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.004889975550122249}}}}}}},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":2.0051546391752577},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":3.3480032599836997}},"e":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"2":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{},"[":{"docs":{},"]":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}}}}}}}}},"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{},"[":{"docs":{},"]":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{},"[":{"docs":{},"]":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},",":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{},"[":{"docs":{},"]":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},",":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}}}}}}},"o":{"docs":{},"t":{"docs":{"Tree/重建二叉树.html":{"ref":"Tree/重建二叉树.html","tf":0.022222222222222223},"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.007246376811594203}},")":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.01948051948051948},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}},";":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0025974025974025974}}}}},"b":{"docs":{},"o":{"docs":{},"t":{"docs":{"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.023076923076923078}}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736},"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.010869565217391304}},"e":{"docs":{},"?":{"docs":{"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203}}},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.007194244604316547}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.007194244604316547}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.022222222222222223},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704},"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.06923076923076923}},",":{"docs":{"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}},";":{"docs":{"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704},"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0025974025974025974}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.005044136191677175}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.02654867256637168},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047},"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.0125}}}}}},"s":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00819672131147541}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.00684931506849315},"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625}}}},"f":{"docs":{},"e":{"docs":{},",":{"docs":{"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}}}}}},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.011111111111111112},"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502},"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.008213552361396304},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.013824884792626729},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.00684931506849315},"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502}}},"区":{"docs":{},"方":{"docs":{},"法":{"1":{"docs":{},"：":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274}}}},"2":{"docs":{},"：":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274}}}},"docs":{}}},"看":{"docs":{},"到":{"docs":{},"的":{"docs":{},"改":{"docs":{},"进":{"docs":{},"，":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"一":{"docs":{},"遍":{"docs":{},"即":{"docs":{},"可":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047}}}}}}}}}}},"：":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}}}}}}},"v":{"docs":{"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.010050251256281407},"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.005952380952380952}},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}}}}}}},"r":{"docs":{},"t":{"docs":{"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":2.0065359477124183},"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":2.0051546391752577},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":1.2535971223021583},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.004405286343612335},"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.018867924528301886},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.011834319526627219},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0036496350364963502}},".":{"docs":{"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943}}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":5}},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943}}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"f":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.00684931506849315}}}}}},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.006535947712418301},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.01507537688442211},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203},"String/替换空格.html":{"ref":"String/替换空格.html","tf":0.010416666666666666},"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}},"?":{"docs":{"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943},"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.005952380952380952}}},".":{"docs":{"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547},"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.010869565217391304}}}}}}},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.0273972602739726},"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.014184397163120567},"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.006535947712418301},"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.020618556701030927},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.014388489208633094},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.01762114537444934},"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.022222222222222223},"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.014598540145985401},"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.022222222222222223},"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.018867924528301886},"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.01282051282051282},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.01951219512195122},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.020100502512562814},"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":0.013333333333333334},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203},"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.017699115044247787},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.008875739644970414},"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.011834319526627219},"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.01744186046511628},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00546448087431694},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.02395964691046658},"String/替换空格.html":{"ref":"String/替换空格.html","tf":0.03125},"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.03759398496240601},"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.014388489208633094},"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.025974025974025976},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.006160164271047228},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.02304147465437788},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.04},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.027210884353741496},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.025925925925925925},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.036231884057971016},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.02877697841726619},"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.007692307692307693},"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625},"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.017857142857142856},"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.010869565217391304},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.019559902200488997},"Matrix/二维数组中的查找.html":{"ref":"Matrix/二维数组中的查找.html","tf":0.027777777777777776},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.021897810218978103}}}}},"r":{"docs":{},"t":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736},"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.014388489208633094},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.003080082135523614},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.007407407407407408},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203}},",":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.0035971223021582736},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576}}},";":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.007194244604316547},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.004106776180698152},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203}}},")":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.028901734104046242}},")":{"docs":{"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.005780346820809248}}},";":{"docs":{"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.005780346820809248}}}}}}}}}},"c":{"docs":{},"k":{"1":{"docs":{"Stack-Queue/用两个栈实现队列.html":{"ref":"Stack-Queue/用两个栈实现队列.html","tf":0.013513513513513514}},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"Stack-Queue/用两个栈实现队列.html":{"ref":"Stack-Queue/用两个栈实现队列.html","tf":0.013513513513513514}}}}}}}}}}}}}}},"2":{"docs":{"Stack-Queue/用两个栈实现队列.html":{"ref":"Stack-Queue/用两个栈实现队列.html","tf":0.013513513513513514}},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Stack-Queue/用两个栈实现队列.html":{"ref":"Stack-Queue/用两个栈实现队列.html","tf":0.013513513513513514}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"1":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Stack-Queue/用两个栈实现队列.html":{"ref":"Stack-Queue/用两个栈实现队列.html","tf":0.013513513513513514}}}}}}}}}}},"docs":{}}}}}}}}}}}}},"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.005917159763313609},"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.014388489208633094},"Stack-Queue/用两个栈实现队列.html":{"ref":"Stack-Queue/用两个栈实现队列.html","tf":0.02702702702702703},"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.02207792207792208}},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047}}}},";":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.00909090909090909}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"i":{"docs":{},")":{"docs":{},";":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0025974025974025974}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.006493506493506494}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.006493506493506494}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.006493506493506494}}}}}}}}}}}}}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047},"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.007194244604316547},"Stack-Queue/用两个栈实现队列.html":{"ref":"Stack-Queue/用两个栈实现队列.html","tf":0.02702702702702703},"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.012987012987012988}}}}}}},"_":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"Stack-Queue/用两个栈实现队列.html":{"ref":"Stack-Queue/用两个栈实现队列.html","tf":0.013513513513513514}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.00684931506849315}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.00684931506849315}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.003896103896103896}},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0025974025974025974}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"k":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":1.675213675213675}},")":{"docs":{},",":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274}}}}}}},"d":{"docs":{},";":{"docs":{"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.006535947712418301},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},".":{"docs":{},"h":{"docs":{},"中":{"docs":{},"的":{"docs":{},"q":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"参":{"docs":{},"见":{"docs":{},"：":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"w":{"docs":{},"w":{"docs":{},"w":{"docs":{},".":{"docs":{},"c":{"docs":{},"n":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"c":{"docs":{},"c":{"docs":{},"b":{"docs":{},"b":{"docs":{},"/":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"/":{"2":{"0":{"1":{"0":{"docs":{},"/":{"0":{"1":{"docs":{},"/":{"1":{"5":{"docs":{},"/":{"1":{"6":{"4":{"8":{"8":{"2":{"7":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{"String/替换空格.html":{"ref":"String/替换空格.html","tf":0.010416666666666666}},"a":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943}}}}}}},")":{"docs":{"String/替换空格.html":{"ref":"String/替换空格.html","tf":0.020833333333333332}}},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{"String/替换空格.html":{"ref":"String/替换空格.html","tf":0.010416666666666666}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"String/替换空格.html":{"ref":"String/替换空格.html","tf":0.010416666666666666}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"j":{"docs":{"String/替换空格.html":{"ref":"String/替换空格.html","tf":0.03125}},",":{"docs":{"String/替换空格.html":{"ref":"String/替换空格.html","tf":0.010416666666666666}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"\"":{"docs":{"String/替换空格.html":{"ref":"String/替换空格.html","tf":0.010416666666666666}}}}}}}}}}}}}}},";":{"docs":{"String/替换空格.html":{"ref":"String/替换空格.html","tf":0.010416666666666666}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"String/替换空格.html":{"ref":"String/替换空格.html","tf":0.020833333333333332},"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.005194805194805195}},";":{"docs":{"String/替换空格.html":{"ref":"String/替换空格.html","tf":0.010416666666666666}}},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{"String/替换空格.html":{"ref":"String/替换空格.html","tf":0.010416666666666666},"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"w":{"docs":{"String/替换空格.html":{"ref":"String/替换空格.html","tf":0.010416666666666666}}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}}}}}}}}}}}}}}},"e":{"docs":{},"p":{"docs":{"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.011560693641618497}}}}},"u":{"docs":{},"c":{"docs":{},"h":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.00684931506849315},"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.014184397163120567},"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.006535947712418301},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.004889975550122249}}},"c":{"docs":{},"e":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.005044136191677175}}}}},"m":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":3.333333333333333},"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":3.3370370370370366},"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.014598540145985401},"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":2.511111111111111},"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":2.017699115044248},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.004106776180698152},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":2.5046082949308754}},".":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502},"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.011111111111111112}}},"为":{"docs":{},"大":{"docs":{},"和":{"docs":{},"，":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.008849557522123894}}}}}}}}}},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732},"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943}}}}}},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":3.3369829683698295},"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":2.0088495575221237},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":2.0088757396449703}},"/":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0072992700729927005}},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.005917159763313609}}}}}}}}}}}}}}}}},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.004106776180698152},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":5.003703703703704},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":3.3405797101449273}},"s":{"2":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203}}}}}}}}},"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}}}}}}}},".":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"d":{"docs":{},"u":{"docs":{},"p":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}}}}}}}}}}}},"多":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"条":{"docs":{},"件":{"docs":{},"：":{"docs":{},"给":{"docs":{},"定":{"docs":{},"的":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"可":{"docs":{},"能":{"docs":{},"有":{"docs":{},"重":{"docs":{},"复":{"docs":{},"元":{"docs":{},"素":{"docs":{"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"c":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00546448087431694}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835}}}}}}},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}}}},"t":{"docs":{"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.006535947712418301},"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.014814814814814815},"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.011834319526627219},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.01026694045174538},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.013824884792626729},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.007407407407407408},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},")":{"docs":{},";":{"docs":{"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.011834319526627219}}}}}}}}}}}},")":{"docs":{},".":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203}}}}},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":2},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":2.5}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732}}}}}}}},".":{"docs":{"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"2":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"1":{"docs":{},",":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736}}}},"2":{"docs":{},",":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736}}}},"3":{"docs":{},",":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736}}}},"docs":{}}}}}}},"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"1":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.004405286343612335}}}}}}}}},"2":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.004405286343612335}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":1.6837606837606836}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.007407407407407408}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835}}}}},"o":{"docs":{},"w":{"docs":{"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.023809523809523808}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.011904761904761904}}}}}}}},";":{"docs":{"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.005952380952380952}}}}}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547}},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},")":{"docs":{},"/":{"docs":{"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.006535947712418301}}}},"[":{"0":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.006535947712418301}}}}}},"docs":{}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{},",":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}}}}}}}},";":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.0035971223021582736}}},"时":{"docs":{},"前":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"下":{"docs":{},"标":{"docs":{},"为":{"docs":{},"s":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.0035971223021582736}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.010309278350515464}},",":{"docs":{"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732}}}}}}}}}}}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},".":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"n":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732}}}}}}}}}}}}}}}}}},"(":{"1":{"5":{"docs":{},",":{"docs":{"Matrix/二维数组中的查找.html":{"ref":"Matrix/二维数组中的查找.html","tf":0.013888888888888888}}}},"docs":{}},"docs":{}}}}}},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732}}}}}}}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"1":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.01762114537444934}}}}}}}}},"2":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.01762114537444934}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"1":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736}}}},"docs":{}}},"2":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736}}}},"docs":{}}},"3":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736}}}},"docs":{}}},"docs":{}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"1":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"String/替换空格.html":{"ref":"String/替换空格.html","tf":0.010416666666666666}}}}}}}}}},"2":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"String/替换空格.html":{"ref":"String/替换空格.html","tf":0.010416666666666666}}}}}}}}}},"docs":{}}}}}}}}}}}}},"\"":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"=":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}}}}},"=":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}}}}}}}}}}}}}}}}}}}}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.014492753623188406}}}}}}}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},":":{"docs":{},"\"":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},":":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938}}}}}}}},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},":":{"docs":{},"\"":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938}}}}}}}},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}}}}}}},")":{"docs":{},";":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.011111111111111112},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203},"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.01},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.011111111111111112},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"x":{"docs":{},")":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},",":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},",":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},",":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"d":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.005044136191677175}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}}}}}}}}}}}}}}},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}}},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"s":{"docs":{},",":{"2":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"c":{"docs":{},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"1":{"docs":{},")":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.005952380952380952}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"i":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.011111111111111112},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.01},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.011111111111111112},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547}}},"\"":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"]":{"docs":{},":":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876}}}}}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.007792207792207792},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.007792207792207792}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0025974025974025974}},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.004889975550122249}}}}}}}}},",":{"docs":{"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.007194244604316547}}},";":{"docs":{"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.007194244604316547}}},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":2.002958579881657}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"1":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047}}}}}}}}},"3":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047}}}}}}}}},"4":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047}}}}}}}}},"docs":{}}}}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},",":{"docs":{"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.005813953488372093}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.005813953488372093},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.005474452554744526}}}}}}},")":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.0035971223021582736}},";":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.007194244604316547}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.009124087591240875}}}}}}}}}}},")":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}},".":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"f":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"%":{"docs":{},"d":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}},"\"":{"docs":{},",":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":3.333333333333333}}}}}}}},"k":{"docs":{},"i":{"docs":{},"p":{"docs":{"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"1":{"docs":{"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576}},")":{"docs":{},")":{"docs":{},";":{"docs":{"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576}}}}}},"2":{"docs":{"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576}},")":{"docs":{},")":{"docs":{},";":{"docs":{"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576}}}}}},"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.00684931506849315},"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.015463917525773196},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.02158273381294964},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.013215859030837005},"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.011111111111111112},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00546448087431694},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.017654476670870115},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.006160164271047228},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.013824884792626729}},")":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.02054794520547945},"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.010309278350515464},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.014388489208633094},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.013215859030837005},"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.007407407407407408},"Array/跳台阶.html":{"ref":"Array/跳台阶.html","tf":0.03125},"Array/变态跳台阶.html":{"ref":"Array/变态跳台阶.html","tf":0.02},"Array/矩阵覆盖.html":{"ref":"Array/矩阵覆盖.html","tf":0.0125},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00546448087431694},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.015132408575031526},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.004106776180698152},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.009216589861751152}},";":{"docs":{"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.010309278350515464},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.007194244604316547},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.00881057268722467},"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.006305170239596469},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576}}},")":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938}}}},".":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.00684931506849315},"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576}}},"?":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736}}},"在":{"docs":{},"前":{"docs":{},"半":{"docs":{},"段":{"docs":{"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.00881057268722467}}}}}},",":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00819672131147541},"Matrix/二维数组中的查找.html":{"ref":"Matrix/二维数组中的查找.html","tf":0.013888888888888888}}},"大":{"docs":{},"于":{"docs":{},"基":{"docs":{},"准":{"docs":{},"则":{"docs":{},"划":{"docs":{},"掉":{"docs":{},"基":{"docs":{},"准":{"docs":{},"所":{"docs":{},"在":{"docs":{},"的":{"docs":{},"列":{"docs":{},"，":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"小":{"docs":{},"于":{"docs":{},"基":{"docs":{},"准":{"docs":{},"则":{"docs":{},"划":{"docs":{},"掉":{"docs":{},"基":{"docs":{},"准":{"docs":{},"所":{"docs":{},"在":{"docs":{},"的":{"docs":{},"行":{"docs":{},"，":{"docs":{},"逐":{"docs":{},"渐":{"docs":{},"缩":{"docs":{},"小":{"docs":{},"范":{"docs":{},"围":{"docs":{"Matrix/二维数组中的查找.html":{"ref":"Matrix/二维数组中的查找.html","tf":0.013888888888888888}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625}}}},"s":{"docs":{},"k":{"docs":{"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":3.383333333333333}},"s":{"docs":{},",":{"docs":{"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625}}},".":{"docs":{"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.0125}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{},";":{"docs":{"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625}}}}}}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203}},".":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.00684931506849315}}}}}},"o":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":3.340182648401826},"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.014184397163120567},"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.006535947712418301},"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00546448087431694},"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625}},"s":{"docs":{},"u":{"docs":{},"m":{"1":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.00684931506849315}}}}}}}}},"2":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.00684931506849315}}}}}}}}},"3":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.00684931506849315}}}}}}}}},"docs":{}}},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.0035971223021582736}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.0035971223021582736}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.0035971223021582736}},"(":{"docs":{},")":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.0035971223021582736}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835}}}}}},"p":{"docs":{"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.011111111111111112},"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.015384615384615385}}},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943},"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":0.013333333333333334},"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.008849557522123894},"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.007692307692307693}}}}},"o":{"docs":{},".":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047}}}},",":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}},";":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":1.6666666666666665},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547}},"s":{"docs":{},".":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}},".":{"docs":{"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.011111111111111112},"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.007692307692307693}}},":":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}}}},"m":{"docs":{},"p":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.0035971223021582736},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}},",":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.009240246406570842},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.009216589861751152},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.01},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.013605442176870748},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.014492753623188406}}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}}}}},"2":{"docs":{},")":{"docs":{},";":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}}}}},"3":{"docs":{},")":{"docs":{},";":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}}}}},"4":{"docs":{},")":{"docs":{},";":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}}}}},"5":{"docs":{},")":{"docs":{},";":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}}}}},"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576}}}}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203}}}}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.003080082135523614},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0072992700729927005}},")":{"docs":{},";":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502}}}}}}}}}},";":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.0035971223021582736},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}},"(":{"docs":{},"n":{"docs":{},")":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502},"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.007246376811594203}}}}},"r":{"docs":{},"i":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502},"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.007692307692307693}}},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.008547008547008548}}}}},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.0035971223021582736},"Stack-Queue/用两个栈实现队列.html":{"ref":"Stack-Queue/用两个栈实现队列.html","tf":0.013513513513513514}},";":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.01079136690647482},"Stack-Queue/用两个栈实现队列.html":{"ref":"Stack-Queue/用两个栈实现队列.html","tf":0.02702702702702703}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.004889975550122249}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{},"[":{"docs":{},"]":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},")":{"docs":{},";":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":1.4358178053830226}}}}}}},"u":{"docs":{},"e":{"docs":{"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609},"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.005780346820809248}},";":{"docs":{"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876},"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.0035971223021582736},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374},"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.005780346820809248},"Matrix/二维数组中的查找.html":{"ref":"Matrix/二维数组中的查找.html","tf":0.013888888888888888},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}},"e":{"docs":{},"e":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987},"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":1.4285714285714284}},":":{"docs":{"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.007246376811594203}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}}}},";":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987},"Tree/重建二叉树.html":{"ref":"Tree/重建二叉树.html","tf":0.022222222222222223}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"Tree/重建二叉树.html":{"ref":"Tree/重建二叉树.html","tf":0.022222222222222223},"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.014492753623188406}},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"[":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"Tree/重建二叉树.html":{"ref":"Tree/重建二叉树.html","tf":0.022222222222222223}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"[":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.007246376811594203}}},".":{"docs":{"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.014492753623188406}}}}}},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609},"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.02158273381294964}}}}},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0025974025974025974}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"s":{"docs":{},":":{"docs":{"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"?":{"docs":{"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.015384615384615385}}}}}}},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"h":{"docs":{},"u":{"docs":{},"a":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":3.333333333333333}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876}}}}}}}}},"u":{"docs":{},"p":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.00684931506849315},"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}},":":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502},"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704},"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.005952380952380952}}},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"2":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},")":{"docs":{},";":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}}}}}}}}}},"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},")":{"docs":{},";":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.00684931506849315},"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.006535947712418301},"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502},"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.03773584905660377},"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547},"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.005952380952380952},"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.010869565217391304}},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374}},";":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374}}}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.013605442176870748}}}}}}}},"n":{"docs":{},"k":{"docs":{},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732},"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.005780346820809248}}}}}}},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.003080082135523614},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374},"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":3.3487179487179484}},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.007692307692307693}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}}}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":2.0059171597633134}}}}}},"d":{"docs":{},"o":{"docs":{"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}}}}}},"{":{"0":{"docs":{},",":{"0":{"docs":{},",":{"1":{"docs":{},",":{"1":{"docs":{},",":{"1":{"docs":{},",":{"2":{"docs":{},",":{"2":{"docs":{},",":{"3":{"docs":{},",":{"3":{"docs":{},",":{"4":{"docs":{},"}":{"docs":{},";":{"docs":{"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.006535947712418301}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.004106776180698152}}}},"1":{"docs":{},",":{"2":{"docs":{},",":{"2":{"docs":{},",":{"2":{"docs":{},",":{"4":{"docs":{},",":{"8":{"docs":{},",":{"1":{"0":{"docs":{},"}":{"docs":{},"，":{"docs":{},"查":{"docs":{},"找":{"2":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"1":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"0":{"docs":{},"；":{"docs":{},"查":{"docs":{},"找":{"3":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"2":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"3":{"docs":{},"；":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938}}}},"docs":{}}}}},"docs":{}}}}}}}}},"docs":{}}}}},"docs":{}}}}},"4":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"4":{"docs":{},"；":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876}}}},"docs":{}}}}},"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"2":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"1":{"docs":{},"；":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0037831021437578815}}}},"docs":{}}}}},"docs":{}}}},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"2":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"3":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938}},"；":{"docs":{},"查":{"docs":{},"找":{"3":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"2":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"3":{"docs":{},"；":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938}}}},"docs":{}}}}},"docs":{}}}}}}}}},"docs":{}}}}},"docs":{}}}}},"docs":{}}}}}}}}},"docs":{}}}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.01079136690647482},"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.005813953488372093},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}},"}":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}},"2":{"docs":{},",":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"Matrix/二维数组中的查找.html":{"ref":"Matrix/二维数组中的查找.html","tf":0.013888888888888888}}}},"3":{"docs":{},",":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}},"4":{"docs":{},",":{"5":{"docs":{},",":{"6":{"docs":{},",":{"7":{"docs":{},",":{"8":{"docs":{},",":{"1":{"docs":{},",":{"2":{"docs":{},",":{"3":{"docs":{},"}":{"docs":{},";":{"docs":{"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"Matrix/二维数组中的查找.html":{"ref":"Matrix/二维数组中的查找.html","tf":0.013888888888888888}}},"}":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}},"6":{"docs":{},",":{"docs":{"Matrix/二维数组中的查找.html":{"ref":"Matrix/二维数组中的查找.html","tf":0.013888888888888888}}}},"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.0410958904109589},"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.02127659574468085},"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.0196078431372549},"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.05670103092783505},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.039568345323741004},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.04405286343612335},"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.05555555555555555},"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.025547445255474453},"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.05755395683453238},"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.022222222222222223},"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.018867924528301886},"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.021367521367521368},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.04390243902439024},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.04522613065326633},"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":0.05333333333333334},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.057971014492753624},"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.02654867256637168},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.038461538461538464},"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.05325443786982249},"Array/旋转数组的最小元素.html":{"ref":"Array/旋转数组的最小元素.html","tf":0.07575757575757576},"Array/斐波那契数列.html":{"ref":"Array/斐波那契数列.html","tf":0.09523809523809523},"Array/跳台阶.html":{"ref":"Array/跳台阶.html","tf":0.0625},"Array/变态跳台阶.html":{"ref":"Array/变态跳台阶.html","tf":0.04},"Array/矩阵覆盖.html":{"ref":"Array/矩阵覆盖.html","tf":0.0625},"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.05813953488372093},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.02459016393442623},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.03783102143757881},"String/替换空格.html":{"ref":"String/替换空格.html","tf":0.07291666666666667},"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.05263157894736842},"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.10071942446043165},"Stack-Queue/用两个栈实现队列.html":{"ref":"Stack-Queue/用两个栈实现队列.html","tf":0.08108108108108109},"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.05194805194805195},"Tree/重建二叉树.html":{"ref":"Tree/重建二叉树.html","tf":0.044444444444444446},"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.021739130434782608},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.04106776180698152},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.041474654377880185},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.08},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.047619047619047616},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.05185185185185185},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.036231884057971016},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.050359712230215826},"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.04046242774566474},"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.015384615384615385},"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.025},"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.05952380952380952},"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.021739130434782608},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.029339853300733496},"Matrix/二维数组中的查找.html":{"ref":"Matrix/二维数组中的查找.html","tf":0.06944444444444445},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.029197080291970802},"Bit/二进制中1的个数.html":{"ref":"Bit/二进制中1的个数.html","tf":0.08888888888888889},"Bit/数值的整数次方.html":{"ref":"Bit/数值的整数次方.html","tf":0.030927835051546393}},"空":{"docs":{},"}":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}},"}":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.02054794520547945},"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.02127659574468085},"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.07216494845360824},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.03237410071942446},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.04405286343612335},"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.04814814814814815},"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.01824817518248175},"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.03597122302158273},"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.021367521367521368},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.03414634146341464},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.02512562814070352},"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":0.02666666666666667},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.043478260869565216},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.04142011834319527},"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.04142011834319527},"Array/旋转数组的最小元素.html":{"ref":"Array/旋转数组的最小元素.html","tf":0.10606060606060606},"Array/矩阵覆盖.html":{"ref":"Array/矩阵覆盖.html","tf":0.0375},"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.06976744186046512},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.0273224043715847},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.05296343001261034},"String/替换空格.html":{"ref":"String/替换空格.html","tf":0.07291666666666667},"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.05263157894736842},"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.09352517985611511},"Stack-Queue/用两个栈实现队列.html":{"ref":"Stack-Queue/用两个栈实现队列.html","tf":0.08108108108108109},"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.04935064935064935},"Tree/重建二叉树.html":{"ref":"Tree/重建二叉树.html","tf":0.022222222222222223},"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.007246376811594203},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.028747433264887063},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.05069124423963134},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.05},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.05442176870748299},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.044444444444444446},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.043478260869565216},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.02877697841726619},"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.03468208092485549},"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.03125},"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.05952380952380952},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.02444987775061125},"Matrix/二维数组中的查找.html":{"ref":"Matrix/二维数组中的查找.html","tf":0.08333333333333333},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.025547445255474453},"Bit/二进制中1的个数.html":{"ref":"Bit/二进制中1的个数.html","tf":0.022222222222222223},"Bit/数值的整数次方.html":{"ref":"Bit/数值的整数次方.html","tf":0.05154639175257732}},"*":{"docs":{},"/":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047}}}},",":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.004106776180698152}}},";":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076}}}},"一":{"docs":{},"个":{"docs":{},"输":{"docs":{},"入":{"docs":{},"有":{"docs":{},"且":{"docs":{},"仅":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"输":{"docs":{},"出":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"最":{"docs":{},"多":{"docs":{},"只":{"docs":{},"能":{"docs":{},"用":{"docs":{},"一":{"docs":{},"次":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.00684931506849315}}}}}}}}}}}}}}}}}}}}}}}}},"只":{"docs":{},"青":{"docs":{},"蛙":{"docs":{},"一":{"docs":{},"次":{"docs":{},"可":{"docs":{},"以":{"docs":{},"跳":{"docs":{},"上":{"1":{"docs":{},"级":{"docs":{},"台":{"docs":{},"阶":{"docs":{},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"跳":{"docs":{},"上":{"2":{"docs":{},"级":{"docs":{},"。":{"docs":{},"求":{"docs":{},"该":{"docs":{},"青":{"docs":{},"蛙":{"docs":{},"跳":{"docs":{},"上":{"docs":{},"一":{"docs":{},"个":{"docs":{},"n":{"docs":{},"级":{"docs":{},"的":{"docs":{},"台":{"docs":{},"阶":{"docs":{},"总":{"docs":{},"共":{"docs":{},"有":{"docs":{},"多":{"docs":{},"少":{"docs":{},"种":{"docs":{},"跳":{"docs":{},"法":{"docs":{},"（":{"docs":{},"先":{"docs":{},"后":{"docs":{},"次":{"docs":{},"序":{"docs":{},"不":{"docs":{},"同":{"docs":{},"算":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"）":{"docs":{},"。":{"docs":{"Array/跳台阶.html":{"ref":"Array/跳台阶.html","tf":0.03125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"…":{"docs":{},"…":{"docs":{},"它":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"跳":{"docs":{},"上":{"docs":{},"n":{"docs":{},"级":{"docs":{},"。":{"docs":{},"求":{"docs":{},"该":{"docs":{},"青":{"docs":{},"蛙":{"docs":{},"跳":{"docs":{},"上":{"docs":{},"一":{"docs":{},"个":{"docs":{},"n":{"docs":{},"级":{"docs":{},"的":{"docs":{},"台":{"docs":{},"阶":{"docs":{},"总":{"docs":{},"共":{"docs":{},"有":{"docs":{},"多":{"docs":{},"少":{"docs":{},"种":{"docs":{},"跳":{"docs":{},"法":{"docs":{},"。":{"docs":{"Array/变态跳台阶.html":{"ref":"Array/变态跳台阶.html","tf":0.02}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}},"docs":{}}}}}}}}}},"毛":{"docs":{},"一":{"docs":{},"样":{"docs":{},"的":{"docs":{},"算":{"docs":{},"法":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"时":{"docs":{},"间":{"docs":{},"空":{"docs":{},"间":{"docs":{},"都":{"docs":{},"秒":{"docs":{},"杀":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"的":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"docs":{},"：":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}}}}}}}}}}}}}}}}}}}}}}}}},"位":{"docs":{},"位":{"docs":{},"地":{"docs":{},"比":{"docs":{},"较":{"docs":{},"，":{"docs":{},"用":{"1":{"docs":{},"（":{"1":{"docs":{},"自":{"docs":{},"身":{"docs":{},"左":{"docs":{},"移":{"docs":{},"运":{"docs":{},"算":{"docs":{},"，":{"docs":{},"其":{"docs":{},"实":{"docs":{},"后":{"docs":{},"来":{"docs":{},"就":{"docs":{},"不":{"docs":{},"是":{"1":{"docs":{},"了":{"docs":{},"）":{"docs":{},"和":{"docs":{},"n":{"docs":{},"的":{"docs":{},"每":{"docs":{},"位":{"docs":{},"进":{"docs":{},"行":{"docs":{},"位":{"docs":{},"与":{"docs":{"Bit/二进制中1的个数.html":{"ref":"Bit/二进制中1的个数.html","tf":0.022222222222222223}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}}}}}}}},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"一":{"docs":{},"遍":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"算":{"docs":{},"出":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"，":{"docs":{},"把":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"作":{"docs":{},"为":{"docs":{},"k":{"docs":{},"在":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"中":{"docs":{},"查":{"docs":{},"有":{"docs":{},"没":{"docs":{},"有":{"docs":{},"这":{"docs":{},"个":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.00684931506849315}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"剩":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"大":{"docs":{},"于":{"docs":{},"它":{"docs":{},"则":{"docs":{},"插":{"docs":{},"在":{"docs":{},"它":{"docs":{},"后":{"docs":{},"面":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"它":{"docs":{},"的":{"docs":{},"坐":{"docs":{},"标":{"docs":{},"+":{"1":{"docs":{"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.004405286343612335}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}},"要":{"docs":{},"满":{"docs":{},"足":{"docs":{},"以":{"docs":{},"上":{"docs":{},"两":{"docs":{},"个":{"docs":{},"限":{"docs":{},"制":{"docs":{},"，":{"docs":{},"倒":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"行":{"docs":{},"为":{"docs":{},"可":{"docs":{},"以":{"docs":{},"发":{"docs":{},"生":{"docs":{},"在":{"docs":{},"任":{"docs":{},"何":{"docs":{},"时":{"docs":{},"刻":{"docs":{"Stack-Queue/用两个栈实现队列.html":{"ref":"Stack-Queue/用两个栈实现队列.html","tf":0.013513513513513514}}}}}}}}}}}}}}}}}}}}}}}}}}}},"如":{"docs":{},"果":{"docs":{},"有":{"docs":{},"将":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"返":{"docs":{},"回":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.00684931506849315}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.006535947712418301}}}},"i":{"docs":{},"]":{"docs":{},"=":{"docs":{},"=":{"docs":{},"v":{"docs":{},"(":{"docs":{},"v":{"docs":{},"!":{"docs":{},"=":{"docs":{},"i":{"docs":{},")":{"docs":{},"，":{"docs":{},"则":{"docs":{},"看":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"v":{"docs":{},"]":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"v":{"docs":{},"]":{"docs":{},"=":{"docs":{},"=":{"docs":{},"v":{"docs":{},"则":{"docs":{},"找":{"docs":{},"到":{"docs":{},"两":{"docs":{},"个":{"docs":{},"=":{"docs":{},"=":{"docs":{},"v":{"docs":{},"的":{"docs":{},"数":{"docs":{},"，":{"docs":{},"则":{"docs":{},"将":{"docs":{},"v":{"docs":{},"返":{"docs":{},"回":{"docs":{"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"]":{"docs":{},"!":{"docs":{},"=":{"docs":{},"v":{"docs":{},"，":{"docs":{},"则":{"docs":{},"将":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"与":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"v":{"docs":{},"]":{"docs":{},"位":{"docs":{},"置":{"docs":{},"交":{"docs":{},"换":{"docs":{},"，":{"docs":{},"期":{"docs":{},"望":{"docs":{},"把":{"docs":{},"每":{"docs":{},"个":{"docs":{},"数":{"docs":{},"都":{"docs":{},"放":{"docs":{},"在":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"=":{"docs":{},"=":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"的":{"docs":{},"正":{"docs":{},"确":{"docs":{},"位":{"docs":{},"置":{"docs":{},"上":{"docs":{"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"]":{"docs":{},"中":{"docs":{},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"数":{"docs":{},"都":{"docs":{},">":{"docs":{},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.005780346820809248}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"=":{"docs":{},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"]":{"docs":{},"，":{"docs":{},"虽":{"docs":{},"然":{"docs":{},"l":{"docs":{},"o":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.005044136191677175}}}}}}}}}}}}}}}}}},"大":{"docs":{},"于":{"docs":{},"数":{"docs":{},"组":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"l":{"docs":{},"o":{"docs":{},"最":{"docs":{},"后":{"docs":{},"变":{"docs":{},"为":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"，":{"docs":{},"即":{"docs":{},"没":{"docs":{},"有":{"docs":{},"元":{"docs":{},"素":{"docs":{},"大":{"docs":{},"于":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"返":{"docs":{},"回":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"没":{"docs":{},"有":{"docs":{},"重":{"docs":{},"叠":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"将":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.007194244604316547}}}}}}}}}}}}}}}}}}}}}}}}}}},"不":{"docs":{},"是":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"则":{"docs":{},"分":{"docs":{},"别":{"docs":{},"再":{"docs":{},"数":{"docs":{},"两":{"docs":{},"者":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"出":{"docs":{},"现":{"docs":{},"次":{"docs":{},"数":{"docs":{},"多":{"docs":{},"的":{"docs":{},"那":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"作":{"docs":{},"为":{"docs":{},"整":{"docs":{},"体":{"docs":{},"的":{"docs":{},"m":{"docs":{},"a":{"docs":{},"j":{"docs":{},"o":{"docs":{},"r":{"docs":{"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"左":{"docs":{},"右":{"docs":{},"最":{"docs":{},"多":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"是":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"则":{"docs":{},"向":{"docs":{},"上":{"docs":{},"层":{"docs":{},"返":{"docs":{},"回":{"docs":{},"这":{"docs":{},"个":{"docs":{},"结":{"docs":{},"果":{"docs":{},"，":{"docs":{"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"下":{"docs":{},"降":{"docs":{},"的":{"docs":{},"就":{"docs":{},"把":{"docs":{},"栈":{"docs":{},"中":{"docs":{},"的":{"docs":{},"数":{"docs":{},"倒":{"docs":{},"出":{"docs":{},"来":{"docs":{},"倒":{"docs":{},"到":{"docs":{},"合":{"docs":{},"适":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"（":{"docs":{},">":{"docs":{},"=":{"docs":{},"栈":{"docs":{},"顶":{"docs":{},"）":{"docs":{},"再":{"docs":{},"将":{"docs":{},"这":{"docs":{},"个":{"docs":{},"数":{"docs":{},"压":{"docs":{},"入":{"docs":{},"栈":{"docs":{},"中":{"docs":{},"，":{"docs":{},"记":{"docs":{},"录":{"docs":{},"这":{"docs":{},"个":{"docs":{},"数":{"docs":{},"插":{"docs":{},"入":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"要":{"docs":{},"求":{"docs":{},"不":{"docs":{},"修":{"docs":{},"改":{"docs":{},"原":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"一":{"docs":{},"份":{"docs":{},"之":{"docs":{},"后":{"docs":{},"再":{"docs":{},"排":{"docs":{},"序":{"docs":{},"再":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"不":{"docs":{},"变":{"docs":{},"，":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"变":{"docs":{},"为":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"开":{"docs":{},"始":{"docs":{},"往":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"中":{"docs":{},"倒":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"一":{"docs":{},"次":{"docs":{},"要":{"docs":{},"倒":{"docs":{},"完":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.0035971223021582736},"Stack-Queue/用两个栈实现队列.html":{"ref":"Stack-Queue/用两个栈实现队列.html","tf":0.013513513513513514}}}}}}}}}}}}}}}}}}}}}},"中":{"docs":{},"间":{"docs":{},"包":{"docs":{},"含":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"则":{"docs":{},"表":{"docs":{},"示":{"docs":{},"可":{"docs":{},"以":{"docs":{},"从":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"走":{"docs":{},"到":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.005780346820809248}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"这":{"docs":{},"个":{"docs":{},"数":{"docs":{},"=":{"docs":{"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625}}},">":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"取":{"docs":{},"这":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625}}}}}}}}}}}}}}}}}},"何":{"docs":{},"用":{"docs":{},"数":{"docs":{},"组":{"docs":{},"实":{"docs":{},"现":{"docs":{},"栈":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.0035971223021582736}}},"队":{"docs":{},"列":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.0035971223021582736}}}}}}}},"栈":{"docs":{},"实":{"docs":{},"现":{"docs":{},"队":{"docs":{},"列":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.0035971223021582736}}}}}},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"队":{"docs":{},"列":{"docs":{},"，":{"docs":{},"如":{"docs":{},"何":{"docs":{},"用":{"docs":{},"队":{"docs":{},"列":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"栈":{"docs":{},"，":{"docs":{},"如":{"docs":{},"何":{"docs":{},"用":{"docs":{},"数":{"docs":{},"组":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"栈":{"docs":{},"和":{"docs":{},"队":{"docs":{},"列":{"docs":{},"。":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.0035971223021582736}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"队":{"docs":{},"列":{"docs":{},"实":{"docs":{},"现":{"docs":{},"栈":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.0035971223021582736}}}}}}}}}},"存":{"docs":{},"储":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.00684931506849315}}}}}},"完":{"docs":{},"把":{"docs":{},"所":{"docs":{},"有":{"docs":{},"栈":{"docs":{},"中":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"打":{"docs":{},"印":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}}}}}}}}}}}},"插":{"docs":{},"入":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.00684931506849315}}}}},"排":{"docs":{},"序":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}},"o":{"docs":{},"(":{"2":{"docs":{},"的":{"docs":{},"n":{"docs":{},"次":{"docs":{},"方":{"docs":{},")":{"docs":{},"，":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.007518796992481203}}}},"docs":{}}}}}}}}}}}}}}},"docs":{},"n":{"docs":{},")":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502}},"，":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736},"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502},"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047},"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609},"Array/斐波那契数列.html":{"ref":"Array/斐波那契数列.html","tf":0.047619047619047616},"Bit/二进制中1的个数.html":{"ref":"Bit/二进制中1的个数.html","tf":0.022222222222222223}}}},"docs":{},"n":{"docs":{},")":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.0136986301369863},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805},"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.008849557522123894},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047},"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.005813953488372093},"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.007518796992481203}}}}}}}}}}}},",":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943}}}},"docs":{}}}}}}}}},"+":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{},"+":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"=":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047}}}}}}}}}}}}}}}}}}}}}}}}}},"²":{"docs":{},")":{"docs":{},",":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.00684931506849315}}}},"docs":{}}}}}}}}},"，":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835},"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274},"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.005813953488372093},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}},"docs":{},"n":{"docs":{},")":{"docs":{"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.011111111111111112}}}},"m":{"docs":{},"*":{"docs":{},"n":{"docs":{},")":{"docs":{"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.007692307692307693}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{},"，":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732}},"，":{"docs":{},"修":{"docs":{},"改":{"docs":{},"了":{"docs":{},"原":{"docs":{},"数":{"docs":{},"组":{"docs":{"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609}}}}}}}}}}},"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{},"，":{"docs":{},"额":{"docs":{},"外":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"用":{"docs":{},"来":{"docs":{},"记":{"docs":{},"录":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},"个":{"docs":{},"切":{"docs":{},"分":{"docs":{},"点":{"docs":{"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"³":{"docs":{},")":{"docs":{},"，":{"docs":{},"不":{"docs":{},"能":{"docs":{},"a":{"docs":{},"c":{"docs":{},"，":{"docs":{},"超":{"docs":{},"时":{"docs":{"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.008849557522123894}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{},"，":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.004405286343612335},"Array/旋转数组的最小元素.html":{"ref":"Array/旋转数组的最小元素.html","tf":0.015151515151515152}}}},"docs":{}}}}}}}}}}}}}},"m":{"docs":{},"+":{"docs":{},"n":{"docs":{},")":{"docs":{},"，":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{"Matrix/二维数组中的查找.html":{"ref":"Matrix/二维数组中的查找.html","tf":0.013888888888888888}}}},"docs":{}}}}}}}}}}}}}}},"：":{"docs":{},"排":{"docs":{},"序":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{},"+":{"docs":{"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.007194244604316547}}}}}}}}}}}}},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0036496350364963502}},"，":{"docs":{},"最":{"docs":{},"好":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}}}}}}}}}}}}}}}}}},"²":{"docs":{},")":{"docs":{},"，":{"docs":{},"最":{"docs":{},"好":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0036496350364963502}}},"²":{"docs":{},")":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"公":{"docs":{},"式":{"docs":{},"，":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"=":{"2":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"/":{"2":{"docs":{},")":{"docs":{},"+":{"2":{"docs":{},"n":{"docs":{"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805}}}},"docs":{}}}},"docs":{}}}}}},"docs":{}}}}}}}}}}}}}}}}}},"：":{"2":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}},"docs":{}}}},"最":{"docs":{},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{},"做":{"docs":{},"法":{"docs":{},"，":{"docs":{},"根":{"docs":{},"据":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"再":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"一":{"docs":{},"次":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.00684931506849315}}}}}}}}}}}}}}}}}}},"大":{"docs":{},"子":{"docs":{},"数":{"docs":{},"列":{"docs":{},"问":{"docs":{},"题":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"变":{"docs":{},"种":{"docs":{},"是":{"docs":{},"：":{"docs":{},"如":{"docs":{},"果":{"docs":{},"数":{"docs":{},"列":{"docs":{},"中":{"docs":{},"含":{"docs":{},"有":{"docs":{},"负":{"docs":{},"数":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"允":{"docs":{},"许":{"docs":{},"返":{"docs":{},"回":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{},"零":{"docs":{},"的":{"docs":{},"子":{"docs":{},"数":{"docs":{},"列":{"docs":{},"。":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"后":{"docs":{},"我":{"docs":{},"要":{"docs":{},"说":{"docs":{},"，":{"docs":{},"我":{"docs":{},"爱":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"docs":{},"，":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"docs":{},"使":{"docs":{},"我":{"docs":{},"快":{"docs":{},"乐":{"docs":{},"！":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}}}}}}}}}}}}}}}}}}}},"自":{"docs":{},"想":{"1":{"docs":{},"：":{"docs":{"Array/leetcode1.html":{"ref":"Array/leetcode1.html","tf":0.00684931506849315},"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.006535947712418301},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047},"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.005813953488372093},"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.007518796992481203},"Tree/重建二叉树.html":{"ref":"Tree/重建二叉树.html","tf":0.022222222222222223}},"利":{"docs":{},"用":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"已":{"docs":{},"经":{"docs":{},"是":{"docs":{},"有":{"docs":{},"序":{"docs":{},"的":{"docs":{},"，":{"docs":{},"正":{"docs":{},"向":{"docs":{},"搜":{"docs":{},"找":{"docs":{},"到":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"，":{"docs":{},"反":{"docs":{},"向":{"docs":{},"搜":{"docs":{},"找":{"docs":{},"到":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"昨":{"docs":{},"天":{"docs":{},"写":{"docs":{},"的":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"1":{"2":{"1":{"docs":{},"中":{"docs":{},"提":{"docs":{},"到":{"docs":{},"的":{"docs":{},"k":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"n":{"docs":{},"e":{"docs":{},"算":{"docs":{},"法":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{},"递":{"docs":{},"归":{"docs":{},"版":{"docs":{"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.004405286343612335}}}}}}}}},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"，":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":0.013333333333333334}}}},"docs":{}}}}}}}}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{},"函":{"docs":{},"数":{"docs":{"String/替换空格.html":{"ref":"String/替换空格.html","tf":0.010416666666666666}}}}}},"回":{"docs":{},"溯":{"docs":{},"（":{"docs":{},"超":{"docs":{},"时":{"docs":{},"）":{"docs":{"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.005780346820809248}}}}}}}},"纯":{"docs":{},"数":{"docs":{},"学":{"docs":{},"方":{"docs":{},"法":{"docs":{},"找":{"docs":{},"规":{"docs":{},"律":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}}}}}}}},"连":{"docs":{},"乘":{"docs":{"Bit/数值的整数次方.html":{"ref":"Bit/数值的整数次方.html","tf":0.010309278350515464}}}}}},"2":{"docs":{},"：":{"docs":{},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736}}}}}},"长":{"docs":{},"度":{"docs":{},"延":{"docs":{},"长":{"docs":{},"替":{"docs":{},"换":{"docs":{"String/替换空格.html":{"ref":"String/替换空格.html","tf":0.010416666666666666}}}}}}}}},"改":{"docs":{},"成":{"docs":{},"要":{"docs":{},"求":{"docs":{},"的":{"docs":{},"格":{"docs":{},"式":{"docs":{"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609}}}}}}}}}},"docs":{},"：":{"docs":{},"二":{"docs":{},"分":{"docs":{},"的":{"docs":{},"思":{"docs":{},"路":{"docs":{},"，":{"docs":{},"先":{"docs":{},"序":{"docs":{},"分":{"docs":{},"成":{"docs":{},"[":{"docs":{},"根":{"docs":{},"|":{"docs":{},"左":{"docs":{},"|":{"docs":{},"右":{"docs":{},"]":{"docs":{},"，":{"docs":{},"中":{"docs":{},"序":{"docs":{},"分":{"docs":{},"成":{"docs":{},"[":{"docs":{},"左":{"docs":{},"|":{"docs":{},"根":{"docs":{},"|":{"docs":{},"右":{"docs":{},"]":{"docs":{},"，":{"docs":{},"根":{"docs":{},"在":{"docs":{},"先":{"docs":{},"序":{"docs":{},"一":{"docs":{},"定":{"docs":{},"是":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},"，":{"docs":{},"找":{"docs":{},"到":{"docs":{},"根":{"docs":{},"在":{"docs":{},"中":{"docs":{},"序":{"docs":{},"中":{"docs":{},"i":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"[":{"docs":{},"i":{"docs":{},"n":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"]":{"docs":{"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"己":{"docs":{},"没":{"docs":{},"有":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"到":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},">":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704}}}}}}}}}}}}}}}},",":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835},"String/替换空格.html":{"ref":"String/替换空格.html","tf":0.010416666666666666}}},".":{"docs":{},".":{"docs":{},".":{"1":{"9":{"docs":{"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547}}},"docs":{}},"docs":{"Array/变态跳台阶.html":{"ref":"Array/变态跳台阶.html","tf":0.04},"Array/矩阵覆盖.html":{"ref":"Array/矩阵覆盖.html","tf":0.0125},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.014388489208633094},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}},",":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835}}},".":{"docs":{"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547}}}}}},":":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.014184397163120567},"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.004405286343612335},"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.022222222222222223},"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502},"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.007194244604316547},"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.01282051282051282},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.00975609756097561},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704},"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":0.013333333333333334},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.014492753623188406},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.008875739644970414},"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.011834319526627219},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00546448087431694},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.01008827238335435},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.009216589861751152},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.02},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.022222222222222223},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.004889975550122249},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0036496350364963502},"Bit/数值的整数次方.html":{"ref":"Bit/数值的整数次方.html","tf":0.020618556701030927}}},"?":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.014184397163120567},"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.004405286343612335},"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.008547008547008548},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.008875739644970414},"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00546448087431694},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.01008827238335435},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0036496350364963502},"Bit/数值的整数次方.html":{"ref":"Bit/数值的整数次方.html","tf":0.020618556701030927}}},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{},"n":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835}}}}}},"o":{"docs":{"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625}},"e":{"docs":{},"s":{"docs":{},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.013071895424836602}}}}}}},"w":{"docs":{},"n":{"docs":{"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.011111111111111112},"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.03076923076923077}},",":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}}},"n":{"docs":{},"e":{"docs":{"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.0125}},",":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274}}}}},".":{"docs":{"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"Bit/数值的整数次方.html":{"ref":"Bit/数值的整数次方.html","tf":0.041237113402061855}}}}}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":2.0065359477124183},"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.004405286343612335},"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.029585798816568046},"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.007246376811594203},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.004106776180698152},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.014492753623188406},"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":2.5434782608695654}},"a":{"docs":{},"t":{"docs":{},"e":{"2":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609}}}}}}},"docs":{},"s":{"docs":{},")":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}},",":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203}}},"边":{"docs":{},"界":{"docs":{},"条":{"docs":{},"件":{"docs":{},"扣":{"docs":{},"的":{"docs":{},"不":{"docs":{},"清":{"docs":{},"楚":{"docs":{},"看":{"docs":{},"的":{"docs":{},"讨":{"docs":{},"论":{"docs":{},"区":{"docs":{},"的":{"docs":{"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609}}},":":{"docs":{"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609}}},"[":{"0":{"docs":{},"]":{"docs":{"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.01775147928994083}}}},"docs":{}}}}}}}}}}}},"i":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0072992700729927005}}},"s":{"docs":{"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704}}}}},"s":{"docs":{},"c":{"docs":{},"u":{"docs":{},"s":{"docs":{},"s":{"docs":{},"区":{"docs":{},"看":{"docs":{},"到":{"docs":{},"的":{"docs":{},"：":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274}}}}}}}}}}},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":2}}}}}}}},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.01},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}}}}}}}},"a":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.015384615384615385}}}}}}},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.01875}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}}}}}}}},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}},"i":{"docs":{},"t":{"docs":{"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.007194244604316547}}}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274}}}}},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.005780346820809248}}}}}},"c":{"docs":{},"t":{"docs":{},"c":{"docs":{},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.005952380952380952}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}}}},"a":{"docs":{},"y":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.01282051282051282}}},"t":{"docs":{},"a":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.007194244604316547}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},")":{"docs":{},";":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.0035971223021582736}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.007194244604316547}}}}}}}}}},";":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.007194244604316547}}}}}},"f":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{},"[":{"docs":{},"]":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},")":{"docs":{},";":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}}}}}}}},"与":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"相":{"docs":{},"关":{"docs":{},"问":{"docs":{},"题":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"问":{"docs":{},"题":{"docs":{},"：":{"docs":{"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.007692307692307693}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":1.2535971223021583},"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502},"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.011111111111111112},"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":2.0072463768115942},"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.008849557522123894},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.005917159763313609},"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576},"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":2.510869565217391}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"1":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938}}}}}},"docs":{}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"2":{"docs":{},")":{"docs":{},")":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938}},";":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938}}}}}},"docs":{}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876}}}}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}}}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"1":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609}}}}}}}}},"3":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609}}}}}}}}},"docs":{}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},"d":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"1":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.010869565217391304}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Matrix/二维数组中的查找.html":{"ref":"Matrix/二维数组中的查找.html","tf":0.013888888888888888}}}}}}},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.0125}}}}}},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.013071895424836602},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":1.25},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847},"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.005780346820809248},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.004889975550122249}},",":{"docs":{"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943}}}}}},"v":{"docs":{},"e":{"docs":{"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.006535947712418301}}}},"g":{"docs":{},"u":{"docs":{},"r":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502}}}}},"l":{"docs":{},"l":{"docs":{"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.011111111111111112}}}},"b":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"i":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Array/斐波那契数列.html":{"ref":"Array/斐波那契数列.html","tf":0.047619047619047616}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835}},"a":{"docs":{},"t":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},";":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.01},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},";":{"docs":{"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.011111111111111112}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},";":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},";":{"docs":{"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},";":{"docs":{"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}}}},"循":{"docs":{},"环":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.007194244604316547}}}}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943}}}}}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274}}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736}},".":{"docs":{"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.004405286343612335}}}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502},"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.018867924528301886},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847},"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.007246376811594203},"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.005952380952380952}}}}}}},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.013071895424836602},"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943},"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":0.013333333333333334}}}}}}}},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"!":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609},"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.005780346820809248}},"e":{"docs":{},";":{"docs":{"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374},"Matrix/二维数组中的查找.html":{"ref":"Matrix/二维数组中的查找.html","tf":0.013888888888888888},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}},",":{"docs":{"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}}}}}},"s":{"docs":{},"t":{"docs":{"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.023809523809523808},"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.010869565217391304}},")":{"docs":{"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.011904761904761904}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.011904761904761904}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.005952380952380952}}}}}}}},";":{"docs":{"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.005952380952380952}}}}}}}}}},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"Bit/数值的整数次方.html":{"ref":"Bit/数值的整数次方.html","tf":0.010309278350515464}}}}}}},"(":{"0":{"docs":{},")":{"docs":{"Array/变态跳台阶.html":{"ref":"Array/变态跳台阶.html","tf":0.02},"Array/矩阵覆盖.html":{"ref":"Array/矩阵覆盖.html","tf":0.0125}}}},"1":{"docs":{},")":{"docs":{"Array/跳台阶.html":{"ref":"Array/跳台阶.html","tf":0.03125},"Array/变态跳台阶.html":{"ref":"Array/变态跳台阶.html","tf":0.04},"Array/矩阵覆盖.html":{"ref":"Array/矩阵覆盖.html","tf":0.0125}}}},"2":{"docs":{},")":{"docs":{"Array/跳台阶.html":{"ref":"Array/跳台阶.html","tf":0.03125},"Array/变态跳台阶.html":{"ref":"Array/变态跳台阶.html","tf":0.04},"Array/矩阵覆盖.html":{"ref":"Array/矩阵覆盖.html","tf":0.0125}}}},"3":{"docs":{},")":{"docs":{"Array/矩阵覆盖.html":{"ref":"Array/矩阵覆盖.html","tf":0.0125}}}},"docs":{},"n":{"docs":{"Array/跳台阶.html":{"ref":"Array/跳台阶.html","tf":0.0625},"Array/变态跳台阶.html":{"ref":"Array/变态跳台阶.html","tf":0.04},"Array/矩阵覆盖.html":{"ref":"Array/矩阵覆盖.html","tf":0.025},"Bit/数值的整数次方.html":{"ref":"Bit/数值的整数次方.html","tf":0.010309278350515464}},")":{"docs":{"Array/跳台阶.html":{"ref":"Array/跳台阶.html","tf":0.03125},"Array/变态跳台阶.html":{"ref":"Array/变态跳台阶.html","tf":0.02},"Array/矩阵覆盖.html":{"ref":"Array/矩阵覆盖.html","tf":0.0125},"Bit/数值的整数次方.html":{"ref":"Bit/数值的整数次方.html","tf":0.010309278350515464}}}}},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{"Bit/二进制中1的个数.html":{"ref":"Bit/二进制中1的个数.html","tf":0.044444444444444446}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.014184397163120567}}}}}}},"a":{"docs":{},"l":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.003896103896103896},"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.005952380952380952}},"u":{"docs":{"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.006535947712418301},"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732}},"e":{"docs":{},".":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736}}},",":{"docs":{"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.004405286343612335}}},":":{"docs":{"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609}}},"[":{"0":{"docs":{},",":{"docs":{},"n":{"docs":{"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609}}}}},"docs":{}},"的":{"docs":{},"对":{"docs":{},"应":{"docs":{},"关":{"docs":{},"系":{"docs":{},"，":{"docs":{},"期":{"docs":{},"待":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"=":{"docs":{},"=":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0025974025974025974}}},";":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.005194805194805195}}}}},"i":{"docs":{},"d":{"docs":{},",":{"docs":{"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609}}}}},")":{"docs":{},";":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}}}}}}}}}},";":{"docs":{"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.005952380952380952}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.004405286343612335},"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.018518518518518517},"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.010050251256281407},"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":0.013333333333333334},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203},"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.023255813953488372},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00546448087431694},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.005044136191677175},"String/替换空格.html":{"ref":"String/替换空格.html","tf":0.010416666666666666},"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.007518796992481203},"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.007194244604316547},"Stack-Queue/用两个栈实现队列.html":{"ref":"Stack-Queue/用两个栈实现队列.html","tf":0.02702702702702703},"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.02207792207792208},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.011293634496919919},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.013824884792626729},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.02},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.013605442176870748},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.018518518518518517},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.014492753623188406},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.014388489208633094},"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625},"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.005952380952380952},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.017114914425427872},"Matrix/二维数组中的查找.html":{"ref":"Matrix/二维数组中的查找.html","tf":0.013888888888888888},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.020072992700729927}}}},"t":{"docs":{},"e":{"docs":{"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805}}}}},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076}},"e":{"docs":{},"d":{"docs":{},"[":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"]":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":3.340425531914893}},".":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835}}}}}},"y":{"docs":{"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.007692307692307693}}}},"h":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.018867924528301886}},",":{"docs":{"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943}}}}},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}}}}}}}}}}}}},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.008849557522123894}}}},"l":{"docs":{},"e":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.005917159763313609}}}}},"a":{"docs":{},"t":{"docs":{},".":{"docs":{"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.005780346820809248}}}}}},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704},"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":0.013333333333333334},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203},"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625},"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.005952380952380952}}}}}}}},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":0.013333333333333334}}}}}},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}}},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}}}}}},"x":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835},"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.011111111111111112},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847},"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.015384615384615385},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}},"，":{"docs":{},"x":{"docs":{},")":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502},"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274}}}}},",":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274}}},")":{"docs":{"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.005952380952380952}}},";":{"docs":{"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.005952380952380952}}}},"|":{"docs":{},"|":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835},"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.007194244604316547},"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.014388489208633094},"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943},"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":0.013333333333333334},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.014492753623188406},"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.011834319526627219},"Array/旋转数组的最小元素.html":{"ref":"Array/旋转数组的最小元素.html","tf":0.015151515151515152},"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.011627906976744186},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.012610340479192938},"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0025974025974025974},"Tree/重建二叉树.html":{"ref":"Tree/重建二叉树.html","tf":0.022222222222222223},"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.021739130434782608},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.006160164271047228},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.01},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374},"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.005952380952380952},"Matrix/二维数组中的查找.html":{"ref":"Matrix/二维数组中的查找.html","tf":0.013888888888888888},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.005474452554744526}}}},"把":{"docs":{},"首":{"docs":{},"末":{"docs":{},"点":{"docs":{},"分":{"docs":{},"别":{"docs":{},"定":{"docs":{},"为":{"docs":{},"l":{"docs":{},"o":{"docs":{},",":{"docs":{},"h":{"docs":{},"i":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"比":{"docs":{},"较":{"docs":{},"求":{"docs":{},"出":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"w":{"docs":{},"a":{"docs":{},"t":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"最":{"docs":{},"开":{"docs":{},"始":{"docs":{},"的":{"docs":{},"若":{"docs":{},"干":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"搬":{"docs":{},"到":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"末":{"docs":{},"尾":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"称":{"docs":{},"之":{"docs":{},"为":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"旋":{"docs":{},"转":{"docs":{},"。":{"docs":{"Array/旋转数组的最小元素.html":{"ref":"Array/旋转数组的最小元素.html","tf":0.015151515151515152}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"排":{"docs":{},"序":{"docs":{},"好":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"分":{"docs":{},"成":{"docs":{},"两":{"docs":{},"部":{"docs":{},"分":{"docs":{},"，":{"docs":{},"两":{"docs":{},"部":{"docs":{},"分":{"docs":{},"互":{"docs":{},"换":{"docs":{},"顺":{"docs":{},"序":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938}}}}}}}}}}}}}}}}}}}}},"上":{"docs":{},"存":{"docs":{},"起":{"docs":{},"来":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}}}},"矩":{"docs":{},"阵":{"docs":{},"像":{"docs":{},"剥":{"docs":{},"洋":{"docs":{},"葱":{"docs":{},"一":{"docs":{},"样":{"docs":{},"分":{"docs":{},"成":{"docs":{},"一":{"docs":{},"层":{"docs":{},"一":{"docs":{},"层":{"docs":{},"的":{"docs":{},"，":{"docs":{},"每":{"docs":{},"层":{"docs":{},"都":{"docs":{},"是":{"docs":{},"正":{"docs":{},"方":{"docs":{},"形":{"docs":{},"四":{"docs":{},"条":{"docs":{},"等":{"docs":{},"长":{"docs":{},"的":{"docs":{},"边":{"docs":{},"，":{"docs":{},"边":{"docs":{},"长":{"docs":{},"度":{"docs":{},"设":{"docs":{},"为":{"docs":{},"n":{"docs":{},"，":{"docs":{},"层":{"docs":{},"数":{"docs":{},"为":{"docs":{},"j":{"docs":{},"，":{"docs":{},"最":{"docs":{},"外":{"docs":{},"面":{"docs":{},"一":{"docs":{},"层":{"docs":{},"为":{"0":{"docs":{},"，":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"距":{"docs":{},"离":{"docs":{},"在":{"docs":{},"缩":{"docs":{},"短":{"docs":{},"，":{"docs":{},"只":{"docs":{},"有":{"docs":{},"移":{"docs":{},"动":{"docs":{},"短":{"docs":{},"的":{"docs":{},"才":{"docs":{},"可":{"docs":{},"能":{"docs":{},"将":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},")":{"docs":{},"增":{"docs":{},"大":{"docs":{},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"将":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"w":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"增":{"docs":{},"大":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"遍":{"docs":{},"历":{"docs":{},"一":{"docs":{},"遍":{"docs":{},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"，":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{"Array/leetcode11.html":{"ref":"Array/leetcode11.html","tf":0.0070921985815602835}}}},"docs":{}}}}}}}}}}}}}}}}}},"用":{"docs":{},"m":{"docs":{},"记":{"docs":{},"录":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"候":{"docs":{},"选":{"docs":{},"者":{"docs":{},"的":{"docs":{},"票":{"docs":{},"数":{"docs":{},"，":{"docs":{},"初":{"docs":{},"始":{"docs":{},"为":{"1":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"是":{"docs":{},"这":{"docs":{},"个":{"docs":{},"候":{"docs":{},"选":{"docs":{},"者":{"docs":{},"那":{"docs":{},"就":{"docs":{},"m":{"docs":{},"+":{"docs":{},"+":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"不":{"docs":{},"是":{"docs":{},"则":{"docs":{},"m":{"docs":{"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}},"算":{"docs":{},"出":{"docs":{},"所":{"docs":{},"有":{"docs":{},"数":{"docs":{},"的":{"docs":{},"积":{"docs":{},"存":{"docs":{},"在":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"中":{"docs":{"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"拿":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"和":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"比":{"docs":{},"较":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"有":{"docs":{},"重":{"docs":{},"叠":{"docs":{},"则":{"docs":{},"更":{"docs":{},"新":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.007194244604316547}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"!":{"docs":{},"=":{"docs":{"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.006535947712418301},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.004405286343612335},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704},"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":0.013333333333333334},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876},"String/替换空格.html":{"ref":"String/替换空格.html","tf":0.010416666666666666},"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.022556390977443608},"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.023376623376623377},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.004106776180698152},"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.023809523809523808},"Bit/二进制中1的个数.html":{"ref":"Bit/二进制中1的个数.html","tf":0.044444444444444446}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0025974025974025974}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"[":{"docs":{},"i":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374}}}}}}}}},"#":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.013071895424836602},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00546448087431694}}}}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}}}}}},"b":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00819672131147541},"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.0125}},"e":{"docs":{"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.013071895424836602}},"y":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.013071895424836602}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732}},"e":{"docs":{},"s":{"docs":{},":":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.004889975550122249}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}},"e":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},".":{"docs":{"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"String/替换空格.html":{"ref":"String/替换空格.html","tf":0.010416666666666666}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":1.6666666666666665}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"1":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274}}}}}}}}},"2":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274}}}}}}}}},"3":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274}}}}}}}}},"docs":{}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},")":{"docs":{},".":{"docs":{"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.015384615384615385}}}}}}},"t":{"docs":{},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625},"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.010869565217391304}}}}}}},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.005952380952380952}}}}}}}},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"1":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}}}}},"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.004405286343612335}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.010309278350515464},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.00881057268722467}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938}}}}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"d":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":1.4430641821946169}}}}}},"t":{"docs":{},";":{"docs":{"Bit/二进制中1的个数.html":{"ref":"Bit/二进制中1的个数.html","tf":0.022222222222222223},"Bit/数值的整数次方.html":{"ref":"Bit/数值的整数次方.html","tf":0.010309278350515464}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},";":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.005917159763313609},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876},"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.005952380952380952}}}}}}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},",":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.014492753623188406}}},">":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.006160164271047228},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.01},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203}}},"s":{"docs":{},",":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.009240246406570842},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.009216589861751152},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.01},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.013605442176870748},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},";":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.01},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"7":{"8":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},";":{"docs":{"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876},"Bit/数值的整数次方.html":{"ref":"Bit/数值的整数次方.html","tf":0.010309278350515464}},",":{"docs":{"Bit/数值的整数次方.html":{"ref":"Bit/数值的整数次方.html","tf":0.020618556701030927}}},";":{"docs":{"Bit/数值的整数次方.html":{"ref":"Bit/数值的整数次方.html","tf":0.020618556701030927}}}}},"d":{"docs":{},",":{"docs":{"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.005780346820809248}}}}},"o":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.011111111111111112},"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.015384615384615385}}}}}},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876},"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.0035971223021582736},"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.005780346820809248},"Matrix/二维数组中的查找.html":{"ref":"Matrix/二维数组中的查找.html","tf":0.013888888888888888},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}},"[":{"docs":{},"]":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.003080082135523614},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374}}},"n":{"docs":{},"]":{"docs":{},";":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076}}}},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}}}}}}},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943}},",":{"docs":{"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943}}},".":{"docs":{"Array/leetcode75.html":{"ref":"Array/leetcode75.html","tf":0.009433962264150943}}}}}},"u":{"docs":{},"y":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":1.6837606837606836}}},"f":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.007246376811594203}}}}}}}}}}}}}}},"b":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}}}}}}}}}}}},";":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}},"]":{"docs":{},",":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00546448087431694}}},".":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}},"内":{"docs":{},"点":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{},"。":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}}}}}},"，":{"docs":{},"试":{"docs":{},"计":{"docs":{},"算":{"docs":{},"落":{"docs":{},"在":{"docs":{},"其":{"docs":{},"内":{"docs":{},"的":{"docs":{},"点":{"docs":{},"数":{"docs":{},"。":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}}}}}}}}}}},"都":{"docs":{},"有":{"docs":{},"a":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}}}}},"f":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{},"[":{"docs":{},"]":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},")":{"docs":{},";":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}}}}}}}},"/":{"docs":{},"d":{"docs":{},"f":{"docs":{},"s":{"docs":{},"总":{"docs":{},"结":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":10}}}}}}}},"广":{"docs":{},"度":{"docs":{},"优":{"docs":{},"先":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"/":{"docs":{},"d":{"docs":{},"f":{"docs":{},"s":{"docs":{},"深":{"docs":{},"度":{"docs":{},"优":{"docs":{},"先":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"相":{"docs":{},"关":{"docs":{},"算":{"docs":{},"法":{"docs":{},"题":{"docs":{},"的":{"docs":{},"思":{"docs":{},"路":{"docs":{},"总":{"docs":{},"结":{"docs":{},"。":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"思":{"docs":{},"想":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}},"相":{"docs":{},"关":{"docs":{},"问":{"docs":{},"题":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}}}}},".":{"docs":{"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625}}}},"由":{"docs":{},"于":{"docs":{},"数":{"docs":{},"组":{"docs":{},"是":{"docs":{},"已":{"docs":{},"经":{"docs":{},"排":{"docs":{},"好":{"docs":{},"序":{"docs":{},"的":{"docs":{},"，":{"docs":{},"用":{"docs":{},"j":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"用":{"docs":{},"i":{"docs":{},"存":{"docs":{},"储":{"docs":{},"不":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{},"j":{"docs":{},"从":{"1":{"docs":{},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"i":{"docs":{},"从":{"0":{"docs":{},"开":{"docs":{},"始":{"docs":{},"。":{"docs":{"Array/leetcode26.html":{"ref":"Array/leetcode26.html","tf":0.006535947712418301}}}}}},"docs":{}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"最":{"docs":{},"小":{"docs":{},"是":{"0":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"x":{"docs":{},"太":{"docs":{},"小":{"docs":{},"，":{"docs":{},"使":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"+":{"docs":{},"x":{"docs":{},"是":{"docs":{},"个":{"docs":{},"负":{"docs":{},"数":{"docs":{},"，":{"docs":{},"就":{"docs":{},"不":{"docs":{},"要":{"docs":{},"这":{"docs":{},"段":{"docs":{},"，":{"docs":{},"取":{"0":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}},"只":{"docs":{},"要":{"docs":{},"保":{"docs":{},"证":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{},"i":{"docs":{},"t":{"docs":{},"是":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{},"i":{"docs":{},"t":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"，":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"定":{"docs":{},"存":{"docs":{},"在":{"docs":{},"且":{"docs":{},"仅":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"m":{"docs":{},"a":{"docs":{},"j":{"docs":{},"o":{"docs":{},"r":{"docs":{"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805}}}}}}}}}}}}}}}}}},">":{"docs":{"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.015463917525773196},"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.007194244604316547},"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.00881057268722467},"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274},"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.008875739644970414},"Array/旋转数组的最小元素.html":{"ref":"Array/旋转数组的最小元素.html","tf":0.030303030303030304},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.01912568306010929},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.021437578814627996},"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.01079136690647482},"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0025974025974025974},"Tree/重建二叉树.html":{"ref":"Tree/重建二叉树.html","tf":0.022222222222222223},"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.007246376811594203},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.007186858316221766},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.01},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547},"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.046153846153846156},"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.04375},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.005474452554744526},"Bit/数值的整数次方.html":{"ref":"Bit/数值的整数次方.html","tf":0.010309278350515464}},"=":{"docs":{"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732},"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.008875739644970414},"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.005813953488372093},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00546448087431694},"String/替换空格.html":{"ref":"String/替换空格.html","tf":0.010416666666666666},"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.007518796992481203},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.005780346820809248},"Bit/数值的整数次方.html":{"ref":"Bit/数值的整数次方.html","tf":0.010309278350515464}}},">":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00819672131147541},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0036496350364963502}}},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.003896103896103896}}}}},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}},"(":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}},"根":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0025974025974025974}}},"上":{"docs":{},")":{"docs":{},"，":{"docs":{},"逆":{"docs":{},"序":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"不":{"docs":{},"然":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"了":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}}}}}}}}}}}}},"下":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{},"的":{"docs":{},"思":{"docs":{},"想":{"docs":{},"：":{"docs":{},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{},"总":{"docs":{},"结":{"docs":{"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732}}}}}}}}}}},"改":{"docs":{},"进":{"docs":{},"的":{"docs":{},"具":{"docs":{},"体":{"docs":{},"分":{"docs":{},"析":{"docs":{},"参":{"docs":{},"见":{"docs":{},"《":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"邓":{"docs":{},"俊":{"docs":{},"辉":{"docs":{},"第":{"docs":{},"三":{"docs":{},"版":{"docs":{},"》":{"docs":{},"p":{"5":{"6":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"各":{"docs":{},"种":{"docs":{},"变":{"docs":{},"形":{"docs":{},"总":{"docs":{},"结":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":10}}}}}}}}}}}},"叉":{"docs":{},"树":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"定":{"docs":{},"义":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}}}}},"遍":{"docs":{},"历":{"docs":{},"算":{"docs":{},"法":{"docs":{},"总":{"docs":{},"结":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":10}}}}}}}},"层":{"docs":{},"次":{"docs":{},"遍":{"docs":{},"历":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}}}}},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"的":{"docs":{},"查":{"docs":{},"找":{"docs":{"Matrix/二维数组中的查找.html":{"ref":"Matrix/二维数组中的查找.html","tf":0.013888888888888888}}}}}}}}},"进":{"docs":{},"制":{"docs":{},"中":{"1":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{"Bit/二进制中1的个数.html":{"ref":"Bit/二进制中1的个数.html","tf":0.022222222222222223}}}}}},"docs":{}}}}},"讨":{"docs":{},"论":{"docs":{},"区":{"docs":{},"：":{"docs":{"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.005813953488372093},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}},"分":{"docs":{},"成":{"3":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"查":{"docs":{},"找":{"docs":{},"，":{"docs":{},"主":{"docs":{},"要":{"docs":{},"是":{"docs":{},"找":{"docs":{},"到":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"Array/leetcode33.html":{"ref":"Array/leetcode33.html","tf":0.005154639175257732}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"二":{"docs":{},"分":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"版":{"docs":{"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.004405286343612335}}}}}}}}},"递":{"docs":{},"归":{"docs":{"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.007518796992481203}}}},"用":{"docs":{},"位":{"docs":{},"运":{"docs":{},"算":{"docs":{},"代":{"docs":{},"替":{"docs":{},"连":{"docs":{},"乘":{"docs":{"Bit/数值的整数次方.html":{"ref":"Bit/数值的整数次方.html","tf":0.010309278350515464}}}}}}}}}}},"方":{"docs":{},"法":{"1":{"docs":{},"：":{"docs":{"Bit/二进制中1的个数.html":{"ref":"Bit/二进制中1的个数.html","tf":0.022222222222222223}}}},"docs":{}}}}}},"\"":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.02158273381294964},"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.011111111111111112},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0037831021437578815},"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.02077922077922078},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.01},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.011111111111111112},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}},")":{"docs":{},";":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.011111111111111112},"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876},"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.01948051948051948},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.01},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.011111111111111112},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}},")":{"docs":{},";":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876}}}}},"f":{"docs":{},"u":{"docs":{},"c":{"docs":{},"k":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876}}}}}},"n":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"!":{"docs":{},"\"":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876}}}}}}}},"%":{"2":{"0":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"String/替换空格.html":{"ref":"String/替换空格.html","tf":0.010416666666666666}}}}}},"docs":{}},"docs":{}},",":{"docs":{"String/替换空格.html":{"ref":"String/替换空格.html","tf":0.010416666666666666}}},";":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}},"^":{"docs":{},"\"":{"docs":{},",":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}}},"h":{"docs":{},"\"":{"docs":{},",":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}}},"v":{"docs":{},"\"":{"docs":{},",":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}}}},"&":{"docs":{"Bit/二进制中1的个数.html":{"ref":"Bit/二进制中1的个数.html","tf":0.022222222222222223}},"&":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047},"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.005813953488372093},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876},"String/替换空格.html":{"ref":"String/替换空格.html","tf":0.010416666666666666},"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.007518796992481203},"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.007194244604316547},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.004106776180698152},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.013605442176870748},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203},"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.011904761904761904},"Matrix/二维数组中的查找.html":{"ref":"Matrix/二维数组中的查找.html","tf":0.013888888888888888},"Bit/数值的整数次方.html":{"ref":"Bit/数值的整数次方.html","tf":0.020618556701030927}}},"a":{"docs":{},",":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}},"b":{"docs":{},")":{"docs":{},";":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}}}}}}}}}},")":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736},"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704},"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.011834319526627219},"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.011627906976744186},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847},"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.007518796992481203},"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.011560693641618497},"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}},")":{"docs":{},";":{"docs":{"String/替换空格.html":{"ref":"String/替换空格.html","tf":0.010416666666666666}}}}},"例":{"docs":{},"：":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.006305170239596469}}}}}}}},"如":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274}}}}}}},"，":{"docs":{},"对":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"列":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274}}}}}}},"如":{"docs":{},"果":{"docs":{},"输":{"docs":{},"入":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"7":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"{":{"2":{"docs":{},",":{"3":{"docs":{},",":{"1":{"docs":{},",":{"0":{"docs":{},",":{"2":{"docs":{},",":{"5":{"docs":{},",":{"3":{"docs":{},"}":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"输":{"docs":{},"出":{"docs":{},"是":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"2":{"docs":{},"。":{"docs":{"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609}}}},"docs":{}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}}},"docs":{}}}}}}}}},"数":{"docs":{},"组":{"docs":{},"{":{"3":{"docs":{},",":{"4":{"docs":{},",":{"5":{"docs":{},",":{"1":{"docs":{},",":{"2":{"docs":{},"}":{"docs":{},"为":{"docs":{},"{":{"1":{"docs":{},",":{"2":{"docs":{},",":{"3":{"docs":{},",":{"4":{"docs":{},",":{"5":{"docs":{},"}":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"旋":{"docs":{},"转":{"docs":{},"，":{"docs":{},"该":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"值":{"docs":{},"为":{"1":{"docs":{},"。":{"docs":{"Array/旋转数组的最小元素.html":{"ref":"Array/旋转数组的最小元素.html","tf":0.015151515151515152}}}},"docs":{}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}},"输":{"docs":{},"入":{"docs":{},"前":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"序":{"docs":{},"列":{"docs":{},"{":{"1":{"docs":{},",":{"2":{"docs":{},",":{"4":{"docs":{},",":{"7":{"docs":{},",":{"3":{"docs":{},",":{"5":{"docs":{},",":{"6":{"docs":{},",":{"8":{"docs":{},"}":{"docs":{},"和":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"序":{"docs":{},"列":{"docs":{},"{":{"4":{"docs":{},",":{"7":{"docs":{},",":{"2":{"docs":{},",":{"1":{"docs":{},",":{"5":{"docs":{},",":{"3":{"docs":{},",":{"8":{"docs":{},",":{"6":{"docs":{},"}":{"docs":{},"，":{"docs":{},"则":{"docs":{},"重":{"docs":{},"建":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"并":{"docs":{},"返":{"docs":{},"回":{"docs":{},"。":{"docs":{"Tree/重建二叉树.html":{"ref":"Tree/重建二叉树.html","tf":0.022222222222222223}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}}}}}}}},"，":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0037831021437578815}}}}}}}}},"加":{"docs":{},"一":{"docs":{},"个":{"docs":{},"判":{"docs":{},"断":{"docs":{},"条":{"docs":{},"件":{"docs":{},"变":{"docs":{},"成":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"等":{"docs":{},"于":{"docs":{},"某":{"docs":{},"个":{"docs":{},"数":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736}}}}}}}}}}}}}}}}}}}}},"数":{"docs":{},"据":{"docs":{},"入":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"栈":{"docs":{},"，":{"docs":{},"取":{"docs":{},"数":{"docs":{},"据":{"docs":{},"从":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"栈":{"docs":{},"中":{"docs":{},"拿":{"docs":{"Stack-Queue/用两个栈实现队列.html":{"ref":"Stack-Queue/用两个栈实现队列.html","tf":0.013513513513513514}}}}}}}}}}}}}}}}}}}}}},"方":{"docs":{},"法":{"2":{"docs":{},"参":{"docs":{},"见":{"docs":{},"：":{"docs":{},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{},"总":{"docs":{},"结":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736}}}}}}}}}}}},"docs":{}}},"查":{"docs":{},"找":{"3":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"4":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"4":{"docs":{},"；":{"docs":{},"查":{"docs":{},"找":{"4":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"4":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"4":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"没":{"docs":{},"有":{"docs":{},"大":{"docs":{},"于":{"docs":{},"等":{"docs":{},"于":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}},"8":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"5":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"没":{"docs":{},"有":{"docs":{},"大":{"docs":{},"于":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876}}}}}}}}}}}}}}}}}}},"docs":{}}}}},"docs":{}}}}},"docs":{}}}}},"docs":{}}}}},"docs":{}}}}},"4":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"4":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"4":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"没":{"docs":{},"有":{"docs":{},">":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876}}},"等":{"docs":{},"于":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}},"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"2":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"3":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"没":{"docs":{},"有":{"docs":{},">":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938}}}}}}}}},"docs":{}}}}},"docs":{}}}}}}}}},"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876}},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"大":{"docs":{},"于":{"docs":{},"等":{"docs":{},"于":{"docs":{},"某":{"docs":{},"个":{"docs":{},"数":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{"Array/leetcode34.html":{"ref":"Array/leetcode34.html","tf":0.0035971223021582736},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938}}}}}}}}}},"某":{"docs":{},"个":{"docs":{},"数":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876}}}}}}}}}},"等":{"docs":{},"于":{"docs":{},"某":{"docs":{},"个":{"docs":{},"数":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876}}}}}}}}}}}}},">":{"docs":{},"=":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"下":{"docs":{},"标":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"下":{"docs":{},"标":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938}}}}}}},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"下":{"docs":{},"标":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938}}}}},"小":{"docs":{},"下":{"docs":{},"标":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876}}}}}}}}}},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"等":{"docs":{},"于":{"docs":{},"某":{"docs":{},"个":{"docs":{},"数":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"，":{"docs":{},"即":{"docs":{},"从":{"docs":{},"右":{"docs":{},"边":{"docs":{},"起":{"docs":{},"查":{"docs":{},"找":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"等":{"docs":{},"于":{"docs":{},"某":{"docs":{},"个":{"docs":{},"数":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"注":{"docs":{},"意":{"docs":{},"到":{"docs":{},"数":{"docs":{},"组":{"docs":{},"是":{"docs":{},"有":{"docs":{},"序":{"docs":{},"的":{"docs":{},"，":{"docs":{},"且":{"docs":{},"没":{"docs":{},"有":{"docs":{},"重":{"docs":{},"复":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"想":{"docs":{},"到":{"docs":{},"用":{"docs":{},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.004405286343612335}}}}}}}}}}}}}}}}}}}}}}}}},"倒":{"docs":{},"出":{"docs":{},"的":{"docs":{},"数":{"docs":{},"并":{"docs":{},"没":{"docs":{},"有":{"docs":{},"再":{"docs":{},"倒":{"docs":{},"回":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"最":{"docs":{},"终":{"docs":{},"有":{"docs":{},"用":{"docs":{},"的":{"docs":{},"是":{"docs":{},"l":{"docs":{},"o":{"docs":{},"所":{"docs":{},"以":{"docs":{},"插":{"docs":{},"入":{"docs":{},"到":{"docs":{},"l":{"docs":{},"o":{"docs":{},"前":{"docs":{},"面":{"docs":{},"来":{"docs":{},"的":{"docs":{},"数":{"docs":{},"才":{"docs":{},"需":{"docs":{},"要":{"docs":{},"记":{"docs":{},"录":{"docs":{},"，":{"docs":{},"倒":{"docs":{},"出":{"docs":{},"的":{"docs":{},"是":{"docs":{},"后":{"docs":{},"面":{"docs":{},"的":{"docs":{},"数":{"docs":{},"，":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"管":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"：":{"docs":{},"以":{"docs":{},"下":{"docs":{},"代":{"docs":{},"码":{"docs":{},"均":{"docs":{},"采":{"docs":{},"用":{"docs":{},"左":{"docs":{},"右":{"docs":{},"均":{"docs":{},"为":{"docs":{},"闭":{"docs":{},"区":{"docs":{},"间":{"docs":{},"，":{"docs":{},"即":{"docs":{},"h":{"docs":{},"i":{"docs":{},"为":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"下":{"docs":{},"标":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"元":{"docs":{},"素":{"docs":{},"个":{"docs":{},"数":{"docs":{},"。":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"小":{"docs":{},"于":{"docs":{},"等":{"docs":{},"于":{"docs":{},"某":{"docs":{},"个":{"docs":{},"数":{"docs":{},"的":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"就":{"docs":{},"是":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"大":{"docs":{},"于":{"docs":{},"某":{"docs":{},"个":{"docs":{},"数":{"docs":{},"的":{"docs":{},"数":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"要":{"docs":{},"加":{"docs":{},"回":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{},"中":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.0035971223021582736}}}}}}}}}}}}}}},"不":{"docs":{},"能":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}}}}}}}}}}}}}}}}}}}}}}},"用":{"docs":{},"位":{"docs":{},"运":{"docs":{},"算":{"docs":{},"交":{"docs":{},"换":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"当":{"docs":{},"l":{"docs":{},"o":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"的":{"docs":{},"范":{"docs":{},"围":{"docs":{},"是":{"docs":{},"[":{"0":{"docs":{},",":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}},"docs":{}}}}}}},"不":{"docs":{},"能":{"docs":{},"用":{"docs":{},"n":{"docs":{},"向":{"docs":{},"右":{"docs":{},"移":{"docs":{},"来":{"docs":{},"和":{"1":{"docs":{},"比":{"docs":{},"较":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"如":{"docs":{},"果":{"docs":{},"n":{"docs":{},"是":{"docs":{},"负":{"docs":{},"数":{"docs":{},"，":{"docs":{},"向":{"docs":{},"右":{"docs":{},"移":{"docs":{},"高":{"docs":{},"位":{"docs":{},"会":{"docs":{},"补":{"1":{"docs":{},"，":{"docs":{},"会":{"docs":{},"增":{"docs":{},"加":{"1":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{"Bit/二进制中1的个数.html":{"ref":"Bit/二进制中1的个数.html","tf":0.022222222222222223}}}}}},"docs":{}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}},"等":{"docs":{},"于":{"docs":{},"它":{"docs":{},"返":{"docs":{},"回":{"docs":{},"它":{"docs":{},"的":{"docs":{},"坐":{"docs":{},"标":{"docs":{},"，":{"docs":{},"小":{"docs":{},"于":{"docs":{},"它":{"docs":{},"代":{"docs":{},"替":{"docs":{},"它":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"也":{"docs":{},"是":{"docs":{},"返":{"docs":{},"回":{"docs":{},"它":{"docs":{},"的":{"docs":{},"坐":{"docs":{},"标":{"docs":{"Array/leetcode35.html":{"ref":"Array/leetcode35.html","tf":0.004405286343612335}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"]":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.007407407407407408},"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.011111111111111112},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.008213552361396304},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.009216589861751152},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.01},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704},"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.004889975550122249}},",":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.004889975550122249}}}},"不":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"，":{"docs":{},"没":{"docs":{},"说":{"docs":{},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"中":{"docs":{},"的":{"docs":{},"数":{"docs":{},"要":{"docs":{},"按":{"docs":{},"大":{"docs":{},"小":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"排":{"docs":{},"列":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"在":{"docs":{},"正":{"docs":{},"确":{"docs":{},"位":{"docs":{},"置":{"docs":{},"上":{"docs":{},"的":{"docs":{},"数":{"docs":{},"是":{"docs":{},"指":{"docs":{},"我":{"docs":{},"作":{"docs":{},"为":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"或":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},"有":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"要":{"docs":{},"忘":{"docs":{},"记":{"docs":{},"随":{"docs":{},"机":{"docs":{},"选":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"和":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"h":{"docs":{},"i":{"docs":{},"]":{"docs":{},"换":{"docs":{},"作":{"docs":{},"为":{"docs":{},"基":{"docs":{},"准":{"docs":{},"点":{"docs":{},"，":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"h":{"docs":{},"i":{"docs":{},"]":{"docs":{},"一":{"docs":{},"直":{"docs":{},"呆":{"docs":{},"在":{"docs":{},"大":{"docs":{},"于":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"不":{"docs":{},"要":{"docs":{},"忘":{"docs":{},"了":{"docs":{},"把":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"h":{"docs":{},"i":{"docs":{},"]":{"docs":{},"和":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"]":{"docs":{},"调":{"docs":{},"换":{"docs":{},"，":{"docs":{},"放":{"docs":{},"回":{"docs":{},"到":{"docs":{},"等":{"docs":{},"于":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"。":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"打":{"docs":{},"印":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}},"函":{"docs":{},"数":{"docs":{},"：":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704},"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704},"bfs-dfs/leetcode40.html":{"ref":"bfs-dfs/leetcode40.html","tf":0.004608294930875576},"bfs-dfs/leetcode46.html":{"ref":"bfs-dfs/leetcode46.html","tf":0.01},"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704},"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}}},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"不":{"docs":{},"打":{"docs":{},"印":{"docs":{},"，":{"docs":{},"存":{"docs":{},"到":{"docs":{},"栈":{"docs":{},"里":{"docs":{},"去":{"docs":{},"，":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}}}}}}}}}}}}}}},"找":{"docs":{},"到":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"符":{"docs":{},"合":{"docs":{},"要":{"docs":{},"求":{"docs":{},"的":{"docs":{},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"之":{"docs":{},"后":{"docs":{},"不":{"docs":{},"会":{"docs":{},"再":{"docs":{},"在":{"docs":{},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"上":{"docs":{},"添":{"docs":{},"加":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"不":{"docs":{},"在":{"docs":{},"正":{"docs":{},"确":{"docs":{},"位":{"docs":{},"置":{"docs":{},"上":{"docs":{},"的":{"docs":{},"数":{"docs":{},"l":{"docs":{},"o":{"docs":{},"和":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"不":{"docs":{},"在":{"docs":{},"正":{"docs":{},"确":{"docs":{},"位":{"docs":{},"置":{"docs":{},"上":{"docs":{},"的":{"docs":{},"数":{"docs":{},"h":{"docs":{},"i":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"小":{"docs":{},"于":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"的":{"docs":{},"值":{"docs":{},"，":{"docs":{},"则":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"应":{"docs":{},"该":{"docs":{},"在":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"是":{"docs":{},"h":{"docs":{},"i":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047}}}}}}}}}}}}}}}}}}}}}}}}}}},"出":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":5}}}}}}}}}}}},"输":{"docs":{},"出":{"4":{"5":{"4":{"5":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"后":{"docs":{},"面":{"docs":{},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"改":{"docs":{},"变":{"docs":{},"了":{"docs":{},"，":{"docs":{},"只":{"docs":{},"能":{"docs":{},"把":{"docs":{},"副":{"docs":{},"本":{"docs":{},"装":{"docs":{},"进":{"docs":{},"去":{"docs":{},"，":{"docs":{},"不":{"docs":{},"能":{"docs":{},"把":{"docs":{},"自":{"docs":{},"己":{"docs":{},"装":{"docs":{},"进":{"docs":{},"去":{"docs":{"Array/leetcode39.html":{"ref":"Array/leetcode39.html","tf":0.003703703703703704}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"后":{"docs":{},"面":{"docs":{},"改":{"docs":{},"变":{"docs":{},"了":{"docs":{},"。":{"docs":{"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}},"顺":{"docs":{},"序":{"docs":{},"：":{"docs":{},"[":{"docs":{},"[":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"1":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"1":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"1":{"docs":{},",":{"2":{"docs":{},",":{"3":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"1":{"docs":{},",":{"3":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"2":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"2":{"docs":{},",":{"3":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"3":{"docs":{},"]":{"docs":{},"]":{"docs":{"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}}}}},"docs":{}}}}},"docs":{}}},"docs":{}}}}},"docs":{}}}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}}}},"docs":{}}}}}}}}}},"入":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}},"一":{"docs":{},"个":{"docs":{},"非":{"docs":{},"减":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"旋":{"docs":{},"转":{"docs":{},"，":{"docs":{},"输":{"docs":{},"出":{"docs":{},"旋":{"docs":{},"转":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{"Array/旋转数组的最小元素.html":{"ref":"Array/旋转数组的最小元素.html","tf":0.015151515151515152}}}}}}}}}}}}}}}}}}}}}}}}}}},"整":{"docs":{},"数":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"实":{"docs":{},"现":{"docs":{},"一":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"来":{"docs":{},"调":{"docs":{},"整":{"docs":{},"该":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"数":{"docs":{},"字":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"，":{"docs":{"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.005813953488372093}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"输":{"docs":{},"出":{"docs":{},"该":{"docs":{},"数":{"docs":{},"二":{"docs":{},"进":{"docs":{},"制":{"docs":{},"表":{"docs":{},"示":{"docs":{},"中":{"1":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{},"。":{"docs":{},"其":{"docs":{},"中":{"docs":{},"负":{"docs":{},"数":{"docs":{},"用":{"docs":{},"补":{"docs":{},"码":{"docs":{},"表":{"docs":{},"示":{"docs":{},"。":{"docs":{"Bit/二进制中1的个数.html":{"ref":"Bit/二进制中1的个数.html","tf":0.022222222222222223}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"按":{"docs":{},"链":{"docs":{},"表":{"docs":{},"值":{"docs":{},"从":{"docs":{},"尾":{"docs":{},"到":{"docs":{},"头":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"返":{"docs":{},"回":{"docs":{},"一":{"docs":{},"个":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.007518796992481203}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"某":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"的":{"docs":{},"前":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"和":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"，":{"docs":{},"请":{"docs":{},"重":{"docs":{},"建":{"docs":{},"出":{"docs":{},"该":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"。":{"docs":{"Tree/重建二叉树.html":{"ref":"Tree/重建二叉树.html","tf":0.022222222222222223}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"三":{"docs":{},"者":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502}}}}}}},"关":{"docs":{},"于":{"docs":{},"中":{"docs":{},"间":{"docs":{},"的":{"docs":{},"怎":{"docs":{},"么":{"docs":{},"处":{"docs":{},"理":{"docs":{},"自":{"docs":{},"己":{"docs":{},"没":{"docs":{},"想":{"docs":{},"到":{"docs":{},"通":{"docs":{},"过":{"docs":{},"是":{"docs":{},"否":{"docs":{},"跨":{"docs":{},"越":{"docs":{},"来":{"docs":{},"分":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0072992700729927005}}}}}}}}}}}}}}}}}}}}}},"先":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"、":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"、":{"docs":{},"后":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"的":{"docs":{},"递":{"docs":{},"归":{"docs":{},"和":{"docs":{},"非":{"docs":{},"递":{"docs":{},"归":{"docs":{},"版":{"docs":{},"本":{"docs":{},"以":{"docs":{},"及":{"docs":{},"层":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"的":{"docs":{},"总":{"docs":{},"结":{"docs":{},"。":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"冒":{"docs":{},"泡":{"docs":{},"排":{"docs":{},"序":{"docs":{},"、":{"docs":{},"插":{"docs":{},"入":{"docs":{},"排":{"docs":{},"序":{"docs":{},"、":{"docs":{},"选":{"docs":{},"择":{"docs":{},"排":{"docs":{},"序":{"docs":{},"、":{"docs":{},"归":{"docs":{},"并":{"docs":{},"排":{"docs":{},"序":{"docs":{},"、":{"docs":{},"快":{"docs":{},"速":{"docs":{},"排":{"docs":{},"序":{"docs":{},"、":{"docs":{},"堆":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"总":{"docs":{},"结":{"docs":{},"。":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"再":{"docs":{},"求":{"docs":{},"跨":{"docs":{},"越":{"docs":{},"中":{"docs":{},"间":{"docs":{},"点":{"docs":{},"的":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"s":{"docs":{},"s":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502}}}}}}}}}}}}}}}}}}}}}}},"把":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"/":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"放":{"docs":{},"在":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"处":{"docs":{"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"继":{"docs":{},"续":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"剩":{"docs":{},"下":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"寻":{"docs":{},"找":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"下":{"docs":{},"降":{"docs":{},"的":{"docs":{},"数":{"docs":{},"，":{"docs":{},"得":{"docs":{},"到":{"docs":{},"的":{"docs":{},"插":{"docs":{},"入":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"中":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"就":{"docs":{},"是":{"docs":{},"l":{"docs":{},"o":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"前":{"docs":{},"面":{"docs":{},"一":{"docs":{},"段":{"docs":{},"的":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"要":{"docs":{},"是":{"docs":{},"是":{"docs":{},"负":{"docs":{},"数":{"docs":{},"，":{"docs":{},"还":{"docs":{},"不":{"docs":{},"如":{"docs":{},"不":{"docs":{},"要":{"docs":{},"前":{"docs":{},"面":{"docs":{},"那":{"docs":{},"段":{"docs":{},"以":{"docs":{},"当":{"docs":{},"前":{"docs":{},"值":{"docs":{},"作":{"docs":{},"为":{"docs":{},"起":{"docs":{},"始":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502},"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{"Array/矩阵覆盖.html":{"ref":"Array/矩阵覆盖.html","tf":0.025}}},"i":{"docs":{},"已":{"docs":{},"经":{"docs":{},"在":{"docs":{},"全":{"docs":{},"局":{"docs":{},"中":{"docs":{},"被":{"docs":{},"定":{"docs":{},"义":{"docs":{},"了":{"docs":{},"，":{"docs":{},"后":{"docs":{},"面":{"docs":{},"写":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}}}}}}}}}}}}}}}}},"参":{"docs":{},"考":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"w":{"docs":{},"w":{"docs":{},"w":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},"s":{"docs":{},".":{"docs":{},"o":{"docs":{},"r":{"docs":{},"g":{"docs":{},"/":{"docs":{},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0072992700729927005}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"/":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"文":{"docs":{},"末":{"docs":{},"图":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047}}}}}},"见":{"docs":{},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{},"变":{"docs":{},"形":{"docs":{},"总":{"docs":{},"结":{"docs":{},"的":{"1":{"docs":{},".":{"8":{"docs":{"Array/旋转数组的最小元素.html":{"ref":"Array/旋转数组的最小元素.html","tf":0.015151515151515152}}},"docs":{}}},"docs":{}}}}}}}}}}}},"取":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"为":{"docs":{},"三":{"docs":{},"者":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"返":{"docs":{},"回":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502}}}}}}}}}}}}}},"固":{"docs":{},"定":{"docs":{},"一":{"docs":{},"端":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"子":{"docs":{},"数":{"docs":{},"列":{"docs":{},"问":{"docs":{},"题":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502}}}}}}}}}}}}}},"扫":{"docs":{},"描":{"docs":{},"一":{"docs":{},"次":{"docs":{},"整":{"docs":{},"个":{"docs":{},"数":{"docs":{},"列":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"数":{"docs":{},"值":{"docs":{},"，":{"docs":{},"在":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"扫":{"docs":{},"描":{"docs":{},"点":{"docs":{},"计":{"docs":{},"算":{"docs":{},"以":{"docs":{},"该":{"docs":{},"点":{"docs":{},"数":{"docs":{},"值":{"docs":{},"为":{"docs":{},"结":{"docs":{},"束":{"docs":{},"点":{"docs":{},"的":{"docs":{},"子":{"docs":{},"数":{"docs":{},"列":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"和":{"docs":{},"（":{"docs":{},"正":{"docs":{},"数":{"docs":{},"和":{"docs":{},"）":{"docs":{},"。":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502},"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"求":{"docs":{},"左":{"docs":{},"边":{"docs":{},"的":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"再":{"docs":{},"求":{"docs":{},"右":{"docs":{},"边":{"docs":{},"的":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"相":{"docs":{},"加":{"docs":{},"即":{"docs":{},"为":{"docs":{},"所":{"docs":{},"求":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502}}}}}}}},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502}}}}}},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047}}}}}},"：":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0072992700729927005}}}},"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{},"（":{"docs":{},"因":{"docs":{},"为":{"docs":{},"递":{"docs":{},"归":{"docs":{},"深":{"docs":{},"度":{"docs":{},"是":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},"，":{"docs":{},"用":{"docs":{},"用":{"docs":{},"来":{"docs":{},"记":{"docs":{},"录":{"docs":{},"切":{"docs":{},"分":{"docs":{},"点":{"docs":{},"）":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},")":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}}}}}}},"该":{"docs":{},"子":{"docs":{},"数":{"docs":{},"列":{"docs":{},"由":{"docs":{},"两":{"docs":{},"部":{"docs":{},"分":{"docs":{},"组":{"docs":{},"成":{"docs":{},"：":{"docs":{},"【":{"docs":{},"以":{"docs":{},"前":{"docs":{},"一":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{},"为":{"docs":{},"结":{"docs":{},"束":{"docs":{},"点":{"docs":{},"】":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"子":{"docs":{},"数":{"docs":{},"列":{"docs":{},"、":{"docs":{},"该":{"docs":{},"位":{"docs":{},"置":{"docs":{},"的":{"docs":{},"数":{"docs":{},"值":{"docs":{},"。":{"docs":{"Array/leetcode53.html":{"ref":"Array/leetcode53.html","tf":0.0036496350364963502},"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"@":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.007194244604316547}}}}}}}}}},"先":{"docs":{},"把":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"按":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"从":{"docs":{},"小":{"docs":{},"到":{"docs":{},"大":{"docs":{},"排":{"docs":{},"序":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"用":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.007194244604316547}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"压":{"docs":{},"右":{"docs":{},"后":{"docs":{},"压":{"docs":{},"左":{"docs":{},"，":{"docs":{},"弹":{"docs":{},"出":{"docs":{},"为":{"docs":{},"先":{"docs":{},"弹":{"docs":{},"左":{"docs":{},"后":{"docs":{},"弹":{"docs":{},"右":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}},")":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}}}}}}}}}}}}}}}},"对":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"进":{"docs":{},"行":{"docs":{},"后":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"再":{"docs":{},"对":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"进":{"docs":{},"行":{"docs":{},"后":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"再":{"docs":{},"打":{"docs":{},"印":{"docs":{},"自":{"docs":{},"己":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"序":{"docs":{},"中":{"docs":{},"序":{"docs":{},"后":{"docs":{},"序":{"docs":{},"中":{"docs":{},"的":{"docs":{},"“":{"docs":{},"序":{"docs":{},"”":{"docs":{},"指":{"docs":{},"的":{"docs":{},"是":{"docs":{},"打":{"docs":{},"印":{"docs":{},"根":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"。":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}}}}}}}}}}}}}}}}}}},"遍":{"docs":{},"历":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}}},"打":{"docs":{},"印":{"docs":{},"自":{"docs":{},"己":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0025974025974025974}}}}}},"进":{"docs":{},"先":{"docs":{},"出":{"docs":{},"，":{"docs":{},"用":{"docs":{},"队":{"docs":{},"列":{"docs":{},"实":{"docs":{},"现":{"docs":{},"。":{"docs":{},"弹":{"docs":{},"一":{"docs":{},"个":{"docs":{},"出":{"docs":{},"来":{"docs":{},"，":{"docs":{},"把":{"docs":{},"左":{"docs":{},"边":{"docs":{},"右":{"docs":{},"边":{"docs":{},"加":{"docs":{},"进":{"docs":{},"去":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}}}}}}}}}}}}}}}}}}}}}}},"排":{"docs":{},"出":{"docs":{},"现":{"docs":{},"次":{"docs":{},"数":{"docs":{},"多":{"docs":{},"的":{"docs":{},"，":{"docs":{},"再":{"docs":{},"排":{"docs":{},"出":{"docs":{},"现":{"docs":{},"次":{"docs":{},"数":{"docs":{},"少":{"docs":{},"的":{"docs":{"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625}}}}}}}}}}}}}}}}}},"固":{"docs":{},"定":{"docs":{},"指":{"docs":{},"针":{"1":{"docs":{},"，":{"docs":{},"用":{"docs":{},"尾":{"docs":{},"指":{"docs":{},"针":{"docs":{},"去":{"docs":{},"找":{"docs":{},"与":{"docs":{},"头":{"docs":{},"指":{"docs":{},"针":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"数":{"docs":{},"，":{"docs":{},"找":{"docs":{},"到":{"docs":{},"则":{"docs":{},"返":{"docs":{},"回":{"docs":{},"，":{"docs":{"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}},"答":{"docs":{},"案":{"docs":{},"区":{"docs":{},"方":{"docs":{},"法":{"2":{"docs":{},"：":{"docs":{"Array/leetcode56.html":{"ref":"Array/leetcode56.html","tf":0.007194244604316547}}}},"docs":{}}}}}},"仅":{"docs":{},"用":{"docs":{},"一":{"docs":{},"列":{"docs":{},"来":{"docs":{},"记":{"docs":{},"录":{"docs":{"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.011111111111111112}}}}}}}}},"第":{"0":{"docs":{},"列":{"docs":{},",":{"docs":{},"j":{"docs":{"Array/leetcode64.html":{"ref":"Array/leetcode64.html","tf":0.011111111111111112}}}}}},"docs":{},"一":{"docs":{},"行":{"docs":{},"包":{"docs":{},"括":{"docs":{},"两":{"docs":{},"个":{"docs":{},"整":{"docs":{},"数":{"docs":{},"：":{"docs":{},"点":{"docs":{},"的":{"docs":{},"总":{"docs":{},"数":{"docs":{},"n":{"docs":{},"，":{"docs":{},"查":{"docs":{},"询":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"m":{"docs":{},"。":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}}}}}}}}}}}}}}}}}}}}},"个":{"docs":{},"大":{"docs":{},"于":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"的":{"docs":{},"数":{"docs":{},"在":{"docs":{},"右":{"docs":{},"半":{"docs":{},"段":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876}}}}}}}}}}}}}}}},"小":{"docs":{},"于":{"docs":{},"等":{"docs":{},"于":{"2":{"docs":{},"的":{"docs":{},"数":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"是":{"3":{"docs":{},"，":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"大":{"docs":{},"于":{"2":{"docs":{},"的":{"docs":{},"数":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"是":{"4":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876}}},"docs":{}}}}}}}},"docs":{}}}}}}}},"docs":{}}}}}}}},"docs":{}}}}}},"层":{"docs":{},"递":{"docs":{},"归":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374}}}}}},"二":{"docs":{},"行":{"docs":{},"包":{"docs":{},"含":{"docs":{},"n":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"为":{"docs":{},"各":{"docs":{},"个":{"docs":{},"点":{"docs":{},"的":{"docs":{},"坐":{"docs":{},"标":{"docs":{},"。":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}}}}}}}}}}}}}}},"层":{"docs":{},"递":{"docs":{},"归":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374}}}}}},"三":{"docs":{},"层":{"docs":{},"递":{"docs":{},"归":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374}}}}}}},"k":{"docs":{"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":2.017699115044248},"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.01744186046511628}},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"n":{"docs":{},"e":{"docs":{},"算":{"docs":{},"法":{"docs":{},"：":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274}}}}}}}}}},")":{"docs":{"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.017699115044247787}}},",":{"docs":{"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.008849557522123894}}},".":{"docs":{"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.008849557522123894}}},"为":{"docs":{},"小":{"docs":{},"和":{"docs":{},"，":{"docs":{},"k":{"docs":{},"为":{"docs":{},"差":{"docs":{},"，":{"docs":{},"只":{"docs":{},"要":{"docs":{},"找":{"docs":{},"到":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"和":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.008849557522123894}}}}}}}}}}}}}}}}}}}}},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"构":{"docs":{},"造":{"docs":{},"出":{"docs":{},"和":{"docs":{},"为":{"docs":{},"k":{"docs":{},"的":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.008849557522123894}}}}}}}}}}}}}}}}}}}}},"−":{"1":{"docs":{},",":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.008547008547008548}}}},"2":{"docs":{},",":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274}}}},"3":{"docs":{},",":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274}}}},"5":{"docs":{},",":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274}}}},"docs":{}},"以":{"docs":{},"本":{"docs":{},"题":{"docs":{},"类":{"docs":{},"比":{"docs":{},"于":{"docs":{},"最":{"docs":{},"大":{"docs":{},"子":{"docs":{},"数":{"docs":{},"列":{"docs":{},"问":{"docs":{},"题":{"docs":{},"的":{"docs":{},"变":{"docs":{},"种":{"docs":{},"，":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274}}}}}}}}}}}}}}}}}}}}}}}}}}},"下":{"docs":{},"m":{"docs":{},"行":{"docs":{},"，":{"docs":{},"各":{"docs":{},"包":{"docs":{},"含":{"docs":{},"两":{"docs":{},"个":{"docs":{},"整":{"docs":{},"数":{"docs":{},"：":{"docs":{},"查":{"docs":{},"询":{"docs":{},"区":{"docs":{},"间":{"docs":{},"的":{"docs":{},"左":{"docs":{},"、":{"docs":{},"右":{"docs":{},"边":{"docs":{},"界":{"docs":{},"a":{"docs":{},"和":{"docs":{},"b":{"docs":{},"。":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}}}}}}}}}}}}}}}}}}}}}}}}}},"次":{"docs":{},"数":{"docs":{},"最":{"docs":{},"多":{"docs":{},"的":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"满":{"docs":{},"足":{"docs":{},"n":{"docs":{},"间":{"docs":{},"隔":{"docs":{},"算":{"docs":{},"出":{"docs":{},"总":{"docs":{},"数":{"docs":{},"为":{"docs":{"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625}}}}}}}}}}}}}}}}}}}}},"左":{"docs":{},"下":{"docs":{},"角":{"docs":{},"为":{"docs":{},"基":{"docs":{},"准":{"docs":{},"进":{"docs":{},"行":{"docs":{},"范":{"docs":{},"围":{"docs":{},"的":{"docs":{},"缩":{"docs":{},"小":{"docs":{},"，":{"docs":{},"查":{"docs":{},"找":{"docs":{},"的":{"docs":{},"范":{"docs":{},"围":{"docs":{},"为":{"docs":{},"行":{"docs":{},"在":{"docs":{},"[":{"0":{"docs":{},",":{"docs":{},"i":{"docs":{},"]":{"docs":{},"，":{"docs":{},"列":{"docs":{},"在":{"docs":{},"[":{"docs":{},"j":{"docs":{},",":{"docs":{},"n":{"docs":{"Matrix/二维数组中的查找.html":{"ref":"Matrix/二维数组中的查找.html","tf":0.013888888888888888}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}},"其":{"docs":{},"中":{"docs":{},"要":{"docs":{},"求":{"docs":{},"j":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274}}}}}},"和":{"docs":{},"为":{"6":{"docs":{},"。":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274}}}},"docs":{}}},"实":{"docs":{},"，":{"docs":{},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{},"看":{"docs":{},"起":{"docs":{},"来":{"docs":{},"s":{"docs":{},"o":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938}}}}}}}}}}}}}},"则":{"docs":{},"差":{"docs":{},"额":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274}}}}},"就":{"docs":{},"算":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"出":{"docs":{},"现":{"docs":{},"在":{"docs":{},"最":{"docs":{},"后":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{},"最":{"docs":{},"后":{"docs":{},"只":{"docs":{},"返":{"docs":{},"回":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{},"i":{"docs":{},"t":{"docs":{},"，":{"docs":{},"没":{"docs":{},"有":{"docs":{},"更":{"docs":{},"新":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{},"i":{"docs":{},"t":{"docs":{},"还":{"docs":{},"是":{"docs":{},"不":{"docs":{},"影":{"docs":{},"响":{"docs":{},"结":{"docs":{},"果":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"用":{"docs":{},"到":{"docs":{},"了":{"docs":{},"“":{"docs":{},"最":{"docs":{},"佳":{"docs":{},"子":{"docs":{},"结":{"docs":{},"构":{"docs":{},"”":{"docs":{},"（":{"docs":{},"以":{"docs":{},"每":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{},"为":{"docs":{},"终":{"docs":{},"点":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"子":{"docs":{},"数":{"docs":{},"列":{"docs":{},"都":{"docs":{},"是":{"docs":{},"基":{"docs":{},"于":{"docs":{},"其":{"docs":{},"前":{"docs":{},"一":{"docs":{},"位":{"docs":{},"置":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"子":{"docs":{},"数":{"docs":{},"列":{"docs":{},"计":{"docs":{},"算":{"docs":{},"得":{"docs":{},"出":{"docs":{},"）":{"docs":{},"，":{"docs":{},"可":{"docs":{},"看":{"docs":{},"成":{"docs":{},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{},"。":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"栈":{"docs":{},"来":{"docs":{},"模":{"docs":{},"仿":{"docs":{},"插":{"docs":{},"入":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047}}}}}}}}}}}},"实":{"docs":{},"现":{"docs":{},"队":{"docs":{},"列":{"docs":{},"结":{"docs":{},"构":{"docs":{"Stack-Queue/用两个栈实现队列.html":{"ref":"Stack-Queue/用两个栈实现队列.html","tf":0.013513513513513514}}}}}},"，":{"docs":{},"弹":{"docs":{},"出":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"作":{"docs":{},"为":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"打":{"docs":{},"印":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}}}}}}}}}}}}}}}}}}}},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"不":{"docs":{},"为":{"docs":{},"空":{"docs":{},"或":{"docs":{},"者":{"docs":{},"栈":{"docs":{},"不":{"docs":{},"为":{"docs":{},"空":{"docs":{},"继":{"docs":{},"续":{"docs":{},"w":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"（":{"docs":{},"只":{"docs":{},"有":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"栈":{"docs":{},"也":{"docs":{},"为":{"docs":{},"空":{"docs":{},"才":{"docs":{},"退":{"docs":{},"出":{"docs":{},"循":{"docs":{},"环":{"docs":{},"）":{"docs":{},"：":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"两":{"docs":{},"个":{"docs":{},"栈":{"docs":{},"实":{"docs":{},"现":{"docs":{},"队":{"docs":{},"列":{"docs":{"Stack-Queue/用两个栈实现队列.html":{"ref":"Stack-Queue/用两个栈实现队列.html","tf":0.013513513513513514}}}}}},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"一":{"docs":{},"个":{"docs":{},"队":{"docs":{},"列":{"docs":{},"，":{"docs":{},"完":{"docs":{},"成":{"docs":{},"队":{"docs":{},"列":{"docs":{},"的":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"和":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{"Stack-Queue/用两个栈实现队列.html":{"ref":"Stack-Queue/用两个栈实现队列.html","tf":0.013513513513513514}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"副":{"docs":{},"图":{"docs":{},"来":{"docs":{},"表":{"docs":{},"达":{"docs":{},"这":{"docs":{},"个":{"docs":{},"流":{"docs":{},"程":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}}}}}}}}}}}},"图":{"docs":{},"可":{"docs":{},"以":{"docs":{},"更":{"docs":{},"清":{"docs":{},"楚":{"docs":{},"的":{"docs":{},"表":{"docs":{},"达":{"docs":{},"这":{"docs":{},"个":{"docs":{},"过":{"docs":{},"程":{"docs":{},"：":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"存":{"docs":{},"储":{"docs":{},"要":{"docs":{},"放":{"docs":{},"入":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"中":{"docs":{},"的":{"docs":{},"单":{"docs":{},"元":{"docs":{},"，":{"docs":{},"回":{"docs":{},"溯":{"docs":{},"之":{"docs":{},"后":{"docs":{},"注":{"docs":{},"意":{"docs":{},"撤":{"docs":{},"回":{"docs":{},"上":{"docs":{},"一":{"docs":{},"步":{"docs":{"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"n":{"docs":{},"]":{"docs":{},"[":{"docs":{},"m":{"docs":{},"]":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"记":{"docs":{},"录":{"docs":{},"到":{"docs":{},"达":{"docs":{},"坐":{"docs":{},"标":{"docs":{},"为":{"docs":{},"(":{"docs":{},"i":{"docs":{},",":{"docs":{},"j":{"docs":{},")":{"docs":{},"的":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"s":{"docs":{},"数":{"docs":{},"量":{"docs":{"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.007692307692307693}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"类":{"docs":{},"比":{"docs":{},"于":{"docs":{},"最":{"docs":{},"大":{"docs":{},"子":{"docs":{},"数":{"docs":{},"列":{"docs":{},"：":{"docs":{},"最":{"docs":{},"大":{"docs":{},"子":{"docs":{},"数":{"docs":{},"列":{"docs":{},"问":{"docs":{},"题":{"docs":{},"的":{"docs":{},"目":{"docs":{},"标":{"docs":{},"是":{"docs":{},"在":{"docs":{},"数":{"docs":{},"列":{"docs":{},"的":{"docs":{},"一":{"docs":{},"维":{"docs":{},"方":{"docs":{},"向":{"docs":{},"找":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"连":{"docs":{},"续":{"docs":{},"的":{"docs":{},"子":{"docs":{},"数":{"docs":{},"列":{"docs":{},"，":{"docs":{},"使":{"docs":{},"该":{"docs":{},"子":{"docs":{},"数":{"docs":{},"列":{"docs":{},"的":{"docs":{},"和":{"docs":{},"最":{"docs":{},"大":{"docs":{},"。":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"遇":{"docs":{},"到":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"都":{"docs":{},"比":{"docs":{},"较":{"docs":{},"且":{"docs":{},"试":{"docs":{},"图":{"docs":{},"更":{"docs":{},"新":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"和":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{},"i":{"docs":{},"t":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"问":{"docs":{},"题":{"docs":{},"转":{"docs":{},"化":{"docs":{},"为":{"docs":{},"求":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},"−":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},",":{"docs":{"Array/leetcode121.html":{"ref":"Array/leetcode121.html","tf":0.004273504273504274}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"⌊":{"docs":{"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805}}},"⌋":{"docs":{"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805}}},"对":{"docs":{},"于":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"存":{"docs":{},"储":{"docs":{},"，":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"为":{"docs":{},"数":{"docs":{},"，":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"为":{"docs":{},"该":{"docs":{},"数":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"次":{"docs":{},"查":{"docs":{},"询":{"docs":{},"的":{"docs":{},"区":{"docs":{},"间":{"docs":{},"[":{"docs":{},"a":{"docs":{},",":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}}}}}}}}}},"先":{"docs":{},"序":{"docs":{},"左":{"docs":{},"右":{"docs":{},"互":{"docs":{},"换":{"docs":{},"得":{"docs":{},"到":{"docs":{},"中":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}}}}}}}}}},"每":{"docs":{},"次":{"docs":{},"查":{"docs":{},"询":{"docs":{},"，":{"docs":{},"输":{"docs":{},"出":{"docs":{},"落":{"docs":{},"在":{"docs":{},"闭":{"docs":{},"区":{"docs":{},"间":{"docs":{},"[":{"docs":{},"a":{"docs":{},",":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}}}}}}}}}}}}}}},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"进":{"docs":{},"行":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"打":{"docs":{},"印":{"docs":{},"自":{"docs":{},"己":{"docs":{},"，":{"docs":{},"对":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"进":{"docs":{},"行":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0025974025974025974}}}}}}}}}}}}}}}}}}}}}}}}}}}},"左":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.005194805194805195}},"右":{"docs":{},"分":{"docs":{},"治":{"docs":{},"找":{"docs":{},"到":{"docs":{},"出":{"docs":{},"现":{"docs":{},"次":{"docs":{},"数":{"docs":{},"最":{"docs":{},"多":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805}}}}}}}}}}}}}}}},"互":{"docs":{},"换":{"docs":{},"得":{"docs":{},"到":{"docs":{},"中":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}}}}},"子":{"docs":{},"树":{"docs":{},"各":{"docs":{},"分":{"docs":{},"别":{"docs":{},"二":{"docs":{},"分":{"docs":{},"，":{"docs":{},"递":{"docs":{},"归":{"docs":{},"到":{"docs":{},"超":{"docs":{},"出":{"docs":{},"范":{"docs":{},"围":{"docs":{},"则":{"docs":{},"向":{"docs":{},"上":{"docs":{},"返":{"docs":{},"回":{"docs":{"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}}}}}}},"子":{"docs":{},"树":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0025974025974025974},"Tree/重建二叉树.html":{"ref":"Tree/重建二叉树.html","tf":0.022222222222222223}}}},"，":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}},"打":{"docs":{},"印":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"不":{"docs":{},"打":{"docs":{},"印":{"docs":{},"，":{"docs":{},"存":{"docs":{},"到":{"docs":{},"栈":{"docs":{},"里":{"docs":{},"去":{"docs":{},"，":{"docs":{},"存":{"docs":{},"完":{"docs":{},"把":{"docs":{},"所":{"docs":{},"有":{"docs":{},"栈":{"docs":{},"中":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"打":{"docs":{},"印":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"值":{"docs":{},"给":{"docs":{},"上":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}}}}},"当":{"docs":{},"m":{"docs":{},"=":{"0":{"docs":{},"时":{"docs":{},"清":{"docs":{},"空":{"docs":{},"这":{"docs":{},"个":{"docs":{},"候":{"docs":{},"选":{"docs":{},"人":{"docs":{},"的":{"docs":{},"信":{"docs":{},"息":{"docs":{},"，":{"docs":{},"用":{"docs":{},"m":{"docs":{},"记":{"docs":{},"录":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"的":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"候":{"docs":{},"选":{"docs":{},"人":{"docs":{"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"不":{"docs":{},"为":{"docs":{},"空":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0025974025974025974}},"或":{"docs":{},"者":{"docs":{},"栈":{"docs":{},"不":{"docs":{},"为":{"docs":{},"空":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}}}}}},"，":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"压":{"docs":{},"入":{"docs":{},"栈":{"docs":{},"，":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"往":{"docs":{},"左":{"docs":{},"跑":{"docs":{},"（":{"docs":{},"左":{"docs":{},"边":{"docs":{},"界":{"docs":{},"一":{"docs":{},"压":{"docs":{},"压":{"docs":{},"一":{"docs":{},"溜":{"docs":{},"）":{"docs":{},"；":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"为":{"docs":{},"空":{"docs":{},"但":{"docs":{},"是":{"docs":{},"栈":{"docs":{},"不":{"docs":{},"为":{"docs":{},"空":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}}}}}},"，":{"docs":{},"从":{"docs":{},"栈":{"docs":{},"中":{"docs":{},"拿":{"docs":{},"一":{"docs":{},"个":{"docs":{},"打":{"docs":{},"印":{"docs":{},"，":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"向":{"docs":{},"右":{"docs":{},"跑":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}}}}}}}}}}}}}}}},"栈":{"docs":{},"不":{"docs":{},"为":{"docs":{},"空":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}}}}}}},"向":{"docs":{},"右":{"docs":{},"走":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}}}}}}},"无":{"docs":{},"论":{"docs":{},"在":{"docs":{},"哪":{"docs":{},"里":{"docs":{},"停":{"docs":{},"止":{"docs":{},"，":{"docs":{},"m":{"docs":{},"所":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"候":{"docs":{},"选":{"docs":{},"人":{"docs":{},"就":{"docs":{},"是":{"docs":{},"票":{"docs":{},"数":{"docs":{},"超":{"docs":{},"过":{"docs":{},"半":{"docs":{},"数":{"docs":{},"的":{"docs":{},"那":{"docs":{},"个":{"docs":{},"m":{"docs":{},"a":{"docs":{},"j":{"docs":{},"o":{"docs":{},"r":{"docs":{"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"重":{"docs":{},"复":{"docs":{},"数":{"docs":{},"字":{"docs":{},"，":{"docs":{},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{},"出":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876}}}}}}}}}}}}}}}},"找":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938}}}}}}}}}}}}}}}}}},"是":{"docs":{},"个":{"docs":{},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"的":{"docs":{},"算":{"docs":{},"法":{"docs":{},"，":{"docs":{},"随":{"docs":{},"时":{"docs":{},"停":{"docs":{},"止":{"docs":{},"能":{"docs":{},"随":{"docs":{},"时":{"docs":{},"出":{"docs":{},"结":{"docs":{},"果":{"docs":{"Array/leetcode169.html":{"ref":"Array/leetcode169.html","tf":0.004878048780487805}}}}}}}}}}}}}}}}}}}}}}}},"两":{"docs":{},"个":{"docs":{},"以":{"docs":{},"及":{"docs":{},"以":{"docs":{},"上":{"docs":{},"个":{"0":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"全":{"docs":{},"为":{"0":{"docs":{"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704}}},"docs":{}}}}}}}}}}}}}},"docs":{}}}}}},"变":{"docs":{},"量":{"docs":{},"i":{"docs":{},",":{"docs":{},"j":{"docs":{},"分":{"docs":{},"别":{"docs":{},"表":{"docs":{},"示":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"的":{"docs":{},"首":{"docs":{},"尾":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"再":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"算":{"docs":{},"出":{"docs":{},"[":{"docs":{},"i":{"docs":{},",":{"docs":{},"j":{"docs":{},"]":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"和":{"docs":{"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.008849557522123894}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"但":{"docs":{},"是":{"docs":{},"要":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"到":{"docs":{},"有":{"0":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"0":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"除":{"docs":{},"了":{"docs":{},"这":{"docs":{},"个":{"0":{"docs":{},"位":{"docs":{},"置":{"docs":{},"的":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"不":{"docs":{},"为":{"0":{"docs":{},"，":{"docs":{},"其":{"docs":{},"他":{"docs":{},"位":{"docs":{},"置":{"docs":{},"的":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"都":{"docs":{},"为":{"0":{"docs":{"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704}}},"docs":{}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}},"docs":{}}}}}}}}},"docs":{}}}}}}}},"docs":{}}}}}},"没":{"docs":{},"有":{"docs":{},"利":{"docs":{},"用":{"docs":{},"到":{"docs":{},"n":{"docs":{},"+":{"1":{"docs":{},"个":{"docs":{},"数":{"docs":{},"都":{"docs":{},"在":{"docs":{},"[":{"1":{"docs":{},",":{"docs":{},"n":{"docs":{},"]":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"条":{"docs":{},"件":{"docs":{"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.010869565217391304}}}}}}}}}}},"docs":{}}}}}}},"docs":{}}}}}}}}}},"没":{"docs":{},"有":{"0":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"两":{"docs":{},"遍":{"docs":{},"，":{"docs":{},"有":{"0":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"三":{"docs":{},"遍":{"docs":{"Array/leetcode238.html":{"ref":"Array/leetcode238.html","tf":0.005025125628140704}}}}}}}}}},"docs":{}}}}}}}}}}},"docs":{},"逆":{"docs":{},"序":{"docs":{},"对":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047}}}}}},"找":{"docs":{},"到":{"docs":{},"则":{"docs":{},"头":{"docs":{},"指":{"docs":{},"针":{"docs":{},"后":{"docs":{},"移":{"docs":{},"一":{"docs":{},"步":{"docs":{},"，":{"docs":{},"继":{"docs":{},"续":{"docs":{},"用":{"docs":{},"尾":{"docs":{},"指":{"docs":{},"针":{"docs":{},"找":{"docs":{},"与":{"docs":{},"头":{"docs":{},"指":{"docs":{},"针":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"数":{"docs":{"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"z":{"docs":{"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625}},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":3.3466666666666662}}}}}},"从":{"docs":{},"左":{"docs":{},"到":{"docs":{},"右":{"docs":{},"用":{"docs":{},"i":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"原":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"用":{"docs":{},"j":{"docs":{},"记":{"docs":{},"录":{"docs":{},"该":{"docs":{},"放":{"docs":{},"到":{"docs":{},"哪":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":0.013333333333333334}}}}}}}}}}}}}}}}}}}}}}}}},"前":{"docs":{},"往":{"docs":{},"后":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"是":{"docs":{},"上":{"docs":{},"升":{"docs":{},"的":{"docs":{},"就":{"docs":{},"正":{"docs":{},"常":{"docs":{},"压":{"docs":{},"入":{"docs":{},"栈":{"docs":{},"中":{"docs":{},"，":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047}}}}}}}}}}}}}}}}}}}}}}},"到":{"docs":{},"后":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"并":{"docs":{},"用":{"docs":{},"数":{"docs":{},"组":{"docs":{},"存":{"docs":{},"储":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"转":{"docs":{},"换":{"docs":{},"成":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.007518796992481203}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"=":{"0":{"docs":{},"开":{"docs":{},"始":{"docs":{},"看":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"是":{"docs":{},"否":{"docs":{},"=":{"docs":{},"=":{"docs":{},"i":{"docs":{},"，":{"docs":{"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609}}}}}}}}}}}}}}}}}}},"docs":{}}},"右":{"docs":{},"边":{"docs":{},"起":{"docs":{},"查":{"docs":{},"找":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"小":{"docs":{},"于":{"docs":{},"某":{"docs":{},"个":{"docs":{},"数":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938}}}}}}}},"等":{"docs":{},"于":{"docs":{},"某":{"docs":{},"个":{"docs":{},"数":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938}}}}}}}}}}}}}}}}}}}},"尾":{"docs":{},"到":{"docs":{},"头":{"docs":{},"打":{"docs":{},"印":{"docs":{},"链":{"docs":{},"表":{"docs":{"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":0.007518796992481203}}}}}}}}},"该":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"的":{"docs":{},"邻":{"docs":{},"接":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"中":{"docs":{},"选":{"docs":{},"择":{"docs":{},"一":{"docs":{},"个":{"docs":{},"，":{"docs":{},"继":{"docs":{},"续":{"docs":{},"这":{"docs":{},"个":{"docs":{},"过":{"docs":{},"程":{"docs":{},"（":{"docs":{},"即":{"docs":{},"再":{"docs":{},"寻":{"docs":{},"找":{"docs":{},"邻":{"docs":{},"接":{"docs":{},"结":{"docs":{},"点":{"docs":{},"的":{"docs":{},"邻":{"docs":{},"接":{"docs":{},"结":{"docs":{},"点":{"docs":{},"）":{"docs":{},"，":{"docs":{},"一":{"docs":{},"直":{"docs":{},"深":{"docs":{},"入":{"docs":{},"下":{"docs":{},"去":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"没":{"docs":{},"有":{"docs":{},"邻":{"docs":{},"接":{"docs":{},"结":{"docs":{},"点":{"docs":{},"了":{"docs":{},"，":{"docs":{},"涂":{"docs":{},"黑":{"docs":{},"它":{"docs":{},"，":{"docs":{},"表":{"docs":{},"示":{"docs":{},"访":{"docs":{},"问":{"docs":{},"过":{"docs":{},"了":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"队":{"docs":{},"列":{"docs":{},"首":{"docs":{},"部":{"docs":{},"选":{"docs":{},"出":{"docs":{},"一":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"，":{"docs":{},"并":{"docs":{},"找":{"docs":{},"出":{"docs":{},"所":{"docs":{},"有":{"docs":{},"与":{"docs":{},"之":{"docs":{},"邻":{"docs":{},"接":{"docs":{},"的":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"将":{"docs":{},"找":{"docs":{},"到":{"docs":{},"的":{"docs":{},"邻":{"docs":{},"接":{"docs":{},"结":{"docs":{},"点":{"docs":{},"放":{"docs":{},"入":{"docs":{},"队":{"docs":{},"列":{"docs":{},"尾":{"docs":{},"部":{"docs":{},"，":{"docs":{},"将":{"docs":{},"已":{"docs":{},"访":{"docs":{},"问":{"docs":{},"过":{"docs":{},"结":{"docs":{},"点":{"docs":{},"涂":{"docs":{},"成":{"docs":{},"黑":{"docs":{},"色":{"docs":{},"，":{"docs":{},"没":{"docs":{},"访":{"docs":{},"问":{"docs":{},"过":{"docs":{},"的":{"docs":{},"结":{"docs":{},"点":{"docs":{},"是":{"docs":{},"白":{"docs":{},"色":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"的":{"docs":{},"颜":{"docs":{},"色":{"docs":{},"是":{"docs":{},"灰":{"docs":{},"色":{"docs":{},"，":{"docs":{},"表":{"docs":{},"示":{"docs":{},"已":{"docs":{},"经":{"docs":{},"发":{"docs":{},"现":{"docs":{},"并":{"docs":{},"且":{"docs":{},"放":{"docs":{},"入":{"docs":{},"了":{"docs":{},"队":{"docs":{},"列":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"的":{"docs":{},"颜":{"docs":{},"色":{"docs":{},"是":{"docs":{},"白":{"docs":{},"色":{"docs":{},"，":{"docs":{},"表":{"docs":{},"示":{"docs":{},"还":{"docs":{},"没":{"docs":{},"有":{"docs":{},"发":{"docs":{},"现":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"顶":{"docs":{},"点":{"1":{"docs":{},"开":{"docs":{},"始":{"docs":{},"做":{"docs":{},"深":{"docs":{},"度":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"：":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}}}}},"进":{"docs":{},"行":{"docs":{},"广":{"docs":{},"度":{"docs":{},"优":{"docs":{},"先":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"：":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}}}}}}}}}}},"2":{"docs":{},"回":{"docs":{},"溯":{"docs":{},"到":{"docs":{},"顶":{"docs":{},"点":{"1":{"docs":{},"，":{"docs":{},"并":{"docs":{},"终":{"docs":{},"止":{"docs":{},"于":{"docs":{},"顶":{"docs":{},"点":{"1":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}},"docs":{}}}}}}}}},"docs":{}}}}}}},"3":{"docs":{},"回":{"docs":{},"溯":{"docs":{},"到":{"docs":{},"顶":{"docs":{},"点":{"2":{"docs":{},"，":{"docs":{},"继":{"docs":{},"续":{"docs":{},"访":{"docs":{},"问":{"docs":{},"顶":{"docs":{},"点":{"5":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"终":{"docs":{},"止":{"docs":{},"于":{"docs":{},"顶":{"docs":{},"点":{"5":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}},"docs":{}}}}}}}}}},"docs":{}}}}}}}}},"docs":{}}}}}}},"4":{"docs":{},"开":{"docs":{},"始":{"docs":{},"访":{"docs":{},"问":{"docs":{},"，":{"docs":{},"并":{"docs":{},"终":{"docs":{},"止":{"docs":{},"于":{"docs":{},"顶":{"docs":{},"点":{"4":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}},"docs":{}}}}}}}}}}}}},"5":{"docs":{},"回":{"docs":{},"溯":{"docs":{},"到":{"docs":{},"顶":{"docs":{},"点":{"2":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"终":{"docs":{},"止":{"docs":{},"于":{"docs":{},"顶":{"docs":{},"点":{"2":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}},"docs":{}}}}}}}}}},"docs":{}}}}}}},"docs":{}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"开":{"docs":{},"始":{"docs":{},"可":{"docs":{},"以":{"docs":{},"走":{"0":{"docs":{"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.005780346820809248}}},"docs":{}}}}}}}}}}}}}}}}},"初":{"docs":{},"始":{"docs":{},"i":{"docs":{},"=":{"0":{"docs":{},",":{"docs":{},"j":{"docs":{},"=":{"0":{"docs":{},",":{"docs":{},"遇":{"docs":{},"到":{"docs":{},"不":{"docs":{},"为":{"0":{"docs":{},"的":{"docs":{},"就":{"docs":{},"放":{"docs":{},"到":{"docs":{},"j":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"j":{"docs":{},"+":{"docs":{},"+":{"docs":{},"，":{"docs":{},"i":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"完":{"docs":{},"成":{"docs":{},"后":{"docs":{},"，":{"docs":{},"j":{"docs":{},"后":{"docs":{},"面":{"docs":{},"的":{"docs":{},"全":{"docs":{},"补":{"0":{"docs":{"Array/leetcode283.html":{"ref":"Array/leetcode283.html","tf":0.013333333333333334}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}},"docs":{}}}}},"docs":{}}},"条":{"docs":{},"件":{"docs":{},"下":{"docs":{},"所":{"docs":{},"有":{"docs":{},"节":{"docs":{},"点":{"docs":{},"为":{"docs":{},"白":{"docs":{},"色":{"docs":{},"，":{"docs":{},"选":{"docs":{},"择":{"docs":{},"一":{"docs":{},"个":{"docs":{},"作":{"docs":{},"为":{"docs":{},"起":{"docs":{},"始":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"，":{"docs":{},"按":{"docs":{},"照":{"docs":{},"如":{"docs":{},"下":{"docs":{},"步":{"docs":{},"骤":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"：":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"从":{"docs":{},"顶":{"docs":{},"点":{"1":{"docs":{},"开":{"docs":{},"始":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}},"，":{"docs":{},"队":{"docs":{},"列":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}}}}},"docs":{}}}}}}},"p":{"1":{"docs":{},"指":{"docs":{},"向":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},",":{"docs":{},"p":{"2":{"docs":{},"指":{"docs":{},"向":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"1":{"docs":{},"]":{"docs":{},"，":{"docs":{"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.010869565217391304}}}}},"docs":{}}}}}}}}},"docs":{}}}}},"docs":{}}}}}}}}},"docs":{}}}},"≤":{"docs":{"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.014492753623188406},"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00819672131147541}}},"因":{"docs":{},"为":{"docs":{"Array/leetcode448.html":{"ref":"Array/leetcode448.html","tf":0.007246376811594203}},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"值":{"docs":{},"要":{"docs":{},"插":{"docs":{},"入":{"docs":{},"到":{"docs":{},"最":{"docs":{},"前":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"如":{"docs":{},"i":{"docs":{},"，":{"docs":{},"第":{"docs":{},"i":{"docs":{},"位":{"docs":{},"置":{"docs":{},"原":{"docs":{},"有":{"docs":{},"的":{"docs":{},"值":{"docs":{},"后":{"docs":{},"移":{"docs":{},"，":{"docs":{},"第":{"docs":{},"i":{"docs":{},"位":{"docs":{},"置":{"docs":{},"要":{"docs":{},"记":{"docs":{},"入":{"docs":{},"重":{"docs":{},"排":{"docs":{},"的":{"docs":{},"区":{"docs":{},"间":{"docs":{},"内":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"后":{"docs":{},"面":{"docs":{},"一":{"docs":{},"直":{"docs":{},"在":{"docs":{},"修":{"docs":{},"改":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"只":{"docs":{},"想":{"docs":{},"把":{"docs":{},"现":{"docs":{},"在":{"docs":{},"的":{"docs":{},"副":{"docs":{},"本":{"docs":{},"放":{"docs":{},"进":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"中":{"docs":{"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"循":{"docs":{},"环":{"docs":{},"中":{"docs":{},"有":{"docs":{},"j":{"docs":{},"+":{"1":{"docs":{},"作":{"docs":{},"为":{"docs":{},"索":{"docs":{},"引":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"j":{"docs":{},"的":{"docs":{},"边":{"docs":{},"界":{"docs":{},"结":{"docs":{},"束":{"docs":{},"值":{"docs":{},"是":{"docs":{},"j":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}},"，":{"docs":{},"k":{"docs":{},"为":{"docs":{},"从":{"docs":{},"头":{"docs":{},"到":{"docs":{},"某":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"的":{"docs":{},"和":{"docs":{},"，":{"docs":{},"v":{"docs":{},"为":{"docs":{},"这":{"docs":{},"个":{"docs":{},"和":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{"Array/leetcode560.html":{"ref":"Array/leetcode560.html","tf":0.008849557522123894}}}}}}}}}}}}}}}}}}}}}}}},"由":{"docs":{},"于":{"docs":{},"头":{"docs":{},"被":{"docs":{},"换":{"docs":{},"成":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"比":{"docs":{},"较":{"docs":{},"小":{"docs":{},"的":{"docs":{},"数":{"docs":{},"，":{"docs":{},"于":{"docs":{},"是":{"docs":{},"要":{"docs":{},"做":{"docs":{},"一":{"docs":{},"次":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},"调":{"docs":{},"成":{"docs":{},"大":{"docs":{},"根":{"docs":{},"堆":{"docs":{},"，":{"docs":{},"再":{"docs":{},"重":{"docs":{},"复":{"docs":{},"每":{"docs":{},"次":{"docs":{},"将":{"docs":{},"堆":{"docs":{},"的":{"docs":{},"头":{"docs":{},"和":{"docs":{},"堆":{"docs":{},"的":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"交":{"docs":{},"换":{"docs":{},"。":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"同":{"docs":{},"理":{"docs":{},"反":{"docs":{},"向":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"在":{"docs":{},"下":{"docs":{},"降":{"docs":{},"的":{"docs":{},"中":{"docs":{},"找":{"docs":{},"上":{"docs":{},"升":{"docs":{},"的":{"docs":{},"数":{"docs":{},"的":{"docs":{},"插":{"docs":{},"入":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"得":{"docs":{},"到":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"就":{"docs":{},"是":{"docs":{},"h":{"docs":{},"i":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"后":{"docs":{},"三":{"docs":{},"种":{"docs":{},"解":{"docs":{},"答":{"docs":{},"参":{"docs":{},"考":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"/":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}},"：":{"docs":{},"左":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}}}},"和":{"docs":{},"已":{"docs":{},"经":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"数":{"docs":{},"列":{"docs":{},"进":{"docs":{},"行":{"docs":{},"对":{"docs":{},"比":{"docs":{},"，":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"两":{"docs":{},"遍":{"docs":{},"找":{"docs":{},"出":{"docs":{},"l":{"docs":{},"o":{"docs":{},",":{"docs":{},"h":{"docs":{},"i":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047}}}}}}}}}}}}}}}}}}}}}}}}}},"记":{"docs":{},"录":{"docs":{},"极":{"docs":{},"值":{"docs":{},"点":{"docs":{},"，":{"docs":{},"找":{"docs":{},"到":{"docs":{},"极":{"docs":{},"值":{"docs":{},"点":{"docs":{},"区":{"docs":{},"间":{"docs":{},"内":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"和":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"坐":{"docs":{},"标":{"docs":{},"即":{"docs":{},"为":{"docs":{},"需":{"docs":{},"要":{"docs":{},"重":{"docs":{},"排":{"docs":{},"的":{"docs":{},"区":{"docs":{},"间":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"下":{"docs":{},"即":{"docs":{},"将":{"docs":{},"被":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"的":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"值":{"docs":{"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.005813953488372093}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"结":{"docs":{},"论":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}},"：":{"docs":{},"把":{"docs":{},"完":{"docs":{},"全":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"结":{"docs":{},"构":{"docs":{},"存":{"docs":{},"在":{"docs":{},"数":{"docs":{},"组":{"docs":{},"实":{"docs":{},"际":{"docs":{},"结":{"docs":{},"构":{"docs":{},"中":{"docs":{},"，":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"的":{"docs":{},"左":{"docs":{},"节":{"docs":{},"点":{"docs":{},"是":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"2":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"逆":{"docs":{},"向":{"docs":{},"时":{"docs":{},"正":{"docs":{},"常":{"docs":{},"应":{"docs":{},"该":{"docs":{},"下":{"docs":{},"降":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"如":{"docs":{},"果":{"docs":{},"上":{"docs":{},"升":{"docs":{},"则":{"docs":{},"记":{"docs":{},"录":{"docs":{},"上":{"docs":{},"升":{"docs":{},"的":{"docs":{},"值":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047}}}}}}}}}}}}}}}}}}}}}}}},"着":{"docs":{},"看":{"docs":{"Array/leetcode581.html":{"ref":"Array/leetcode581.html","tf":0.0029585798816568047}}}}},"剑":{"docs":{},"指":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":5},"Array/旋转数组的最小元素.html":{"ref":"Array/旋转数组的最小元素.html","tf":5},"Array/斐波那契数列.html":{"ref":"Array/斐波那契数列.html","tf":5},"Array/跳台阶.html":{"ref":"Array/跳台阶.html","tf":5},"Array/变态跳台阶.html":{"ref":"Array/变态跳台阶.html","tf":5},"Array/矩阵覆盖.html":{"ref":"Array/矩阵覆盖.html","tf":5},"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":5},"String/替换空格.html":{"ref":"String/替换空格.html","tf":5},"LinkedList/从尾到头打印链表.html":{"ref":"LinkedList/从尾到头打印链表.html","tf":5},"Stack-Queue/用两个栈实现队列.html":{"ref":"Stack-Queue/用两个栈实现队列.html","tf":5},"Tree/重建二叉树.html":{"ref":"Tree/重建二叉树.html","tf":5},"Matrix/二维数组中的查找.html":{"ref":"Matrix/二维数组中的查找.html","tf":5},"Bit/二进制中1的个数.html":{"ref":"Bit/二进制中1的个数.html","tf":5},"Bit/数值的整数次方.html":{"ref":"Bit/数值的整数次方.html","tf":5}}}}}}}}},"在":{"docs":{},"一":{"docs":{},"个":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{},"n":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"里":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"数":{"docs":{},"字":{"docs":{},"都":{"docs":{},"在":{"0":{"docs":{},"到":{"docs":{},"n":{"docs":{"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609}}}}},"docs":{}}}}}}}}}}}}}}}},"二":{"docs":{},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"（":{"docs":{},"每":{"docs":{},"个":{"docs":{},"一":{"docs":{},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"相":{"docs":{},"同":{"docs":{},"）":{"docs":{},"，":{"docs":{},"每":{"docs":{},"一":{"docs":{},"行":{"docs":{},"都":{"docs":{},"按":{"docs":{},"照":{"docs":{},"从":{"docs":{},"左":{"docs":{},"到":{"docs":{},"右":{"docs":{},"递":{"docs":{},"增":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"排":{"docs":{},"序":{"docs":{},"，":{"docs":{},"每":{"docs":{},"一":{"docs":{},"列":{"docs":{},"都":{"docs":{},"按":{"docs":{},"照":{"docs":{},"从":{"docs":{},"上":{"docs":{},"到":{"docs":{},"下":{"docs":{},"递":{"docs":{},"增":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"排":{"docs":{},"序":{"docs":{},"。":{"docs":{},"请":{"docs":{},"完":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"输":{"docs":{},"入":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"二":{"docs":{},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{},"和":{"docs":{},"一":{"docs":{},"个":{"docs":{},"整":{"docs":{},"数":{"docs":{},"，":{"docs":{},"判":{"docs":{},"断":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"是":{"docs":{},"否":{"docs":{},"含":{"docs":{},"有":{"docs":{},"该":{"docs":{},"整":{"docs":{},"数":{"docs":{},"。":{"docs":{"Matrix/二维数组中的查找.html":{"ref":"Matrix/二维数组中的查找.html","tf":0.013888888888888888}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"有":{"docs":{},"序":{"docs":{},"数":{"docs":{},"组":{"docs":{},"断":{"docs":{},"节":{"docs":{},"后":{"docs":{},"找":{"docs":{},"到":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"数":{"docs":{},"的":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938}}}}}}}}}}}}}}}}}}}}},"中":{"docs":{},"序":{"docs":{},"中":{"docs":{},"，":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"是":{"docs":{},"[":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},",":{"docs":{"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}}},"先":{"docs":{},"序":{"docs":{},"中":{"docs":{},"，":{"docs":{},"根":{"docs":{},"是":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"，":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"是":{"docs":{},"[":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"全":{"docs":{},"局":{"docs":{},"定":{"docs":{},"义":{"docs":{},"了":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"的":{"docs":{},"起":{"docs":{},"始":{"docs":{},"值":{"docs":{},"是":{"0":{"docs":{},"，":{"docs":{},"后":{"docs":{},"面":{"docs":{},"忘":{"docs":{},"记":{"docs":{},"了":{"docs":{},"应":{"docs":{},"该":{"docs":{},"是":{"docs":{},"i":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"一":{"docs":{},"直":{"docs":{},"是":{"0":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"把":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"放":{"docs":{},"在":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"循":{"docs":{},"环":{"docs":{},"中":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"进":{"docs":{},"入":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"循":{"docs":{},"环":{"docs":{},"都":{"docs":{},"有":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}},"寻":{"docs":{},"求":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609}}}}}}}}},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"某":{"docs":{},"些":{"docs":{},"数":{"docs":{},"字":{"docs":{},"是":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"，":{"docs":{},"但":{"docs":{},"不":{"docs":{},"知":{"docs":{},"道":{"docs":{},"有":{"docs":{},"几":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"是":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"。":{"docs":{},"也":{"docs":{},"不":{"docs":{},"知":{"docs":{},"道":{"docs":{},"每":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"重":{"docs":{},"复":{"docs":{},"几":{"docs":{},"次":{"docs":{},"。":{"docs":{},"请":{"docs":{},"找":{"docs":{},"出":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"任":{"docs":{},"意":{"docs":{},"一":{"docs":{},"个":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"。":{"docs":{"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"轴":{"docs":{},"上":{"docs":{},"有":{"docs":{},"n":{"docs":{},"个":{"docs":{},"点":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"任":{"docs":{},"一":{"docs":{},"闭":{"docs":{},"区":{"docs":{},"间":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}}}}}}}}}}}}}},"值":{"docs":{},"的":{"docs":{},"整":{"docs":{},"数":{"docs":{},"次":{"docs":{},"方":{"docs":{"Bit/数值的整数次方.html":{"ref":"Bit/数值的整数次方.html","tf":0.010309278350515464}}}}}}}}},"这":{"docs":{},"里":{"docs":{},"要":{"docs":{},"特":{"docs":{},"别":{"docs":{},"注":{"docs":{},"意":{"docs":{},"~":{"docs":{},"返":{"docs":{},"回":{"docs":{},"任":{"docs":{},"意":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"，":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"d":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{"Array/找出数组中重复的数字.html":{"ref":"Array/找出数组中重复的数字.html","tf":0.005917159763313609}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"采":{"docs":{},"用":{"docs":{},"顺":{"docs":{},"次":{"docs":{},"移":{"docs":{},"动":{"docs":{"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.005813953488372093}}}}}}}}},"是":{"docs":{},"清":{"docs":{},"华":{"docs":{},"大":{"docs":{},"学":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"m":{"docs":{},"o":{"docs":{},"o":{"docs":{},"c":{"docs":{},"的":{"docs":{},"配":{"docs":{},"套":{"docs":{},"练":{"docs":{},"习":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"题":{"docs":{},"，":{"docs":{},"一":{"docs":{},"开":{"docs":{},"始":{"docs":{},"看":{"docs":{},"到":{"docs":{},"这":{"docs":{},"题":{"docs":{},"以":{"docs":{},"为":{"docs":{},"很":{"docs":{},"水":{"docs":{},"，":{"docs":{},"后":{"docs":{},"来":{"docs":{},"我":{"docs":{},"就":{"docs":{},"哭":{"docs":{},"了":{"docs":{},"。":{"docs":{},"。":{"docs":{},"。":{"docs":{},"终":{"docs":{},"究":{"docs":{},"是":{"docs":{},"我":{"docs":{},"太":{"docs":{},"弱":{"docs":{},"。":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"种":{"docs":{},"都":{"docs":{},"是":{"docs":{},"o":{"docs":{},"k":{"docs":{},"的":{"docs":{},"，":{"docs":{},"但":{"docs":{},"当":{"docs":{},"第":{"docs":{},"二":{"docs":{},"层":{"docs":{},"递":{"docs":{},"归":{"docs":{},"i":{"docs":{},"扫":{"docs":{},"到":{"docs":{},"的":{"docs":{},"是":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"\"":{"2":{"docs":{},"\"":{"docs":{},"，":{"docs":{},"情":{"docs":{},"况":{"docs":{},"就":{"docs":{},"不":{"docs":{},"一":{"docs":{},"样":{"docs":{},"了":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}},"旋":{"docs":{},"转":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"数":{"docs":{},"字":{"docs":{"Array/旋转数组的最小元素.html":{"ref":"Array/旋转数组的最小元素.html","tf":0.015151515151515152}}}}}}}}}}},"大":{"docs":{},"家":{"docs":{},"都":{"docs":{},"知":{"docs":{},"道":{"docs":{},"斐":{"docs":{},"波":{"docs":{},"那":{"docs":{},"契":{"docs":{},"数":{"docs":{},"列":{"docs":{},"，":{"docs":{},"现":{"docs":{},"在":{"docs":{},"要":{"docs":{},"求":{"docs":{},"输":{"docs":{},"入":{"docs":{},"一":{"docs":{},"个":{"docs":{},"整":{"docs":{},"数":{"docs":{},"n":{"docs":{},"，":{"docs":{},"请":{"docs":{},"你":{"docs":{},"输":{"docs":{},"出":{"docs":{},"斐":{"docs":{},"波":{"docs":{},"那":{"docs":{},"契":{"docs":{},"数":{"docs":{},"列":{"docs":{},"的":{"docs":{},"第":{"docs":{},"n":{"docs":{},"项":{"docs":{},"（":{"docs":{},"从":{"0":{"docs":{},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"第":{"0":{"docs":{},"项":{"docs":{},"为":{"0":{"docs":{},"）":{"docs":{},"。":{"docs":{},"n":{"docs":{"Array/斐波那契数列.html":{"ref":"Array/斐波那契数列.html","tf":0.047619047619047616}}}}}},"docs":{}}}},"docs":{}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"斐":{"docs":{},"波":{"docs":{},"那":{"docs":{},"契":{"docs":{},"数":{"docs":{},"列":{"docs":{"Array/斐波那契数列.html":{"ref":"Array/斐波那契数列.html","tf":0.047619047619047616}},"，":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"，":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{"Array/跳台阶.html":{"ref":"Array/跳台阶.html","tf":0.03125},"Array/变态跳台阶.html":{"ref":"Array/变态跳台阶.html","tf":0.02},"Array/矩阵覆盖.html":{"ref":"Array/矩阵覆盖.html","tf":0.0125}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}},"要":{"docs":{},"利":{"docs":{},"用":{"docs":{},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{},"从":{"docs":{},"前":{"docs":{},"算":{"docs":{},"到":{"docs":{},"后":{"docs":{},"，":{"docs":{},"利":{"docs":{},"用":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"前":{"docs":{},"面":{"docs":{},"已":{"docs":{},"经":{"docs":{},"算":{"docs":{},"过":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{"Array/斐波那契数列.html":{"ref":"Array/斐波那契数列.html","tf":0.047619047619047616}}}}}}}}}}}}}}}}}}}}}}}}}}}},"想":{"docs":{},"保":{"docs":{},"证":{"docs":{},"原":{"docs":{},"有":{"docs":{},"次":{"docs":{},"序":{"docs":{},"，":{"docs":{},"则":{"docs":{},"只":{"docs":{},"能":{"docs":{},"顺":{"docs":{},"次":{"docs":{},"移":{"docs":{},"动":{"docs":{},"或":{"docs":{},"相":{"docs":{},"邻":{"docs":{},"交":{"docs":{},"换":{"docs":{},"。":{"docs":{"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.005813953488372093}}}}}}}}}}}}}}}}}}}}}}},"排":{"docs":{},"除":{"docs":{},"l":{"docs":{},"o":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}},"递":{"docs":{},"归":{"docs":{},"从":{"docs":{},"后":{"docs":{},"算":{"docs":{},"到":{"docs":{},"前":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"2":{"docs":{},"的":{"docs":{},"n":{"docs":{},"次":{"docs":{},"方":{"docs":{},")":{"docs":{"Array/斐波那契数列.html":{"ref":"Array/斐波那契数列.html","tf":0.047619047619047616}}}}}}}},"docs":{}}}}}}}}}}}}},"版":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}}}},"先":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}}}},"后":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}}}}},"的":{"docs":{},"深":{"docs":{},"度":{"docs":{},"是":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"在":{"docs":{},"每":{"docs":{},"个":{"docs":{},"切":{"docs":{},"分":{"docs":{},"点":{"docs":{},"要":{"docs":{},"记":{"docs":{},"录":{"docs":{},"一":{"docs":{},"次":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"，":{"docs":{},"也":{"docs":{},"使":{"docs":{},"用":{"docs":{},"了":{"docs":{},"辅":{"docs":{},"助":{"docs":{},"空":{"docs":{},"间":{"docs":{},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"为":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"额":{"docs":{},"外":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"*":{"1":{"docs":{"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"深":{"docs":{},"度":{"docs":{},"为":{"docs":{},"n":{"docs":{},"，":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.005780346820809248}}}}}}}}}}}}}}}}}},"跳":{"docs":{},"台":{"docs":{},"阶":{"docs":{"Array/跳台阶.html":{"ref":"Array/跳台阶.html","tf":0.03125}}}}},"变":{"docs":{},"态":{"docs":{},"跳":{"docs":{},"台":{"docs":{},"阶":{"docs":{"Array/变态跳台阶.html":{"ref":"Array/变态跳台阶.html","tf":0.02}}}}}}},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"2":{"1":{"docs":{},"的":{"docs":{},"小":{"docs":{},"矩":{"docs":{},"形":{"docs":{},"横":{"docs":{},"着":{"docs":{},"或":{"docs":{},"者":{"docs":{},"竖":{"docs":{},"着":{"docs":{},"去":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"更":{"docs":{},"大":{"docs":{},"的":{"docs":{},"矩":{"docs":{},"形":{"docs":{},"。":{"docs":{},"请":{"docs":{},"问":{"docs":{},"用":{"docs":{},"n":{"docs":{},"个":{"2":{"1":{"docs":{},"的":{"docs":{},"小":{"docs":{},"矩":{"docs":{},"形":{"docs":{},"无":{"docs":{},"重":{"docs":{},"叠":{"docs":{},"地":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"一":{"docs":{},"个":{"2":{"docs":{},"*":{"docs":{},"n":{"docs":{},"的":{"docs":{},"大":{"docs":{},"矩":{"docs":{},"形":{"docs":{},"，":{"docs":{},"总":{"docs":{},"共":{"docs":{},"有":{"docs":{},"多":{"docs":{},"少":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"？":{"docs":{"Array/矩阵覆盖.html":{"ref":"Array/矩阵覆盖.html","tf":0.0125}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}},"矩":{"docs":{},"阵":{"docs":{},"覆":{"docs":{},"盖":{"docs":{"Array/矩阵覆盖.html":{"ref":"Array/矩阵覆盖.html","tf":0.0125}}}}}},"%":{"docs":{"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.011627906976744186}},"d":{"docs":{},"\"":{"docs":{},",":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}}}},"^":{"docs":{"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.01744186046511628},"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.010948905109489052}}},"使":{"docs":{},"得":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"奇":{"docs":{},"数":{"docs":{},"位":{"docs":{},"于":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"前":{"docs":{},"半":{"docs":{},"部":{"docs":{},"分":{"docs":{},"，":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"偶":{"docs":{},"数":{"docs":{},"位":{"docs":{},"于":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"后":{"docs":{},"半":{"docs":{},"部":{"docs":{},"分":{"docs":{},"，":{"docs":{"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.005813953488372093}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"另":{"docs":{},"外":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.005813953488372093}}}}}}}}},"向":{"docs":{},"后":{"docs":{},"移":{"docs":{},"必":{"docs":{},"须":{"docs":{},"从":{"docs":{},"后":{"docs":{},"往":{"docs":{},"前":{"docs":{},"移":{"docs":{},"动":{"docs":{},"，":{"docs":{},"不":{"docs":{},"然":{"docs":{},"前":{"docs":{},"面":{"docs":{},"的":{"docs":{},"向":{"docs":{},"后":{"docs":{},"移":{"docs":{},"会":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"后":{"docs":{},"面":{"docs":{},"的":{"docs":{},"值":{"docs":{"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.005813953488372093}}}}}}}}}}}}}}}}}}}}}}}}}}}},"左":{"docs":{},"走":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}}},"将":{"docs":{},"[":{"docs":{},"i":{"docs":{},",":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},",":{"docs":{},"j":{"docs":{"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.005813953488372093}}}}}}}}}},"起":{"docs":{},"始":{"docs":{},"结":{"docs":{},"点":{"docs":{},"放":{"docs":{},"入":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"。":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}}}}}}}}}},"并":{"docs":{},"保":{"docs":{},"证":{"docs":{},"奇":{"docs":{},"数":{"docs":{},"和":{"docs":{},"奇":{"docs":{},"数":{"docs":{},"，":{"docs":{},"偶":{"docs":{},"数":{"docs":{},"和":{"docs":{},"偶":{"docs":{},"数":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"相":{"docs":{},"对":{"docs":{},"位":{"docs":{},"置":{"docs":{},"不":{"docs":{},"变":{"docs":{},"。":{"docs":{"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.005813953488372093}}}}}}}}}}}}}}}}}}}}}}}}}},"终":{"docs":{},"止":{"docs":{},"条":{"docs":{},"件":{"docs":{},"：":{"docs":{},"j":{"docs":{},"向":{"docs":{},"后":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"没":{"docs":{},"有":{"docs":{},"再":{"docs":{},"找":{"docs":{},"到":{"docs":{},"奇":{"docs":{},"数":{"docs":{},"。":{"docs":{"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.005813953488372093}}}}}}}}}}}}}}}}}}}},"调":{"docs":{},"整":{"docs":{},"数":{"docs":{},"组":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"使":{"docs":{},"奇":{"docs":{},"数":{"docs":{},"位":{"docs":{},"于":{"docs":{},"偶":{"docs":{},"数":{"docs":{},"前":{"docs":{},"面":{"docs":{"Array/调整数组顺序使奇数位于偶数前面.html":{"ref":"Array/调整数组顺序使奇数位于偶数前面.html","tf":0.005813953488372093}}}}}}}}}}}}}}}}},"q":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}}}}}}}}}},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.01639344262295082}},"e":{"docs":{},"s":{"docs":{},")":{"docs":{},".":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}}}}},"y":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},";":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}}}}}}}},"u":{"docs":{},"e":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.01079136690647482},"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.005194805194805195},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.003080082135523614}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0025974025974025974},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0025974025974025974},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0025974025974025974},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0025974025974025974},"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076}}}}}}}}}}}}},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0036496350364963502}}}}}}}},"函":{"docs":{},"数":{"docs":{},"：":{"docs":{},"调":{"docs":{},"用":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"后":{"docs":{},"返":{"docs":{},"回":{"docs":{},"等":{"docs":{},"于":{"docs":{},"区":{"docs":{},"域":{"docs":{},"下":{"docs":{},"标":{"docs":{},"后":{"docs":{},"在":{"docs":{},"小":{"docs":{},"于":{"docs":{},"区":{"docs":{},"域":{"docs":{},"和":{"docs":{},"大":{"docs":{},"于":{"docs":{},"区":{"docs":{},"域":{"docs":{},"中":{"docs":{},"递":{"docs":{},"归":{"docs":{},"调":{"docs":{},"用":{"docs":{},"自":{"docs":{},"己":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"小":{"docs":{},"于":{"docs":{},"区":{"docs":{},"域":{"docs":{},"和":{"docs":{},"大":{"docs":{},"于":{"docs":{},"区":{"docs":{},"域":{"docs":{},"都":{"docs":{},"只":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"。":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"函":{"docs":{},"数":{"docs":{},"：":{"docs":{},"调":{"docs":{},"用":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"实":{"docs":{},"现":{"docs":{},"快":{"docs":{},"排":{"docs":{},"。":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"内":{"docs":{},"存":{"docs":{},"：":{"2":{"5":{"6":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}},"docs":{}},"docs":{}},"docs":{}}}},"各":{"docs":{},"点":{"docs":{},"的":{"docs":{},"坐":{"docs":{},"标":{"docs":{},"、":{"docs":{},"查":{"docs":{},"询":{"docs":{},"区":{"docs":{},"间":{"docs":{},"的":{"docs":{},"边":{"docs":{},"界":{"docs":{},"a":{"docs":{},"、":{"docs":{},"b":{"docs":{},"，":{"docs":{},"均":{"docs":{},"为":{"docs":{},"不":{"docs":{},"超":{"docs":{},"过":{"1":{"0":{"docs":{},"^":{"7":{"docs":{},"的":{"docs":{},"非":{"docs":{},"负":{"docs":{},"整":{"docs":{},"数":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}}}}}},"docs":{}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}},"互":{"docs":{},"异":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}}}}}}},"循":{"docs":{},"环":{"docs":{},"结":{"docs":{},"束":{"docs":{},"时":{"docs":{},"，":{"docs":{},"l":{"docs":{},"o":{"docs":{},"为":{"docs":{},">":{"docs":{},"=":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"下":{"docs":{},"标":{"docs":{},"，":{"docs":{},"故":{"docs":{},"l":{"docs":{},"o":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00546448087431694}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"下":{"docs":{},"标":{"docs":{},"，":{"docs":{},"故":{"docs":{},"l":{"docs":{},"o":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00546448087431694}}}}}}}}}}}}}}}}}}}}}}}}}}},"思":{"docs":{},"路":{"docs":{},"是":{"docs":{},"利":{"docs":{},"用":{"docs":{},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"改":{"docs":{},"进":{"docs":{},"，":{"docs":{},"在":{"docs":{},"有":{"docs":{},"序":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"找":{"docs":{},"到":{"docs":{},"≥":{"docs":{},"a":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"和":{"docs":{},"≤":{"docs":{},"b":{"docs":{},"的":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"：":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0036496350364963502}},"准":{"docs":{},"备":{"docs":{},"一":{"docs":{},"个":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"变":{"docs":{},"量":{"docs":{},"一":{"docs":{},"个":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"变":{"docs":{},"量":{"docs":{},"，":{"docs":{},"一":{"docs":{},"开":{"docs":{},"始":{"docs":{},"都":{"docs":{},"指":{"docs":{},"向":{"0":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"再":{"docs":{},"准":{"docs":{},"备":{"docs":{},"一":{"docs":{},"个":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"变":{"docs":{},"量":{"docs":{},"约":{"docs":{},"束":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"和":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"的":{"docs":{},"行":{"docs":{},"为":{"docs":{},"，":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"表":{"docs":{},"示":{"docs":{},"队":{"docs":{},"列":{"docs":{},"已":{"docs":{},"有":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{},"。":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"和":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"无":{"docs":{},"直":{"docs":{},"接":{"docs":{},"关":{"docs":{},"系":{"docs":{},"（":{"docs":{},"解":{"docs":{},"耦":{"docs":{},"）":{"docs":{},"，":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"或":{"docs":{},"者":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"都":{"docs":{},"是":{"docs":{},"每":{"docs":{},"次":{"docs":{},"和":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"比":{"docs":{},"较":{"docs":{},"是":{"docs":{},"否":{"docs":{},"越":{"docs":{},"界":{"docs":{},"。":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"代":{"docs":{},"表":{"docs":{},"当":{"docs":{},"要":{"docs":{},"加":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"我":{"docs":{},"把":{"docs":{},"新":{"docs":{},"来":{"docs":{},"的":{"docs":{},"数":{"docs":{},"放":{"docs":{},"在":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"代":{"docs":{},"表":{"docs":{},"当":{"docs":{},"用":{"docs":{},"户":{"docs":{},"让":{"docs":{},"我":{"docs":{},"取":{"docs":{},"出":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"我":{"docs":{},"把":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"位":{"docs":{},"置":{"docs":{},"的":{"docs":{},"数":{"docs":{},"取":{"docs":{},"出":{"docs":{},"给":{"docs":{},"用":{"docs":{},"户":{"docs":{},"，":{"docs":{},"类":{"docs":{},"似":{"docs":{},"于":{"docs":{},"加":{"docs":{},"数":{"docs":{},"队":{"docs":{},"尾":{"docs":{},"排":{"docs":{},"队":{"docs":{},"打":{"docs":{},"饭":{"docs":{},"，":{"docs":{},"取":{"docs":{},"数":{"docs":{},"队":{"docs":{},"头":{"docs":{},"打":{"docs":{},"完":{"docs":{},"饭":{"docs":{},"走":{"docs":{},"人":{"docs":{},"。":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"一":{"docs":{},"旦":{"docs":{},"到":{"docs":{},"底":{"docs":{},"就":{"docs":{},"返":{"docs":{},"回":{"docs":{},"开":{"docs":{},"头":{"docs":{},"，":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"一":{"docs":{},"直":{"docs":{},"在":{"docs":{},"追":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"，":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.0035971223021582736}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"栈":{"docs":{},"顶":{"docs":{},"指":{"docs":{},"针":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"，":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"设":{"docs":{},"置":{"docs":{},"为":{"docs":{},"栈":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"为":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"。":{"docs":{},"当":{"docs":{},"要":{"docs":{},"加":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"的":{"docs":{},"含":{"docs":{},"义":{"docs":{},"为":{"docs":{},"如":{"docs":{},"果":{"docs":{},"新":{"docs":{},"来":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"我":{"docs":{},"把":{"docs":{},"新":{"docs":{},"来":{"docs":{},"的":{"docs":{},"数":{"docs":{},"放":{"docs":{},"在":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"位":{"docs":{},"置":{"docs":{},"。":{"docs":{},"当":{"docs":{},"用":{"docs":{},"户":{"docs":{},"让":{"docs":{},"我":{"docs":{},"弹":{"docs":{},"出":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"我":{"docs":{},"弹":{"docs":{},"出":{"docs":{},"的":{"docs":{},"数":{"docs":{},"是":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"的":{"docs":{},"前":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"（":{"docs":{},"前":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"位":{"docs":{},"置":{"docs":{},"处":{"docs":{},"于":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"下":{"docs":{},"面":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"假":{"docs":{},"设":{"docs":{},"数":{"docs":{},"组":{"docs":{},"是":{"docs":{},"竖":{"docs":{},"直":{"docs":{},"排":{"docs":{},"列":{"docs":{},"的":{"docs":{},"，":{"docs":{},"最":{"docs":{},"底":{"docs":{},"下":{"docs":{},"是":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},"）":{"docs":{},"。":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.0035971223021582736}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"两":{"docs":{},"个":{"docs":{},"队":{"docs":{},"列":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"队":{"docs":{},"列":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{},"队":{"docs":{},"列":{"docs":{},"，":{"docs":{},"压":{"docs":{},"数":{"docs":{},"的":{"docs":{},"话":{"docs":{},"压":{"docs":{},"入":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"队":{"docs":{},"列":{"docs":{},"，":{"docs":{},"弹":{"docs":{},"出":{"docs":{},"数":{"docs":{},"将":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"的":{"docs":{},"数":{"docs":{},"除":{"docs":{},"了":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"之":{"docs":{},"外":{"docs":{},"其":{"docs":{},"他":{"docs":{},"的":{"docs":{},"压":{"docs":{},"入":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{},"队":{"docs":{},"列":{"docs":{},"，":{"docs":{},"将":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"返":{"docs":{},"回":{"docs":{},"用":{"docs":{},"户":{"docs":{},"，":{"docs":{},"再":{"docs":{},"将":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"和":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{},"引":{"docs":{},"用":{"docs":{},"互":{"docs":{},"换":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.0035971223021582736}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"用":{"docs":{},"栈":{"docs":{},"实":{"docs":{},"现":{"docs":{},"队":{"docs":{},"列":{"docs":{},"结":{"docs":{},"构":{"docs":{},"，":{"docs":{},"准":{"docs":{},"备":{"docs":{},"两":{"docs":{},"个":{"docs":{},"栈":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"栈":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"栈":{"docs":{},"，":{"docs":{},"加":{"docs":{},"数":{"docs":{},"据":{"docs":{},"入":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"栈":{"docs":{},"，":{"docs":{},"取":{"docs":{},"数":{"docs":{},"据":{"docs":{},"从":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"栈":{"docs":{},"中":{"docs":{},"拿":{"docs":{},"。":{"docs":{},"总":{"docs":{},"体":{"docs":{},"思":{"docs":{},"路":{"docs":{},"是":{"docs":{},"进":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"倒":{"docs":{},"入":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"栈":{"docs":{},"中":{"docs":{},"，":{"docs":{},"两":{"docs":{},"次":{"docs":{},"逆":{"docs":{},"序":{"docs":{},"等":{"docs":{},"于":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"。":{"docs":{},"倒":{"docs":{},"的":{"docs":{},"两":{"docs":{},"个":{"docs":{},"限":{"docs":{},"制":{"docs":{},"：":{"docs":{},"（":{"1":{"docs":{},"）":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.0035971223021582736}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"弹":{"docs":{},"出":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"作":{"docs":{},"为":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"打":{"docs":{},"印":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"对":{"docs":{},"于":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"有":{"docs":{},"右":{"docs":{},"先":{"docs":{},"压":{"docs":{},"右":{"docs":{},"，":{"docs":{},"有":{"docs":{},"左":{"docs":{},"后":{"docs":{},"压":{"docs":{},"左":{"docs":{},"。":{"docs":{},"先":{"docs":{},"压":{"docs":{},"右":{"docs":{},"后":{"docs":{},"压":{"docs":{},"左":{"docs":{},"，":{"docs":{},"弹":{"docs":{},"出":{"docs":{},"为":{"docs":{},"先":{"docs":{},"弹":{"docs":{},"左":{"docs":{},"后":{"docs":{},"弹":{"docs":{},"右":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"不":{"docs":{},"为":{"docs":{},"空":{"docs":{},"或":{"docs":{},"者":{"docs":{},"栈":{"docs":{},"不":{"docs":{},"为":{"docs":{},"空":{"docs":{},"继":{"docs":{},"续":{"docs":{},"w":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"（":{"docs":{},"只":{"docs":{},"有":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"栈":{"docs":{},"也":{"docs":{},"为":{"docs":{},"空":{"docs":{},"才":{"docs":{},"退":{"docs":{},"出":{"docs":{},"循":{"docs":{},"环":{"docs":{},"）":{"docs":{},"：":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"不":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"压":{"docs":{},"入":{"docs":{},"栈":{"docs":{},"，":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"往":{"docs":{},"左":{"docs":{},"跑":{"docs":{},"（":{"docs":{},"左":{"docs":{},"边":{"docs":{},"界":{"docs":{},"一":{"docs":{},"压":{"docs":{},"压":{"docs":{},"一":{"docs":{},"溜":{"docs":{},"）":{"docs":{},"；":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"从":{"docs":{},"栈":{"docs":{},"中":{"docs":{},"拿":{"docs":{},"一":{"docs":{},"个":{"docs":{},"打":{"docs":{},"印":{"docs":{},"，":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"向":{"docs":{},"右":{"docs":{},"跑":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"先":{"docs":{},"对":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"进":{"docs":{},"行":{"docs":{},"后":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"再":{"docs":{},"对":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"进":{"docs":{},"行":{"docs":{},"后":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"再":{"docs":{},"打":{"docs":{},"印":{"docs":{},"自":{"docs":{},"己":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"打":{"docs":{},"印":{"docs":{},"自":{"docs":{},"己":{"docs":{},"，":{"docs":{},"再":{"docs":{},"对":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"进":{"docs":{},"行":{"docs":{},"先":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"再":{"docs":{},"对":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"进":{"docs":{},"行":{"docs":{},"先":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"进":{"docs":{},"先":{"docs":{},"出":{"docs":{},"，":{"docs":{},"用":{"docs":{},"队":{"docs":{},"列":{"docs":{},"实":{"docs":{},"现":{"docs":{},"。":{"docs":{},"弹":{"docs":{},"一":{"docs":{},"个":{"docs":{},"出":{"docs":{},"来":{"docs":{},"并":{"docs":{},"打":{"docs":{},"印":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"把":{"docs":{},"分":{"docs":{},"别":{"docs":{},"左":{"docs":{},"儿":{"docs":{},"子":{"docs":{},"右":{"docs":{},"儿":{"docs":{},"子":{"docs":{},"加":{"docs":{},"进":{"docs":{},"去":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"后":{"docs":{},"序":{"docs":{},"：":{"docs":{},"左":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}}}},"对":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"进":{"docs":{},"行":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"打":{"docs":{},"印":{"docs":{},"自":{"docs":{},"己":{"docs":{},"，":{"docs":{},"对":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"进":{"docs":{},"行":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}}}}}}}}}}}}}}}}}}}}}}}}}},"两":{"docs":{},"两":{"docs":{},"比":{"docs":{},"较":{"docs":{},"，":{"docs":{},"大":{"docs":{},"的":{"docs":{},"沉":{"docs":{},"底":{"docs":{},"。":{"docs":{},"i":{"docs":{},"是":{"docs":{},"轮":{"docs":{},"数":{"docs":{},"，":{"docs":{},"在":{"docs":{},"进":{"docs":{},"行":{"docs":{},"第":{"docs":{},"i":{"docs":{},"轮":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"确":{"docs":{},"定":{"docs":{},"了":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"i":{"docs":{},"个":{"docs":{},"值":{"docs":{},"；":{"docs":{},"如":{"docs":{},"果":{"docs":{},"一":{"docs":{},"轮":{"docs":{},"下":{"docs":{},"来":{"docs":{},"都":{"docs":{},"没":{"docs":{},"有":{"docs":{},"交":{"docs":{},"换":{"docs":{},"证":{"docs":{},"明":{"docs":{},"已":{"docs":{},"经":{"docs":{},"有":{"docs":{},"序":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"像":{"docs":{},"小":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"插":{"docs":{},"扑":{"docs":{},"克":{"docs":{},"牌":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"要":{"docs":{},"一":{"docs":{},"张":{"docs":{},"张":{"docs":{},"比":{"docs":{},"，":{"docs":{},"把":{"docs":{},"第":{"1":{"docs":{},"张":{"docs":{},"和":{"docs":{},"第":{"0":{"docs":{},"张":{"docs":{},"比":{"docs":{},"较":{"docs":{},"，":{"docs":{},"把":{"docs":{},"第":{"2":{"docs":{},"张":{"docs":{},"和":{"docs":{},"[":{"0":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{},"张":{"docs":{},"比":{"docs":{},"较":{"docs":{},"，":{"docs":{},"从":{"docs":{},"后":{"docs":{},"往":{"docs":{},"前":{"docs":{},"把":{"docs":{},"第":{"docs":{},"i":{"docs":{},"张":{"docs":{},"牌":{"docs":{},"和":{"docs":{},"第":{"docs":{},"i":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}}}},"docs":{}}}}}}}},"docs":{}}}}},"docs":{}}}}}}}}}}}}}}}}}}}},"分":{"docs":{},"治":{"docs":{},"后":{"docs":{},"从":{"docs":{},"下":{"docs":{},"往":{"docs":{},"上":{"docs":{},"两":{"docs":{},"两":{"docs":{},"归":{"docs":{},"并":{"docs":{},"，":{"docs":{},"借":{"docs":{},"助":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"分":{"docs":{},"别":{"docs":{},"将":{"docs":{},"左":{"docs":{},"边":{"docs":{},"和":{"docs":{},"右":{"docs":{},"边":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"，":{"docs":{},"再":{"docs":{},"将":{"docs":{},"两":{"docs":{},"边":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"起":{"docs":{},"来":{"docs":{},"。":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"遍":{"docs":{},"历":{"docs":{},"[":{"0":{"docs":{},",":{"docs":{},"n":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}},"docs":{}}}}}}},"描":{"docs":{},"述":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}},"样":{"docs":{},"例":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}},"然":{"docs":{},"后":{"docs":{},"改":{"docs":{},"成":{"docs":{},"了":{"docs":{},"我":{"docs":{},"非":{"docs":{},"常":{"docs":{},"不":{"docs":{},"愿":{"docs":{},"意":{"docs":{},"写":{"docs":{},"的":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"docs":{},"语":{"docs":{},"言":{"docs":{},"的":{"docs":{},"版":{"docs":{},"本":{"docs":{},"，":{"docs":{},"由":{"docs":{},"此":{"docs":{},"也":{"docs":{},"是":{"docs":{},"发":{"docs":{},"现":{"docs":{},"了":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"docs":{},"的":{"docs":{},"强":{"docs":{},"大":{"docs":{},"，":{"docs":{},"做":{"docs":{},"人":{"docs":{},"还":{"docs":{},"是":{"docs":{},"不":{"docs":{},"能":{"docs":{},"偷":{"docs":{},"懒":{"docs":{},"啊":{"docs":{},"。":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"docs":{},"虽":{"docs":{},"然":{"docs":{},"难":{"docs":{},"用":{"docs":{},"，":{"docs":{},"指":{"docs":{},"针":{"docs":{},"引":{"docs":{},"用":{"docs":{},"傻":{"docs":{},"傻":{"docs":{},"分":{"docs":{},"不":{"docs":{},"清":{"docs":{},"楚":{"docs":{},"，":{"docs":{},"而":{"docs":{},"且":{"docs":{},"s":{"docs":{},"t":{"docs":{},"l":{"docs":{},"在":{"docs":{},"很":{"docs":{},"多":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"会":{"docs":{},"被":{"docs":{},"禁":{"docs":{},"用":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"无":{"docs":{},"奈":{"docs":{},"人":{"docs":{},"家":{"docs":{},"处":{"docs":{},"在":{"docs":{},"底":{"docs":{},"层":{"docs":{},"效":{"docs":{},"率":{"docs":{},"那":{"docs":{},"叫":{"docs":{},"一":{"docs":{},"个":{"docs":{},"高":{"docs":{},"。":{"docs":{},"没":{"docs":{},"有":{"docs":{},"优":{"docs":{},"化":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"就":{"docs":{},"拿":{"docs":{},"了":{"7":{"5":{"docs":{},"分":{"docs":{},"，":{"docs":{},"把":{"docs":{},"c":{"docs":{},"i":{"docs":{},"n":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"改":{"docs":{},"成":{"docs":{},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"f":{"docs":{},",":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"f":{"docs":{},"之":{"docs":{},"后":{"docs":{},"就":{"docs":{},"能":{"docs":{},"轻":{"docs":{},"松":{"docs":{},"拿":{"docs":{},"满":{"docs":{},"分":{"docs":{},"了":{"docs":{},"。":{"docs":{},"看":{"docs":{},"来":{"docs":{},"这":{"docs":{},"辈":{"docs":{},"子":{"docs":{},"是":{"docs":{},"套":{"docs":{},"不":{"docs":{},"过":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"docs":{},"的":{"docs":{},"魔":{"docs":{},"掌":{"docs":{},"了":{"docs":{},"。":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"于":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"有":{"docs":{},"右":{"docs":{},"先":{"docs":{},"压":{"docs":{},"右":{"docs":{},"，":{"docs":{},"有":{"docs":{},"左":{"docs":{},"后":{"docs":{},"压":{"docs":{},"左":{"docs":{},"。":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0025974025974025974}}}}}}}}}}}}}}}}}}}}}},"若":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00546448087431694},"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876}}}}}}}}},"范":{"docs":{},"围":{"docs":{},"查":{"docs":{},"询":{"docs":{},"(":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},")":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":3.333333333333333}}}}}}}}}}}}},"见":{"docs":{},"英":{"docs":{},"文":{"docs":{},"题":{"docs":{},"面":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}}}}},"限":{"docs":{},"制":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}},"首":{"docs":{},"先":{"docs":{},"我":{"docs":{},"是":{"docs":{},"用":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"写":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"的":{"docs":{},"版":{"docs":{},"本":{"docs":{},"，":{"docs":{},"结":{"docs":{},"果":{"docs":{},"发":{"docs":{},"现":{"docs":{},"纳":{"docs":{},"尼":{"docs":{},"？":{"docs":{},"连":{"docs":{},"一":{"docs":{},"半":{"docs":{},"的":{"docs":{},"测":{"docs":{},"试":{"docs":{},"用":{"docs":{},"例":{"docs":{},"都":{"docs":{},"通":{"docs":{},"不":{"docs":{},"过":{"docs":{},"就":{"docs":{},"会":{"docs":{},"超":{"docs":{},"时":{"docs":{},"。":{"docs":{},"然":{"docs":{},"后":{"docs":{},"写":{"docs":{},"了":{"docs":{},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{},"的":{"docs":{},"版":{"docs":{},"本":{"docs":{},"，":{"docs":{},"还":{"docs":{},"是":{"docs":{},"只":{"docs":{},"能":{"docs":{},"得":{"6":{"0":{"docs":{},"分":{"docs":{},"，":{"docs":{},"这":{"docs":{},"可":{"docs":{},"是":{"docs":{},"个":{"docs":{},"o":{"docs":{},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{},"的":{"docs":{},"算":{"docs":{},"法":{"docs":{},"呀":{"docs":{},"。":{"docs":{},"平":{"docs":{},"时":{"docs":{},"写":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"限":{"docs":{},"制":{"docs":{},"太":{"docs":{},"松":{"docs":{},"了":{"docs":{},"，":{"docs":{},"都":{"docs":{},"几":{"docs":{},"乎":{"docs":{},"不":{"docs":{},"会":{"docs":{},"碰":{"docs":{},"到":{"docs":{},"超":{"docs":{},"时":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"。":{"docs":{},"优":{"docs":{},"化":{"docs":{},"之":{"docs":{},"后":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"的":{"docs":{},"版":{"docs":{},"本":{"docs":{},"最":{"docs":{},"高":{"docs":{},"得":{"docs":{},"了":{"8":{"0":{"docs":{},"分":{"docs":{},"。":{"docs":{"Array/范围查询.html":{"ref":"Array/范围查询.html","tf":0.00273224043715847}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"要":{"docs":{},"明":{"docs":{},"白":{"docs":{},"i":{"docs":{},"作":{"docs":{},"为":{"docs":{},"数":{"docs":{},"组":{"docs":{},"内":{"docs":{},"序":{"docs":{},"号":{"docs":{},"，":{"docs":{},"i":{"docs":{},"是":{"docs":{},"唯":{"docs":{},"一":{"docs":{},"的":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374}}}}}}}}}}}}}}}}}}},"选":{"docs":{},"择":{"docs":{},"一":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"作":{"docs":{},"为":{"docs":{},"起":{"docs":{},"始":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"并":{"docs":{},"将":{"docs":{},"其":{"docs":{},"染":{"docs":{},"成":{"docs":{},"灰":{"docs":{},"色":{"docs":{},"，":{"docs":{},"其":{"docs":{},"余":{"docs":{},"结":{"docs":{},"点":{"docs":{},"为":{"docs":{},"白":{"docs":{},"色":{"docs":{},"。":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"【":{"1":{"docs":{},".":{"1":{"docs":{},"的":{"docs":{},"改":{"docs":{},"进":{"docs":{},"】":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938}}}}}}},"2":{"docs":{},"的":{"docs":{},"改":{"docs":{},"进":{"docs":{},"：":{"1":{"docs":{},".":{"2":{"docs":{},"最":{"docs":{},"后":{"docs":{},"的":{"docs":{},"返":{"docs":{},"回":{"docs":{},"加":{"docs":{},"一":{"docs":{},"个":{"docs":{},"判":{"docs":{},"断":{"docs":{},"条":{"docs":{},"件":{"docs":{},"】":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876}}}}}}}}}}}}}}},"的":{"docs":{},"前":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"就":{"docs":{},"是":{"1":{"docs":{},".":{"5":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"】":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938}}}}}}},"docs":{}}},"docs":{}}}}}}}}},"docs":{}}},"docs":{}}}}}},"3":{"docs":{},"的":{"docs":{},"改":{"docs":{},"进":{"docs":{},"：":{"1":{"docs":{},".":{"3":{"docs":{},"最":{"docs":{},"后":{"docs":{},"的":{"docs":{},"返":{"docs":{},"回":{"docs":{},"加":{"docs":{},"一":{"docs":{},"个":{"docs":{},"判":{"docs":{},"断":{"docs":{},"条":{"docs":{},"件":{"docs":{},"】":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938}}}}}}}}}}}}}}},"的":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"就":{"docs":{},"是":{"1":{"docs":{},".":{"4":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"】":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876}}}}}}},"docs":{}}},"docs":{}}}}}}}}},"docs":{}}},"docs":{}}}}}},"5":{"docs":{},"和":{"1":{"docs":{},".":{"6":{"docs":{},"的":{"docs":{},"改":{"docs":{},"进":{"docs":{},"】":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876}}}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"有":{"docs":{},"序":{"docs":{},"数":{"docs":{},"组":{"docs":{},"断":{"docs":{},"成":{"docs":{},"两":{"docs":{},"节":{"docs":{},"互":{"docs":{},"换":{"docs":{},"位":{"docs":{},"置":{"docs":{},"查":{"docs":{},"找":{"docs":{},"最":{"docs":{},"小":{"docs":{},"值":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938}}}}}}}}}}}}}}}}}}}}},"右":{"docs":{},"先":{"docs":{},"压":{"docs":{},"右":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0025974025974025974}}}}}},"左":{"docs":{},"后":{"docs":{},"压":{"docs":{},"左":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0025974025974025974}}}}}}},"未":{"docs":{},"找":{"docs":{},"到":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0025220680958385876}}}}},"汇":{"docs":{},"总":{"docs":{},"和":{"docs":{},"测":{"docs":{},"试":{"docs":{},"函":{"docs":{},"数":{"docs":{"Array/二分查找的各种变形总结.html":{"ref":"Array/二分查找的各种变形总结.html","tf":0.0012610340479192938}}}}}}}}},"'":{"0":{"docs":{},"'":{"docs":{},")":{"docs":{},";":{"docs":{"String/替换空格.html":{"ref":"String/替换空格.html","tf":0.010416666666666666}}}}}},"2":{"docs":{},"'":{"docs":{},")":{"docs":{},";":{"docs":{"String/替换空格.html":{"ref":"String/替换空格.html","tf":0.010416666666666666}}}}}},"docs":{"String/替换空格.html":{"ref":"String/替换空格.html","tf":0.010416666666666666}},"%":{"docs":{},"'":{"docs":{},")":{"docs":{},";":{"docs":{"String/替换空格.html":{"ref":"String/替换空格.html","tf":0.010416666666666666}}}}}},")":{"docs":{"String/替换空格.html":{"ref":"String/替换空格.html","tf":0.010416666666666666}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{},"'":{"docs":{"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.007692307692307693}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"'":{"docs":{"dp/leetcode62.html":{"ref":"dp/leetcode62.html","tf":0.007692307692307693}}}}}}}},"a":{"docs":{},"'":{"docs":{},"，":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"为":{"docs":{},"这":{"docs":{},"个":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"String/替换空格.html":{"ref":"String/替换空格.html","tf":0.010416666666666666}}},"替":{"docs":{},"换":{"docs":{},"空":{"docs":{},"格":{"docs":{"String/替换空格.html":{"ref":"String/替换空格.html","tf":0.010416666666666666}}}}}},"请":{"docs":{},"实":{"docs":{},"现":{"docs":{},"一":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"将":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"中":{"docs":{},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"空":{"docs":{},"格":{"docs":{},"替":{"docs":{},"换":{"docs":{},"成":{"docs":{},"“":{"docs":{},"%":{"2":{"0":{"docs":{},"”":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"，":{"docs":{},"当":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"为":{"docs":{},"w":{"docs":{},"e":{"docs":{"String/替换空格.html":{"ref":"String/替换空格.html","tf":0.010416666666666666}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}},"栈":{"docs":{},"和":{"docs":{},"队":{"docs":{},"列":{"docs":{},"的":{"docs":{},"转":{"docs":{},"换":{"docs":{},"/":{"docs":{},"用":{"docs":{},"数":{"docs":{},"组":{"docs":{},"实":{"docs":{},"现":{"docs":{},"栈":{"docs":{},"和":{"docs":{},"队":{"docs":{},"列":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":10}}}}}}}}}}}}}}}}}},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"，":{"docs":{},"也":{"docs":{},"是":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.0035971223021582736}}}}}}}}}}}}}},"（":{"2":{"docs":{},"）":{"docs":{"Stack-Queue/栈和队列常用算法总结.html":{"ref":"Stack-Queue/栈和队列常用算法总结.html","tf":0.0035971223021582736}}}},"docs":{}},"倒":{"docs":{},"的":{"docs":{},"两":{"docs":{},"个":{"docs":{},"限":{"docs":{},"制":{"docs":{},"：":{"docs":{"Stack-Queue/用两个栈实现队列.html":{"ref":"Stack-Queue/用两个栈实现队列.html","tf":0.013513513513513514}}}}}}}}},"准":{"docs":{},"备":{"docs":{},"两":{"docs":{},"个":{"docs":{},"栈":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"栈":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"栈":{"docs":{"Stack-Queue/用两个栈实现队列.html":{"ref":"Stack-Queue/用两个栈实现队列.html","tf":0.013513513513513514}}}}}}}}}}}}}}}}}}}}}},"总":{"docs":{},"体":{"docs":{},"思":{"docs":{},"路":{"docs":{},"是":{"docs":{},"进":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"倒":{"docs":{},"入":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"栈":{"docs":{},"中":{"docs":{},"，":{"docs":{},"两":{"docs":{},"次":{"docs":{},"逆":{"docs":{},"序":{"docs":{},"等":{"docs":{},"于":{"docs":{},"顺":{"docs":{},"序":{"docs":{"Stack-Queue/用两个栈实现队列.html":{"ref":"Stack-Queue/用两个栈实现队列.html","tf":0.013513513513513514}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"为":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"类":{"docs":{},"型":{"docs":{},"。":{"docs":{"Stack-Queue/用两个栈实现队列.html":{"ref":"Stack-Queue/用两个栈实现队列.html","tf":0.013513513513513514}}}}}}}}}}}}}}},"中":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.005194805194805195}},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}}},"，":{"docs":{},"通":{"docs":{},"过":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0025974025974025974}}}}}},"优":{"docs":{},"化":{"docs":{},"：":{"docs":{},"其":{"docs":{},"实":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"栈":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"存":{"docs":{},"数":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"了":{"docs":{},"，":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"存":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"先":{"docs":{},"级":{"docs":{},"队":{"docs":{},"列":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}},"压":{"docs":{},"栈":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}},"右":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.00909090909090909},"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}},"(":{"docs":{},"先":{"docs":{},"序":{"docs":{},"：":{"docs":{},"用":{"docs":{},"栈":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"弹":{"docs":{},"出":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"作":{"docs":{},"为":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"打":{"docs":{},"印":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"对":{"docs":{},"于":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"有":{"docs":{},"右":{"docs":{},"先":{"docs":{},"压":{"docs":{},"右":{"docs":{},"，":{"docs":{},"有":{"docs":{},"左":{"docs":{},"后":{"docs":{},"压":{"docs":{},"左":{"docs":{},"。":{"docs":{},"先":{"docs":{},"压":{"docs":{},"右":{"docs":{},"后":{"docs":{},"压":{"docs":{},"左":{"docs":{},"，":{"docs":{},"弹":{"docs":{},"出":{"docs":{},"为":{"docs":{},"先":{"docs":{},"弹":{"docs":{},"左":{"docs":{},"后":{"docs":{},"弹":{"docs":{},"右":{"docs":{},")":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"值":{"docs":{},"给":{"docs":{},"下":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}}}}},"完":{"docs":{},"整":{"docs":{},"的":{"docs":{},"程":{"docs":{},"序":{"docs":{},"：":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}}}}},"全":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}},"是":{"docs":{},"一":{"docs":{},"种":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"结":{"docs":{},"构":{"docs":{},"，":{"docs":{},"实":{"docs":{},"际":{"docs":{},"存":{"docs":{},"储":{"docs":{},"在":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"，":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"的":{"docs":{},"左":{"docs":{},"节":{"docs":{},"点":{"docs":{},"是":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"2":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"层":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}}}},"弹":{"docs":{},"出":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}}}}}},"根":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}},"非":{"docs":{},"递":{"docs":{},"归":{"docs":{},"版":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}}}},"先":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}}}},"后":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{"Tree/二叉树遍历算法总结.html":{"ref":"Tree/二叉树遍历算法总结.html","tf":0.0012987012987012987}}}}}}}}}},"假":{"docs":{},"设":{"docs":{},"输":{"docs":{},"入":{"docs":{},"的":{"docs":{},"前":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"和":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"中":{"docs":{},"都":{"docs":{},"不":{"docs":{},"含":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"。":{"docs":{"Tree/重建二叉树.html":{"ref":"Tree/重建二叉树.html","tf":0.022222222222222223}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"重":{"docs":{},"建":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{"Tree/重建二叉树.html":{"ref":"Tree/重建二叉树.html","tf":0.022222222222222223}}}}}}},"\\":{"docs":{"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.014492753623188406}}},"所":{"docs":{},"以":{"docs":{},"先":{"docs":{},"序":{"docs":{},"中":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"是":{"docs":{},"[":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"总":{"docs":{},"节":{"docs":{},"点":{"docs":{},"个":{"docs":{},"数":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"Tree/leetcode105.html":{"ref":"Tree/leetcode105.html","tf":0.007246376811594203}}}}}}}}}}}}}}}}}}}}},"当":{"docs":{},"i":{"docs":{},"=":{"2":{"docs":{},"，":{"docs":{},"第":{"docs":{},"二":{"docs":{},"层":{"docs":{},"递":{"docs":{},"归":{"docs":{},"判":{"docs":{},"断":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"!":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"就":{"docs":{},"变":{"docs":{},"成":{"docs":{},"了":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},"，":{"docs":{},"不":{"docs":{},"会":{"docs":{},"再":{"docs":{},"继":{"docs":{},"续":{"docs":{},"递":{"docs":{},"归":{"docs":{},"下":{"docs":{},"去":{"docs":{},"，":{"docs":{},"跳":{"docs":{},"出":{"docs":{},"循":{"docs":{},"环":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}},"docs":{}}}}}},"上":{"docs":{},"一":{"docs":{},"层":{"docs":{},"继":{"docs":{},"续":{"docs":{},"做":{"docs":{},"如":{"docs":{},"上":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"知":{"docs":{},"道":{"docs":{},"所":{"docs":{},"有":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"都":{"docs":{},"访":{"docs":{},"问":{"docs":{},"过":{"docs":{},"。":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"值":{"docs":{},"给":{"docs":{},"右":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}}}}},"为":{"0":{"docs":{},"表":{"docs":{},"示":{"docs":{},"没":{"docs":{},"有":{"docs":{},"从":{"docs":{},"i":{"docs":{},"到":{"docs":{},"j":{"docs":{},"的":{"docs":{},"有":{"docs":{},"向":{"docs":{},"边":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076}}}}}}}}}}}}}}},"docs":{}},"五":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076}}}}}},"依":{"docs":{},"次":{"docs":{},"访":{"docs":{},"问":{"docs":{},"过":{"docs":{},"顶":{"docs":{},"点":{"1":{"docs":{},",":{"2":{"docs":{},",":{"3":{"docs":{},"后":{"docs":{},"，":{"docs":{},"终":{"docs":{},"止":{"docs":{},"于":{"docs":{},"顶":{"docs":{},"点":{"3":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}},"docs":{}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}}}}}}}},"全":{"docs":{},"部":{"docs":{},"会":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"为":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076}}}}}}}}}}}}},"回":{"docs":{},"溯":{"docs":{},"到":{"docs":{},"这":{"docs":{},"个":{"docs":{},"涂":{"docs":{},"黑":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"的":{"docs":{},"上":{"docs":{},"一":{"docs":{},"层":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"，":{"docs":{},"再":{"docs":{},"找":{"docs":{},"这":{"docs":{},"个":{"docs":{},"上":{"docs":{},"一":{"docs":{},"层":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"的":{"docs":{},"其":{"docs":{},"余":{"docs":{},"邻":{"docs":{},"接":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"继":{"docs":{},"续":{"docs":{},"如":{"docs":{},"上":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"所":{"docs":{},"有":{"docs":{},"邻":{"docs":{},"接":{"docs":{},"结":{"docs":{},"点":{"docs":{},"往":{"docs":{},"下":{"docs":{},"都":{"docs":{},"访":{"docs":{},"问":{"docs":{},"过":{"docs":{},"了":{"docs":{},"，":{"docs":{},"就":{"docs":{},"把":{"docs":{},"自":{"docs":{},"己":{"docs":{},"涂":{"docs":{},"黑":{"docs":{},"，":{"docs":{},"再":{"docs":{},"回":{"docs":{},"溯":{"docs":{},"到":{"docs":{},"更":{"docs":{},"上":{"docs":{},"一":{"docs":{},"层":{"docs":{},"。":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"基":{"docs":{},"本":{"docs":{},"就":{"docs":{},"是":{"docs":{},"出":{"docs":{},"队":{"docs":{},"的":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"变":{"docs":{},"成":{"docs":{},"黑":{"docs":{},"色":{"docs":{},"，":{"docs":{},"在":{"docs":{},"队":{"docs":{},"列":{"docs":{},"里":{"docs":{},"的":{"docs":{},"是":{"docs":{},"灰":{"docs":{},"色":{"docs":{},"，":{"docs":{},"还":{"docs":{},"没":{"docs":{},"入":{"docs":{},"队":{"docs":{},"的":{"docs":{},"是":{"docs":{},"白":{"docs":{},"色":{"docs":{},"。":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"回":{"docs":{},"溯":{"docs":{},"能":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"p":{"docs":{"bfs-dfs/leetcode90.html":{"ref":"bfs-dfs/leetcode90.html","tf":0.007246376811594203}}}}}}}}}}}}},"于":{"docs":{},"当":{"docs":{},"前":{"docs":{},"情":{"docs":{},"况":{"docs":{},"做":{"docs":{},"深":{"docs":{},"度":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"(":{"docs":{},"一":{"docs":{},"步":{"docs":{},"步":{"docs":{},"走":{"docs":{},"到":{"docs":{},"底":{"docs":{},")":{"docs":{"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.005780346820809248}}}}}}}}}}}}}}}}}}}}},"广":{"docs":{},"度":{"docs":{},"优":{"docs":{},"先":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"在":{"docs":{},"进":{"docs":{},"一":{"docs":{},"步":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"图":{"docs":{},"中":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"之":{"docs":{},"前":{"docs":{},"，":{"docs":{},"先":{"docs":{},"访":{"docs":{},"问":{"docs":{},"当":{"docs":{},"前":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"邻":{"docs":{},"接":{"docs":{},"结":{"docs":{},"点":{"docs":{},"。":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"（":{"docs":{},"b":{"docs":{},"f":{"docs":{},"s":{"docs":{},"）":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}}}}}}}}}},"序":{"docs":{},"号":{"docs":{},":":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.002053388090349076},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.013605442176870748}}}},"docs":{}}}}},"按":{"docs":{},"照":{"docs":{},"同":{"docs":{},"样":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"处":{"docs":{},"理":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"的":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{},"。":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}}}}}}}}}}}}}}}}},"出":{"docs":{},"现":{"docs":{},"次":{"docs":{},"数":{"docs":{},"从":{"docs":{},"大":{"docs":{},"到":{"docs":{},"小":{"docs":{},"重":{"docs":{},"新":{"docs":{},"排":{"docs":{},"列":{"docs":{},"，":{"docs":{},"并":{"docs":{},"把":{"docs":{},"字":{"docs":{},"符":{"docs":{},"数":{"docs":{},"组":{"docs":{},"转":{"docs":{},"换":{"docs":{},"成":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{"dp/leetcode621.html":{"ref":"dp/leetcode621.html","tf":0.00625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"深":{"docs":{},"度":{"docs":{},"优":{"docs":{},"先":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"在":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"访":{"docs":{},"问":{"docs":{},"某":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"后":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"递":{"docs":{},"归":{"docs":{},"地":{"docs":{},"访":{"docs":{},"问":{"docs":{},"此":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"未":{"docs":{},"访":{"docs":{},"问":{"docs":{},"过":{"docs":{},"的":{"docs":{},"相":{"docs":{},"邻":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"。":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"遍":{"docs":{},"历":{"docs":{},"（":{"docs":{},"d":{"docs":{},"f":{"docs":{},"s":{"docs":{},"）":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}}}}}}}}}},"理":{"docs":{},"解":{"docs":{},"!":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"i":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374}}}}}}}}}}},"结":{"docs":{},"点":{"5":{"docs":{},"对":{"docs":{},"于":{"1":{"docs":{},"来":{"docs":{},"说":{"docs":{},"不":{"docs":{},"可":{"docs":{},"达":{"docs":{},"。":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}}}}}},"docs":{}}}},"docs":{}},"束":{"docs":{},"条":{"docs":{},"件":{"docs":{"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.005780346820809248}}}}}},"给":{"docs":{},"一":{"docs":{},"个":{"docs":{},"邻":{"docs":{},"接":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"实":{"docs":{},"现":{"docs":{},"b":{"docs":{},"f":{"docs":{},"s":{"docs":{},"输":{"docs":{},"出":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}}}},"d":{"docs":{},"f":{"docs":{},"s":{"docs":{},"输":{"docs":{},"出":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}}}}}}}}}}}},"出":{"docs":{},"一":{"docs":{},"个":{"docs":{},"排":{"docs":{},"好":{"docs":{},"序":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"[":{"1":{"docs":{},",":{"2":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538},"bfs-dfs/leetcode47.html":{"ref":"bfs-dfs/leetcode47.html","tf":0.006802721088435374}}}},"docs":{}}},"docs":{}}},"docs":{}}}}}}}}}}}},"定":{"docs":{},"一":{"docs":{},"个":{"docs":{},"不":{"docs":{},"含":{"docs":{},"有":{"docs":{},"重":{"docs":{},"复":{"docs":{},"数":{"docs":{},"字":{"docs":{},"的":{"docs":{},"整":{"docs":{},"数":{"docs":{},"的":{"docs":{},"集":{"docs":{},"合":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"]":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"其":{"docs":{},"全":{"docs":{},"排":{"docs":{},"列":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}}}}}}}}}}}}}}}}}}}}}}},"重":{"docs":{},"复":{"docs":{},"数":{"docs":{},"字":{"docs":{},"的":{"docs":{},"整":{"docs":{},"数":{"docs":{},"数":{"docs":{},"组":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"和":{"docs":{},"一":{"docs":{},"个":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"，":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"中":{"docs":{},"的":{"docs":{},"数":{"docs":{},"每":{"docs":{},"个":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"一":{"docs":{},"次":{"docs":{},"或":{"docs":{},"多":{"docs":{},"次":{"docs":{},"，":{"docs":{},"找":{"docs":{},"到":{"docs":{},"所":{"docs":{},"有":{"docs":{},"和":{"docs":{},"为":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"的":{"docs":{},"集":{"docs":{},"合":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"可":{"docs":{},"能":{"docs":{},"含":{"docs":{},"有":{"docs":{},"重":{"docs":{},"复":{"docs":{},"数":{"docs":{},"字":{"docs":{},"的":{"docs":{},"整":{"docs":{},"数":{"docs":{},"数":{"docs":{},"组":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"和":{"docs":{},"一":{"docs":{},"个":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"，":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"中":{"docs":{},"的":{"docs":{},"数":{"docs":{},"每":{"docs":{},"个":{"docs":{},"只":{"docs":{},"能":{"docs":{},"使":{"docs":{},"用":{"docs":{},"至":{"docs":{},"多":{"docs":{},"一":{"docs":{},"次":{"docs":{},"，":{"docs":{},"找":{"docs":{},"到":{"docs":{},"所":{"docs":{},"有":{"docs":{},"和":{"docs":{},"为":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"的":{"docs":{},"集":{"docs":{},"合":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"集":{"docs":{},"合":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"]":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"其":{"docs":{},"不":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"全":{"docs":{},"排":{"docs":{},"列":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}}}}}}}}}}}}}}}}}}},"集":{"docs":{},"，":{"docs":{},"输":{"docs":{},"出":{"docs":{},"它":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"子":{"docs":{},"集":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}}}}}}}}}}}}}}}}}}}},"数":{"docs":{},"字":{"docs":{},"n":{"docs":{},"，":{"docs":{},"字":{"docs":{},"典":{"docs":{},"序":{"docs":{},"输":{"docs":{},"出":{"docs":{},"[":{"1":{"docs":{},",":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}},"docs":{}}}}}}}}}}},"没":{"docs":{},"有":{"docs":{},"重":{"docs":{},"复":{"docs":{},"数":{"docs":{},"字":{"docs":{},"的":{"docs":{},"整":{"docs":{},"数":{"docs":{},"集":{"docs":{},"，":{"docs":{},"输":{"docs":{},"出":{"docs":{},"它":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"子":{"docs":{},"集":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"浮":{"docs":{},"点":{"docs":{},"数":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"和":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"整":{"docs":{},"数":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"。":{"docs":{},"求":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"的":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"次":{"docs":{},"方":{"docs":{},"。":{"docs":{"Bit/数值的整数次方.html":{"ref":"Bit/数值的整数次方.html","tf":0.010309278350515464}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"解":{"docs":{},"答":{"docs":{},"连":{"docs":{},"接":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}},"链":{"docs":{},"接":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.006160164271047228}}}}}},"访":{"docs":{},"问":{"1":{"docs":{},"的":{"docs":{},"邻":{"docs":{},"接":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"，":{"1":{"docs":{},"出":{"docs":{},"队":{"docs":{},"变":{"docs":{},"黑":{"docs":{},"，":{"2":{"docs":{},",":{"3":{"docs":{},"入":{"docs":{},"队":{"docs":{},"，":{"docs":{},"队":{"docs":{},"列":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}}}}},"docs":{}}},"docs":{}}}}}}},"docs":{}}}}}}}},"2":{"docs":{},"的":{"docs":{},"邻":{"docs":{},"接":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"2":{"docs":{},"出":{"docs":{},"队":{"docs":{},"，":{"4":{"docs":{},"入":{"docs":{},"队":{"docs":{},"，":{"docs":{},"队":{"docs":{},"列":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}}}}},"docs":{}}}}},"docs":{}}}}}}}},"3":{"docs":{},"的":{"docs":{},"邻":{"docs":{},"接":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"3":{"docs":{},"出":{"docs":{},"队":{"docs":{},"，":{"docs":{},"队":{"docs":{},"列":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}}}}},"docs":{}}}}}}}},"4":{"docs":{},"的":{"docs":{},"邻":{"docs":{},"接":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"4":{"docs":{},"出":{"docs":{},"队":{"docs":{},"，":{"docs":{},"队":{"docs":{},"列":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}}}}},"docs":{}}}}}}}},"docs":{}}},"选":{"docs":{},"择":{"docs":{},"起":{"docs":{},"始":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"涂":{"docs":{},"成":{"docs":{},"灰":{"docs":{},"色":{"docs":{},"，":{"docs":{},"表":{"docs":{},"示":{"docs":{},"还":{"docs":{},"未":{"docs":{},"访":{"docs":{},"问":{"docs":{"bfs-dfs/bfs-dfs总结.html":{"ref":"bfs-dfs/bfs-dfs总结.html","tf":0.001026694045174538}}}}}}}}}}}}}}}}},"排":{"docs":{},"序":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}},"y":{"docs":{},"e":{"docs":{"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}}}},"每":{"docs":{},"个":{"docs":{},"数":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"或":{"docs":{},"者":{"docs":{},"不":{"docs":{},"在":{"docs":{},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"中":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"说":{"docs":{},"n":{"docs":{},"个":{"docs":{},"整":{"docs":{},"数":{"docs":{},"的":{"docs":{},"集":{"docs":{},"合":{"docs":{},"的":{"docs":{},"子":{"docs":{},"集":{"docs":{},"有":{"2":{"docs":{},"^":{"docs":{},"n":{"docs":{},"个":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"o":{"docs":{},"(":{"2":{"docs":{},"^":{"docs":{},"n":{"docs":{},")":{"docs":{"bfs-dfs/leetcode78.html":{"ref":"bfs-dfs/leetcode78.html","tf":0.003703703703703704}}}}}},"docs":{}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"看":{"docs":{},"成":{"9":{"docs":{},"颗":{"docs":{},"树":{"docs":{},"，":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"是":{"docs":{},"在":{"docs":{},"父":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"基":{"docs":{},"础":{"docs":{},"上":{"docs":{},"加":{"docs":{},"一":{"docs":{},"位":{"docs":{},"（":{"docs":{},"*":{"1":{"0":{"docs":{"bfs-dfs/leetcode386.html":{"ref":"bfs-dfs/leetcode386.html","tf":0.007194244604316547}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"~":{"docs":{"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.011560693641618497}}},"停":{"docs":{},"止":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"是":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.005780346820809248}}}}}}}}}}}}}}}}}},"算":{"docs":{},"出":{"docs":{},"边":{"docs":{},"界":{"docs":{},"条":{"docs":{},"件":{"docs":{"dp/leetcode55.html":{"ref":"dp/leetcode55.html","tf":0.005780346820809248}}}}}}}},"可":{"docs":{},"能":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"就":{"docs":{},"是":{"docs":{},"入":{"docs":{},"环":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"把":{"docs":{},"检":{"docs":{},"测":{"docs":{},"放":{"docs":{},"在":{"docs":{},"前":{"docs":{},"面":{"docs":{"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.005952380952380952}}}}}}}}}}}}}}}}}}}}}}}}},"快":{"docs":{},"指":{"docs":{},"针":{"docs":{},"一":{"docs":{},"次":{"docs":{},"走":{"docs":{},"两":{"docs":{},"步":{"docs":{},"，":{"docs":{},"慢":{"docs":{},"指":{"docs":{},"针":{"docs":{},"一":{"docs":{},"次":{"docs":{},"走":{"docs":{},"一":{"docs":{},"步":{"docs":{"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.005952380952380952}}}}}}}}}}}}}}}},"回":{"docs":{},"到":{"docs":{},"起":{"docs":{},"点":{"docs":{},"，":{"docs":{},"快":{"docs":{},"指":{"docs":{},"针":{"docs":{},"和":{"docs":{},"慢":{"docs":{},"指":{"docs":{},"针":{"docs":{},"都":{"docs":{},"一":{"docs":{},"次":{"docs":{},"走":{"docs":{},"一":{"docs":{},"步":{"docs":{"Fast-Slow-pointers/leetcode142.html":{"ref":"Fast-Slow-pointers/leetcode142.html","tf":0.005952380952380952},"Fast-Slow-pointers/leetcode287.html":{"ref":"Fast-Slow-pointers/leetcode287.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}}}}}}},"速":{"docs":{},"排":{"docs":{},"序":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}},"​":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.034229828850855744}}},"下":{"docs":{},"的":{"docs":{},"值":{"docs":{},"给":{"docs":{},"左":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}}}}},"转":{"docs":{},"置":{"docs":{},"函":{"docs":{},"数":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}}}},"逐":{"docs":{},"渐":{"docs":{},"向":{"docs":{},"里":{"docs":{},"对":{"docs":{},"每":{"docs":{},"一":{"docs":{},"层":{"docs":{},"四":{"docs":{},"个":{"docs":{},"四":{"docs":{},"个":{"docs":{},"数":{"docs":{},"分":{"docs":{},"组":{"docs":{},"进":{"docs":{},"行":{"docs":{},"旋":{"docs":{},"转":{"docs":{"Matrix/leetcode48.html":{"ref":"Matrix/leetcode48.html","tf":0.0024449877750611247}}}}}}}}}}}}}}}}}}}}},"冒":{"docs":{},"泡":{"docs":{},"排":{"docs":{},"序":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}},"写":{"docs":{},"冒":{"docs":{},"泡":{"docs":{},"排":{"docs":{},"序":{"docs":{},"自":{"docs":{},"己":{"docs":{},"的":{"docs":{},"错":{"docs":{},"误":{"docs":{},"：":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}}}}}}},"归":{"docs":{},"并":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"自":{"docs":{},"己":{"docs":{},"的":{"docs":{},"几":{"docs":{},"个":{"docs":{},"错":{"docs":{},"误":{"docs":{},"：":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}}}}}}}}}}}},"快":{"docs":{},"排":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"自":{"docs":{},"己":{"docs":{},"的":{"docs":{},"几":{"docs":{},"个":{"docs":{},"错":{"docs":{},"误":{"docs":{},"：":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}}}}}}}}}},"选":{"docs":{},"择":{"docs":{},"排":{"docs":{},"序":{"docs":{},"自":{"docs":{},"己":{"docs":{},"的":{"docs":{},"错":{"docs":{},"误":{"docs":{},"：":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}}}}}}}},"又":{"docs":{},"习":{"docs":{},"惯":{"docs":{},"性":{"docs":{},"地":{"docs":{},"加":{"docs":{},"了":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"，":{"docs":{},"重":{"docs":{},"复":{"docs":{},"定":{"docs":{},"义":{"docs":{},"了":{"docs":{},"变":{"docs":{},"量":{"docs":{},"。":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}}}}}}}}}}}}}}}},"堆":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}},"排":{"docs":{},"序":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}},"归":{"docs":{},"并":{"docs":{},"排":{"docs":{},"序":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}},"排":{"docs":{},"序":{"docs":{},"算":{"docs":{},"法":{"docs":{},"总":{"docs":{},"结":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":10}}}}}}}},"稳":{"docs":{},"定":{"docs":{},"性":{"docs":{},"：":{"docs":{},"可":{"docs":{},"以":{"docs":{},"实":{"docs":{},"现":{"docs":{},"成":{"docs":{},"稳":{"docs":{},"定":{"docs":{},"的":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.005474452554744526}}}}}}}}}},"无":{"docs":{},"法":{"docs":{},"实":{"docs":{},"现":{"docs":{},"成":{"docs":{},"稳":{"docs":{},"定":{"docs":{},"的":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.005474452554744526}}}}}}}}}}}}}},"随":{"docs":{},"机":{"docs":{},"得":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"在":{"docs":{},"[":{"docs":{},"l":{"docs":{},"o":{"docs":{},",":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}}}}}},"选":{"docs":{},"取":{"docs":{},"基":{"docs":{},"准":{"docs":{},"点":{"docs":{},"和":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"交":{"docs":{},"换":{"docs":{"Sort/排序算法总结.html":{"ref":"Sort/排序算法总结.html","tf":0.0018248175182481751}}}}}}}}}}}}}}}}},"整":{"docs":{},"数":{"4":{"docs":{},"个":{"docs":{},"字":{"docs":{},"节":{"docs":{},"，":{"3":{"2":{"docs":{},"位":{"docs":{},"，":{"docs":{},"当":{"docs":{},"f":{"docs":{},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{},"左":{"docs":{},"移":{"docs":{},"超":{"docs":{},"过":{"docs":{},"了":{"3":{"2":{"docs":{},"位":{"docs":{},"，":{"docs":{},"前":{"docs":{},"面":{"docs":{},"被":{"docs":{},"砍":{"docs":{},"断":{"docs":{},"，":{"docs":{},"后":{"docs":{},"面":{"3":{"2":{"docs":{},"位":{"docs":{},"为":{"0":{"docs":{},"则":{"docs":{},"结":{"docs":{},"束":{"docs":{"Bit/二进制中1的个数.html":{"ref":"Bit/二进制中1的个数.html","tf":0.022222222222222223}}}}}},"docs":{}}}},"docs":{}},"docs":{}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}},"docs":{}}},"举":{"docs":{},"例":{"docs":{},"，":{"1":{"3":{"docs":{},"表":{"docs":{},"达":{"docs":{},"为":{"docs":{},"二":{"docs":{},"进":{"docs":{},"制":{"1":{"1":{"0":{"1":{"docs":{},"。":{"docs":{"Bit/数值的整数次方.html":{"ref":"Bit/数值的整数次方.html","tf":0.010309278350515464}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}},"docs":{}},"docs":{}}}},"通":{"docs":{},"过":{"docs":{},"&":{"1":{"docs":{},"和":{"docs":{},">":{"docs":{},">":{"1":{"docs":{},"来":{"docs":{},"逐":{"docs":{},"位":{"docs":{},"读":{"docs":{},"取":{"1":{"1":{"0":{"1":{"docs":{},"，":{"docs":{},"为":{"1":{"docs":{},"时":{"docs":{},"将":{"docs":{},"该":{"docs":{},"位":{"docs":{},"代":{"docs":{},"表":{"docs":{},"的":{"docs":{},"乘":{"docs":{},"数":{"docs":{},"累":{"docs":{},"乘":{"docs":{},"到":{"docs":{},"最":{"docs":{},"终":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{"Bit/数值的整数次方.html":{"ref":"Bit/数值的整数次方.html","tf":0.010309278350515464}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}},"docs":{}}}}},"docs":{}}}}},"length":5268},"corpusTokens":["!=","!stack.empty())","!used[i","\"","\"%20\");","\"));","\");","\",","\";","\"^\",","\"fuck","\"h\",","\"nice!\"","\"v\",","#defin","#includ","%","%d\",","&","&&","&a,","&b);","&nums[i]);","'","'%');","')","'0');","'2');","'a'，value为这个char出现的次数","'finish'","'start'","(!popstack.empty())","(!pushstack.empty())","(!queue.isempty())","(!stack.empty())","(!stack.isempty()","(!stack1.isempty())","(!stack2.isempty())","(!storestack.empty())","((flag","((hi","(*pa","(*pb);","(;","(allproduct","(array","(array[j]","(array[mid]","(arraylist","(assum","(base","(blue","(candid","(candidates)","(clockwise).","(contain","(copy[j]","(cur","(cur.left","(cur.right","(data.isempty())","(data.size()","(fast","(findminindex(arr1)","(flag","(getcount(arr1,","(head","(hi","(i","(i,","(i.e.,","(includ","(inclusive),","(index","(inits","(insertindex","(int","(int)","(int*)a;","(int*)b;","(int[]","(integ","(interv","(leftindex","(len","(list","(listnod","(lo","(map.get(num)","(mark","(matrix.length","(max","(maxindex","(min","(n","(num","(number","(nums.size()","(nums[hi]","(nums[i]","(nums[index]","(nums[j]","(nums[lo]","(nums[mid]","(output)","(p1","(popstack.empty()","(preorder","(price","(remain","(res.isempty()","(root","(set.contains(num))","(size","(slow","(sorted)","(startindex","(str.charat(i)","(target","(target),","(the","(tmplist));","(tmplist.size()","(without","(回顾先序：用栈实现，弹出一个节点作为当前节点，打印当前节点，",")","));","*","*/","*=","*a,","*b)","*duplic","*pa","*pb","+","++)","++;","++]","+=",",","...","...,","....","...19","/","/*","/**","/*=====================================================================================*/","/*divid","/*for","/*if","/*solution区方法2：","/*solution区看到的：divid","/*solution区：","/*《剑指offer第2版》p39：","/*必然是看的讨论区的：","/*把常用的变量变成全局的减少参数传递*/","/*比leetcode78","/*自己没想到，看的讨论区的：","/*自想1：","/*自想1：动态规划背包问题：","/*自想1：排序再遍历一遍找到第一个重复的数字","/*自想1：用两个指针遍历，时间复杂度o(n²)，空间复杂度o(1)","/*自想：荷兰国旗问题","/*讨论区：","/*评论区最简方法：boyer","//","//cout","//int","//listnod","//lists2.add(tmplist);","//node3.next","//node4.next","//从小到大排序","//数num在nums[lo]","/\\","0","0'","0's,","0)","0));","0).","0);","0,","0,0,0,6","0.","0;","0}","0},","0};","0时前一个数下标为","0队列为空，如还要取数给用户报错。","0，1，2，4，8,","1","1'","1's,","1)","1));","1)*n+次数最多的char的种类maxcount，如a,b并列最多，maxcount","1)/4","1);","1);要注意>>的优先级。","1)：","1,","1,2,1,","1,2,1]","1,2,3,0","1,2,3,4,5","1,hi)","1,i","1,so","1.","1.1","1.2","1.3","1.4","1.5","1.6","1.7","1.8","1.二维数组中的查找","10","10));","10,","10,000].","10.矩阵覆盖","100.","100...109","1000,","10000].","1000]","100].","10;","10^0001","10^0100","10^1000。","10^1101","10^7.","10};","11","11));","11,","11.二进制中1的个数","12","12.数值的整数次方","12},","13,","13.调整数组顺序使奇数位于偶数前面","13},","15","15]","15],","15}};","17);","1:","1;","1]","1])","1]))","1],","1].","1];","1]~pre[inindex","1]位置选出最小的和nums[0]交换位置，再遍历[1,n","1]位置选出第二小的和nums[1]交换...第i轮(i从0开始)选数的时候前i个位置[0,i","1]即差额相当于最大子数列中的每一个x","1]的元素整体后移一位，最后将找到的奇数放入i位置，然后i++。","1]的数都已经是在正确的位置上了，待选的范围是[i,","1]的矩形中","1]范围恢复成一个大根堆。","1]，nums下标的范围是[lo,","1]，右子树是[prestart","1]，右节点是nums[2","1]，根是inroot，右子树是[inroot","1]，第i轮选完[0.i]都在正确位置上了","1e7,","1e7].","1};","1→3→1→1→1","1。","1。栈空，如还要弹出给用户报错。","1为","1为=target的最小下标","1为>","1块与最后一块无连接","1块与最后一块有连接","1张都已经有序了","1的范围内。","1而不是mid。","1，但是最后在右半段没有找到更大的，target","1，在(mid,","1，栈满，如还要压入则给用户报错。index","1，那么所有的位置都可以选择走或者不走，时间复杂度o(2的n次方)，","2","2's,","2's.","2)","2));","2);","2,","2,1,","2,3,","2.","2...张牌比较，比前面的小就和前面的数交换位置，插第i张的时候前面i","2.替换空格","20","20,000].","20...29","256","28","2:","2;","2]","2])","2]，父节点是nums[(i","2]，返回长度为0的子数列在这里就是不做股票的交易","2d","2t(n/2)","2};","3","3,","3,4,","3.从尾到头打印链表","30...39","390...399","3:","3;","3}","3种做法，整理成gitbook方便自己查阅，也希望能与小伙伴们共同刷题共同进步。","4","4(n","4);","4,","4.重建二叉树","49","49.","4:","4n/4+","4}","4};","4，其连续子数列中和最大的是","5","5));","5,","5,000,000.","5,4],","5.","5.用两个栈实现队列","500000;","500005","5;","5],","5};","5×105","6","6),","6,","6,4,","6.","6.旋转数组的最小元素","6]","6],","6};","7","7));","7,","7,10,11]","7.斐波那契数列","7],","8","8));","8,","8,10],","8.跳台阶","8;","9","9,","9,11],","9.变态跳台阶","90","9]","9],","9},","9};",":",";","=","==","=>",">",">=",">>",">上)，逆序操作，不然覆盖了",">下",">右子树",">左(",">左子树",">根","?","@overrid","[","[\"a\",\"a\",\"a\",\"b\",\"b\",\"b\"],","[0,","[0,0,1,1,1,2,2,3,3,4],","[0,0,1,1,2,2]","[0,1)","[0,1,0,3,12]","[0,1,2,4,5,6,7]","[0,1,2]","[0,1]","[0,2,1]","[0,2]","[0,hi","[1,","[1,1,1],","[1,1,2]","[1,1,2],","[1,10,11,12,13,2,3,4,5,6,7,8,9].","[1,2,1],","[1,2,2]","[1,2,2],","[1,2,3,4]","[1,2,3]","[1,2,3],","[1,2]","[1,2],","[1,3,12,0,0]","[1,3,1],","[1,3,2],","[1,3,4,2,2]","[1,3,5,6],","[1,3]","[1,3],","[1,4]","[1,5,1],","[1,6].","[1,8,6,2,5,4,8,3,7]","[1,8,6,2,5,4,8,3,7].","[10,1,2,7,6,1,5],","[12,","[13,","[14,","[15,13,","[15,14,12,16]","[16,","[1]","[1],","[2,","[2,0,2,1,1,0]","[2,1,1]","[2,1,3],","[2,2,1,1,1,2,2]","[2,2,2,2],","[2,2,3]","[2,2],","[2,3,1,1,4]","[2,3,1],","[2,3,3],","[2,3,5],","[2,3,6,7],","[2,3],","[2,5,2,1,2],","[2,6]","[24,12,8,6]","[2],","[3,1,2],","[3,1,3,4,2]","[3,2,1,0,4]","[3,2,1]","[3,2,3]","[3,4]","[3,5]","[3,9,20,15,7]","[3],","[4,","[4,2,1]","[4,3,2,7,8,2,3,1]","[4,5,6,7,0,1,2]).","[4,5,6,7,0,1,2],","[4,5,6],","[4,5]","[5,6]","[5,7,7,8,8,10],","[5]","[6,","[7,1,5,3,6,4]","[7,1,5,3,6,4],","[7,4,1],","[7,6,4,3,1]","[7,8,9]","[7],","[8,5,2],","[9,3,15,20,7]","[9,6,3]","[[1,3],[2,6],[8,10],[15,18]]","[[1,4],[4,5]]","[[1,5]]","[[1,6],[8,10],[15,18]]","[]","[a,","[lo,","\\","]","],","^","a1,","a2,","a=2,b=2,d=1","a[i]","abov","absexp","add","adjacent,","ai)","ai).","algorithm","algorithm'","alloc","allproduct","along","alway","analysis.)","anoth","anticlockwis","appear","approach,","area","args)","array","array)","array));","array),","array,","array.","array.length","array.length)","array.length时队列为满，如还要加数给用户报错，curs","array;","array[","array[]","array[hi])","array[i++]","array[i]","array[i][j])","array[index","array[j","array[j]","array[j];","array[k","array[k];","array[mid];","arrayindexoutofboundsexception(\"th","arraylist","arraylist(arrays.aslist(1,2,3,4)));","arraylist(arrays.aslist(4,5,6)));","arraylist(arrays.aslist(7,8)));","arraylist)","arraylist.add(1);","arraylist.add(2);","arraylist.add(3);","arraylist.add(listnode.val);","arraylist.size()","arraylist.toarray(new","arraylist;","arraylist<>(),","arraylist<>();","arraylist<>(arrays.aslist(array));","arraylist<>(tmplist));","arraylist>","arraylists)","arraylists.add(new","arrayqueu","arrayqueue(int","arrays)","arrays.sort(nums);","arraystack","arraystack(int","arriv","ascend","ask","assum","axi","axis.","b","b.","b;","b],","b].","b]内点的个数。","b]，试计算落在其内的点数。","b]，都有a","backtrack","backtrack(list,","backtrack(list>","backtrack(lists,","backtracking.leetcode78subsets.subsets;","backtracking;","bad,","base","base,","base;","be","becom","becomes:","befor","beforehand.","beforelength","begins.","below).","best","besttime1(int[]","besttime2(int[]","besttime3(int[]","between","beyond","bf","bfs(int[][]","bfs(matrix);","bfs/dfs总结","bfs广度优先搜索/dfs深度优先搜索相关算法题的思路总结。","bfs的思想","bfs相关问题","binari","binarysearch","binarysearch(int[]","binarysearch(nums,","binarysearch1(int","binarysearchcomparator(int[]","binarysearchforfirstgreaternumindex(int[]","binarysearchforfirstgreaterorequalnumindex(int[]","binarysearchwithoutduplicates(int[]","bit;","blue","blue,","blue.","boolean","boolean[]","boolean[n];","boolean[nums.length]);","bottom","boundari","break;","bubblesort(int[]","buf","buildtree(int[]","buy","c++：","c/c++","c/c++,","call","candid","candidates,","candidates.length","candidates[i","candidates[i])","candidates[i]);","canjumpfromposition1(int[]","capit","case","case,","case上的改进","case是左边或右边只有一个数，求一个数的maxsub必然是自己","char","char[]","char[]{'a','a','a','b','b','b'};","check","chosen","class","clockwis","code","collect","color","combin","combination.","combinations.","combinationsum(int[]","combinationsum2(int[]","come","common.generaterandomarray.*;","common.interval;","common.listnode;","common.printarray.printarray;","common.printarraylist.printarraylist;","common.treenode;","compar","compare(const","compare(interv","compare);","complet","complex","complexity?","conquer","conquer:","consid","consist","const","constant","constant,","construct","contain","container,","containmaxwater1(int[]","containmaxwater2(int[]","contigu","continu","continue;","cool","coordin","copi","corner","corner,","corner:","count","count++;","cpu","cur","cur)","cur.left;","cur.next;","cur.right;","cur.val;","cur;","curcol","curcol[0]","current","cursize;","cycl","cycle,","data","data.add(num);","data.poll();","data;","day","defin","definit","degre","descriptioin","design","detectcycle(listnod","determin","df","dfs(int[][]","dfs(matrix);","dfs与backtracking相关问题","diagram","differ","directly.","disappear","discuss区看到的：","distinct","divid","divis","do","do.","doesn't","done","done,","doubl","down","down,","dp问题：","drawn","duplic","duplicate2(int","duplicates)","duplicates,","duplicates边界条件扣的不清楚看的讨论区的","duplication)","duplication:","duplication[0]","e)","e;","each","easy，但它的各种变形扣边界真的需要总结一下。","element","element.","elements.","empti","empty!\");","empty\");","end","end;","endpoint","enum","enumer","equal","equalrang","equalrange[0]","equalrange[1]","exactli","exampl","example,","example:","except","exist","exist.","explanation:","expon","exponent)","extra","f(0)","f(1)","f(2)","f(3)","f(n","f(n)","factor","fals","false,","false;","fast","fast)","fast.next","fast.next.next;","fast.next;","fibonacci(int","figur","fill","find","find(int","findduplicate1(int[]","findduplicate3(int[]","findleftindex(int[]","findleftindex(nums,","findminindex(arr1));","findminindex(int[]","findminindexcomparator(arr2))","findminindexcomparator(arr2));","findminindexcomparator(int[]","findnumbersnotappear(int[]","findoneofduplicatenumb","findrightindex(int[]","findrightindex(nums,","findtheduplicatenumber1(int[]","finish","first","first,","five","flag","follow","for(int","form","format.printarray.printarray;","format.printdoublearraylist.printdoublelist;","format.printlist.printlist;","format.printmatrix.printmatrix;","format.printmatrix.printndegreematrix;","format;","forward","for循环o(n)","found","found.","fucked!\");","function","game","getcount(int[]","getcountcomparator(arr2,","getcountcomparator(int[]","getspace(int","getspace(lenl)","getspace(lenr);","given","good,","greater","grid","grid(mark","grid.","guarante","happy\");","happy.则经过替换之后的字符串为we%20are%20happy。","hashmap","hashmap<>();","hashset<>();","head)","head,","head.valu","head;","heapify()调整函数：节点上的某个值变小后要下沉，若左右两个孩子中最大的比我大则和我交换，不断下沉直到[0,","heapify(int[]","heapify(nums,","heapinsert()建堆函数：当堆中插入一个新节点（第i号节点nums[i]）时，向上和父节点比大小，若大则换，不断调整成大根堆","heapinsert(int[]","heapsiz","heapsize)","heapsize);","heapsort()堆排序：每次堆的头和堆的最后一个数交换，最后一个最大的数固定，heaps","heapsort(int[]","height","height,","help","help.add(data.poll());","help.add(res);","help;","helper","here","here,","hi","hi)","hi);","hi);一个是类型转换的括号要打在int上，一个是random()是小写。","hi);写成swap(nums,","hi)中","hi)函数没有去除lo","hi+1)=[lo,hi]","hi,","hi;","hi]","hi]中找","hi]之间的数：(int)(lo","hi会）","hi的情况","hi的情况，使得一旦同一个数自己和自己发生交换就会清零。","hi的时候，是同一个数，就会将这个数清零（nums[lo]","hi的起始值分别为0,n","hi，min在mid的右边，不可能是mid","hi：最小值在右半部分","hi：最小值在右半部分，不可能是自己了","however,","i)","i);","i,","i.","i.e.","i;","idl","idle.","ii","imag","image.","implement","implementation;","import","imposs","inclus","index","index,","index.","index;","index[0,n","index];","index为char","indic","inend)","inend]","inindex","initi","initsize)","inord","inorder)","inorderrecur(nod","inorderrecur(root.left);","inorderrecur(root.right);","inorderunrecur(nod","input","input:","inroot","insert","insertindex","insertionsort(int[]","insid","inside.","instart","instart;","instart]，右子树是[prestart","int","int(lo","int[]","int[][]","int[][]{{1,","int[][]{{1,2,3},{4,5,6},{7,8,9}};","int[]{1,","int[]{1,1,2};","int[]{1,2,2,4};","int[]{1,2,3,4};","int[]{1,3,5,6};","int[]{10,1,2,7,6,1,5};","int[]{2,5,2,1,2};","int[]{9,","int[]{i,","int[length];","int[m];","int[n][m];","int[nums.length];","integ","integer.compare(o1.start,","integer.max_value)","integer.max_value,","integer.max_value;","integer.min_value;","integer[]","integer[arraylist.size()]);","integer[length];","integer[list.size()]);","integers,","integers.","integers:","integr","interv","interval()","interval(int","interval,","interval.","intervalcompar","intervals)","intervals,","intervals.","intervals.size()","introduct","is:","iter","ith","i从左向右遍历，找到第一个偶数。","i存偶数的下标，j存i之后的奇数的下标","i），按顺序进行先序遍历。","i，而不是nums.length","j","j)","j);","j++;","j,","j;","j]","j];","j][j]","j][j];","j][n","java.util.*;","java.util.arraylist;","java.util.arrays;","java.util.hashmap;","java.util.hashset;","java.util.linkedlist;","java.util.list;","java.util.map;","java.util.queue;","java.util.scanner;","java.util.set;","java.util.stack;","java运行结果：","java：","jump","jumpfloor(int","jumpfloorii(int","j从i+1开始向后找，直到找到第一个奇数。","j层在坐标下加上(j,j)","j表示从外向内的层数","j遍历完，由于题目说了后面的数不用管，函数直接返回i的大小","k","k)","k,","k.","kadane算法：","k为小和，k为差，只要找到sum和sum","k就可以构造出和为k的subarray","l","larg","larger","largest","last","lastindex","lastindex)","layertraversal(nod","leav","leecode448findnumbersnotappear","leetcode1","leetcode105","leetcode105constructbinarytreefrompreorderandinordertravers","leetcode11","leetcode11containerwithmostwat","leetcode121","leetcode121besttimetosellandbuystock","leetcode142","leetcode142linkedlistcycle2","leetcode169","leetcode169majorityel","leetcode1twosum","leetcode238","leetcode238productofarrayexceptitself","leetcode26","leetcode26removeduplicatesfromsortedarray","leetcode283","leetcode283movezero","leetcode287","leetcode287findtheduplicatenumb","leetcode33","leetcode33searchinrotatedsortedarray","leetcode34","leetcode34findfirstandlastpositionofelementinsortedarray","leetcode35","leetcode35searchinsertionposit","leetcode386","leetcode386lexicographicalnumb","leetcode39","leetcode39combinationsum","leetcode40","leetcode40combinationsum2","leetcode448","leetcode46","leetcode46permut","leetcode47","leetcode47permutation2","leetcode48","leetcode48rotateimag","leetcode53","leetcode53maximumsubarray","leetcode55","leetcode55jumpgam","leetcode56","leetcode560","leetcode560subarraysumequalsk","leetcode56mergeinterv","leetcode581","leetcode581shortestunsortedcontinuoussubarray","leetcode62","leetcode621","leetcode621taskschedul","leetcode62uniquepath","leetcode64","leetcode64minimumpathsum","leetcode75","leetcode75sortcolor","leetcode78","leetcode78subset","leetcode90","leetcode90subsets2","left","left;","leftindex","leftindex;","leftlength","len","len)","len);","length","length++;","length,","length,int","length.","length:","lenl","lenl;","lenm","lenm)","lenr","less","letter","lexicalorder(int","lexicograph","library'","line","lines,","link","linkedlist;","linkedlist<>();","list","list)","list,","list.","list.add(cur);","list.add(new","list.toarray(new","list;","list>","listnod","listnode(0);","listnode(1);","listnode(2);","listnode(24);","listnode(4);","listnode(58);","listnode(67);","listnode(int","listnode)","listnode.next","listnode.next.next","listnode.next.next.next","listnode;","lists)","lists,","lists.add(arrays.aslist(1,2));","lists.add(arrays.aslist(4,5,6));","lists.add(arrays.aslist(7,8,9,10));","lists.add(new","lists2","lists2.add(new","lists;","lo","lo)","lo);","lo+1)","lo+1)=[lo,","lo+hi","lo,","lo;","lo;*/","locat","logb(a)=d时间复杂度o(nlogn)","logn","logn切分点，每个切分点有o(1)个要保留的参数(nums入口,lo,hi...)","ly","m","m,","main","main(string[]","main1(string[]","main2(string[]","main3(string[]","main4(string[]","maintain","major","majorityelement1(int[]","majorityelement2(int[]","majorityelement2count(int[]","majorityelement2count(nums,","majorityelement2part(nums,","majorityelement3(int[]","make","mani","map","map.get(num)","map.get(remain)};","map.put(0,","map.put(num,","map.putifabsent(num,","map.replace(num,","master公式，d=1,a=b=2,d=logba=1","math.abs(exponent);","math.abs(num)","math.max((max","math.max(j,","math.max(math.max(maxsubleft,","math.max(max,","math.max(maxsubleft,","math.max(maxtmp","math.min(i,","math.min(lo,","math.min(min,","math.min(startindex","math.random()","math.random())","math.random()),","matrix","matrix)","matrix,","matrix.length);","matrix.length;","matrix;","matrix[0].length)","matrix[0].length;","matrix[0][0];","matrix[i","matrix[i][j]为1表示有从i到j的有向边","matrix[j][i","matrix[n","matrix为n*n邻接矩阵：","matter","max","max(maxcur","max(maxcur,","max(maxtmp","max(maxtmp,","max)","max;","maxcount","maxcount,","maxcur","maximum","maximumsubarray1(int[]","maximumsubarray2(int[]","maximumsubarraypart(int[]","maximumsubarraypart(nums,","maxindex","maxindex,","maxindex;","maxprofit","maxprofit;","maxsiz","maxsofar","maxsofar)","maxsubcrossmid","maxsubcrossmid(int[]","maxsubcrossmid(nums,","maxsubcrossmid);","maxsubcrossmid;","maxsubcrossmid分为求左边以nums[mid]结束的sub的最大值，右边以nums[mid+1]开始的sub的最大值","maxsubleft","maxsubleft)","maxsubleft;","maxsubright","maxsubright)","maxsubright),","maxsubright;","maxtmp","maxtmp);","maxvalu","maxwat","maxwater;","max为上升中的最大值，极值点","mb","mean","memory.","memory:","merg","merge(int[]","merge(list","merge(nums,","mergesort(int[]","mergesortpart(nums,","mid","mid)","mid);","mid,","mid;","min","min)","minim","minimum","minimumpathsum(int[][]","minnumberinrotatearray(int[]","minpric","minprice要求最大","min为下降中的最小值，极值点","modifi","moor","more","more从hi开始，保护nums[hi]在大于区域中不会被换掉，最后再替换","move","move.","movezeros(int[]","m为行数，即一列的个数","m行n列的矩阵","n","n)","n).","n,","n/2","n]","n]的整数","namespac","need","neg","new","next","next;","nextindex","nextmaxindex","nlogn","node","node(int","node)","node1","node1.next","node1;","node2","node2.next","node2;","node3","node4","node4;","non","none","not,","note","note:","note：给出的所有元素都大于0，若数组大小为0，请返回0。","null","null)","null.","null;","num","num)","num);","num,","num;","number","number\");","number)","number,","numberof11(int","numbers)","numbers,","numbers.length","numbers:","numbers[],int","number返回上一个","number，所以只要某一个num出现的次数大于n/2它就是major","numofcontinuoussubarraysumequalsk1(int[]","numofcontinuoussubarraysumequalsk4(int[]","nums)","nums);","nums,","nums.clone();","nums.length","nums.length)","nums1","nums2","nums3","nums4","nums;","nums[(i","nums[0]","nums[0])","nums[0],","nums[1]","nums[hi]","nums[hi])","nums[hi];","nums[hi]不会，lo","nums[hi]中共出现了多少次","nums[i","nums[i]","nums[i])","nums[i]);","nums[i].","nums[i];","nums[i]那么把j位置的数赋值给++i位置的数（++i位置是重复的位置，覆盖也没关系）","nums[index]","nums[index];","nums[insertindex","nums[j","nums[j]","nums[j])","nums[j];","nums[j]且i","nums[l];","nums[leftindex]","nums[length];","nums[lo]","nums[lo])","nums[lo];","nums[maxindex]","nums[mid","nums[mid]","nums[mid])","nums[mid],","nums[mid]，","nums[mid]，lo","nums[mid]，target在右半段，","nums[mid]，在右半段，在[mid","nums[stack.peek()]","nums[startindex]","nums[startindex],","nums[startindex]步，","nums[startindex]，","nums中不存在值为target的数","n的logba次方","o(1)","o(log","o(n)","o(n).","o(n)，时间复杂度nlogn","o(n2).","o(nlogn)，空间复杂度o(1)","o(n²)，空间复杂度o(1)","o1,","o2)","o2.start);","object","odd","odd;","offer(int","oj","oj地址：https://dsa.cs.tsinghua.edu.cn/oj/course.shtml?courseid=58","on","onc","once.","one.","only).","operations.","optim","order","order,","order.","origin","other","other.","otherwis","out","out,","output","output:","output[i]","overlap","overlapping.","overlaps,","overwrit","p1","p2","p2的起始值是mid","packag","parameters:","partition(int[]","partition(nums,","partition函数：随机取一个基准点，把基准点和最后一个数交换，partition函数的目的是要将[lo,hi]从左到右分为小于基准点区域、等于基准点区域、大于基准点区域三个区域，然后返回等于区域的左右下标给quicksortpart函数。partition的实现看成往小于区域和大于区域发货。","partition过程看成向小于区域和大于区域发货","pass","path","path.","peek()","permit","permut","permutations.","permute(int[]","permuteunique(int[]","pick","pivot","place","place,","pleas","point","point.","pointor","poll()","pop","pop()","popstack","popstack.peek();","popstack.pop();","popstack.push(pushstack.pop());","popstack;","pop栈不为空，不允许倒数据","pop栈为空才允许倒数据。只要满足以上两个限制，倒数据的行为可以发生在任何时刻","pop的栈","posit","position.","posorderrecur(nod","posorderrecur(root.left);","posorderrecur(root.right);","posorderunrecur(nod","possibl","power","power1(doubl","power2(doubl","pre","pre[]中pre[prestart]是root，在in[]中找到in[inindex]=root","pre[prestart","preend","preend]","preinposlayertravers","preorder","preorder,","preorder.length","preorderrecur(nod","preorderrecur(root.left);","preorderrecur(root.right);","preorderunrecur(nod","prestart","prestart]","presum","price","price.","prices)","prices[i","prices[i]","prices[j]","print","printarray","printarray(arr1);","printarray(arr2);","printarray(int[]","printarray(nums1);","printarray(nums2);","printarray(nums3);","printarray(nums4);","printarray(productofarrayexceptitself1(nums1));","printarray(productofarrayexceptitself1(nums2));","printarray(productofarrayexceptitself1(nums3));","printarray(productofarrayexceptitself1(nums4));","printarray(productofarrayexceptitself2(nums1));","printarray(productofarrayexceptitself2(nums2));","printarray(productofarrayexceptitself2(nums3));","printarray(productofarrayexceptitself2(nums4));","printarraylist(printlistfromtailtohead1(listnode));","printarraylist(printlistfromtailtohead2(listnode));","printdoublearray(int[][]","printdoublearraylist","printdoublearraylist(arraylist>","printdoublearraylist(arraylists);","printdoublelist(combinationsum2(nums1,","printdoublelist(combinationsum2(nums2,","printdoublelist(list>","printdoublelist(lists);","printdoublelist(lists2);","printdoublelist(permuteunique(nums));","printdoublelist(subsets(nums));","printdoublelist(subsets(nums2));","printdoublelist(subsets2(nums));","printinorder(head,","printinorder(head.left,","printinorder(head.right,","printinorder(nod","printlist","printlist(arraylist);","printlist(list","printlistfromtailtohead1(listnod","printlistfromtailtohead2(listnod","printlistfromtailtohead2(listnode.next);","printmatrix","printndegreematrix(int[][]","printndegreematrix(matrix);","printtree(nod","privat","problem","problem.","product","product;","product[i","productofarrayexceptitself1(int[]","profit","profit.","prove","public","purpos","push(int","pushstack","pushstack.empty())","pushstack.push(num);","pushstack;","push的栈","qsort(nums,","queri","queries).","querytimes;","queue","queue.add(cur.left);","queue.add(cur.right);","queue.add(root);","queue.add(start);","queue.poll();","quicksort(int[]","quicksortpart(nums,","quicksortpart函数：调用partition函数，partition后返回等于区域下标后在小于区域和大于区域中递归调用自己，直到小于区域和大于区域都只有一个数。","quicksort函数：调用quicksortpart函数，实现快排。","rang","re","reach","read","rectcover(int","recurs","red,","rel","remain","remain)","remain;","remov","removeduplicates(vector&","removeduplicatesfromsortedarray(int[]","reorderarray1(int[]","reorderarray2(array);","reorderarray3(int[]","repeat","replacespace1(stringbuff","replacespace2(stringbuff","repres","res.add(i","res.getlast().end","res1","res1[1]);","res2","res2[1]);","res3","res3[1]);","res;","res[0]","res[1]","respectively.","rest","restrict","res存储结果，(因为增删多所以用linkedlist而不用arraylist)","return","return:","return;","revers","right","right,","right;","rightindex","robot","root","root)","root;","rotat","rotateimage(int[][]","rotateimage2(int[][]","rotateimageedge(int[][]","rotateimageedge(matrix,","rotateimagehelper(int[][]","rotateimagehelper(matrix,","rotation.","runtim","runtime?","runtimeexception(\"cannot","runtimeexception(\"queu","runtimeexception(\"stack","s","s)","s,","s.","s;","safe,","same","scanf(\"%d","scanf(\"%d\",","schedul","search","search(int[]","search.","searchinsertionposition1(int[]","searchinsertionposition2(int[]","searchrange(int[]","searchrange2(int[]","searchrange2(nums1,","searchrange2(nums2,","searchrange2(nums3,","sec","second","section)","select","selectionsort(int[]","sell","set","set).","set.add(num);","share","shortest","shortestsubarray1(int[]","shortestsubarray3(int[]","shortestsubarray4(int[]","size","size;","sizeof(array)/","sizeof(array[0]);","sizeof(int),","size时前一个数下标为s","skip","slant","slow","slow.next;","slow;","smallnumindex","smallnumindex,","solut","solution,","solution区方法1：","solution区方法2：","solution区看到的改进，遍历一遍即可","solution区看到的：","soluton.","solv","solved)","sort","sort.","sortcolor","sortcolors(int[]","space","space.","space?","specif","stack","stack.clear();","stack.pop());","stack.pop();","stack.push(cur);","stack.push(cur.left);","stack.push(cur.right);","stack.push(i);","stack.push(root);","stack1","stack1.push(node);","stack2","stack2.pop();","stack2.push(stack1.pop());","stack<>();","stack_queue;","start","start)","start,","start;","startindex","startindex)","startindex;","static","std;","stdlib.h中的qsort参见：http://www.cnblogs.com/ccbb/archive/2010/01/15/1648827.html","step","stock","stock),","store(int[]","store(nums);","storestack","storestack.push(cur);","storestack.push(cur.value);","str","str)","str.charat(i","str.length();","str.setcharat(j","str.setcharat(j,","str.tostring().replaceall(\"","str.tostring();","straight","string","string;","stringbuff","stringbuffer(\"\");","stringbuffer(\"w","subarray","subarray/","subarray/solution/","subset","subsets(int[]","subsets.","subsets2(int[]","subsetswithdup(int[]","subsets多了一个条件：给定的nums可能有重复元素","subtle.","succe","such","sum","sum.","sum为大和，sum","suppos","swap()","swap();","swap(array,","swap(int[]","swap(nums,","symmetri","system.out.print(\"nums[]:","system.out.print(cur.valu","system.out.print(i","system.out.print(num","system.out.print(root.valu","system.out.print(storestack.pop()","system.out.print(storestack.pop().valu","system.out.println(\"====================\");","system.out.println(\"=======================\");","system.out.println(\"======================================\");","system.out.println(\"=======================================\");","system.out.println(\"binari","system.out.println(\"find:\"","system.out.println(\"target:","system.out.println(\"true:\"","system.out.println((pop","system.out.println();","system.out.println(arrays.tostring(x)","system.out.println(binarysearchforfirstgreaternumindex(num,","system.out.println(binarysearchforfirstgreaterorequalnumindex(num,","system.out.println(binarysearchforfirstlessorequalnumindex(num,","system.out.println(binarysearchwithoutduplicates(nums,","system.out.println(detectcycle(node1).val);","system.out.println(find(15,","system.out.println(findminindex(nums));","system.out.println(getspace(height","system.out.println(replacespace1(str));","system.out.println(replacespace2(str));","system.out.println(res1[0]","system.out.println(res2[0]","system.out.println(res3[0]","system.out.println(search(nums,","system.out.println(searchinsertionposition1(nums,","system.out.println(searchinsertionposition2(nums,","system.out.println(succe","system.out.println(taskscheduler(tasks,2));","t(n)","take","target","target)","target))","target);","target,","target.","target1","target1));","target2","target2));","target?","target在前半段","target大于基准则划掉基准所在的列，target小于基准则划掉基准所在的行，逐渐缩小范围","task","tasks,","tasks.","tasks.length);","testtim","there?","this.valu","thoughts:","throw","time","time.","time:","times.","tmp","tmp;","tmplist","tmplist,","tmplist.add(1);","tmplist.add(2);","tmplist.add(3);","tmplist.add(4);","tmplist.add(5);","tmplist.add(candidates[i]);","tmplist.add(nums[i]);","tmplist.clear();","tmplist.remove(tmplist.size()","tmpsubleft","tmpsubleft);","tmpsubright","to,","to;","togeth","too.","top","total","transact","transfer()","transfer();","transpos","transpose(int[][]","transpose(matrix);","travers","tree","tree,","tree.","tree:","tree:\");","tree;","treenod","treenode(pre[prestart]);","treenode(preorder[prestart]);","tri","true","true;","tsinghua","twice","twice.","two","twoqueuestostack","twoqueuestostack()","twostackstoqueu","twostackstoqueue()","twosum1(int[]","twosum2(int[]","twosum3(int[]","undo","uniqu","uniquepaths(int","unknown","unlimit","unsort","up","up:","updownreverse(matrix);","updownreverse2(matrix);","us","used)","used);","used[i]","val","val);","val.length();","val;","valid,","valu","value)","value,","value.","value:","value;","value[0,n","value的对应关系，期待index==valu","vertic","visit","visited[start]","void","vote","water","water.","way","well","what.","while(problem","white","white,","whole","whose","without","work","write","x","x)","x,","x;","x，x)","ye","z","zero","{","{0,","{0,0,1,1,1,2,2,3,3,4};","{1,","{1,2,2,2,4,8,10}，查找2，返回1的下标0；查找3，返回最后一个2的下标3；","{1,2,2,2,4,8,10}，查找2，返回4的下标4；","{1,2,2,2,4,8,10}，查找2，返回最后一个2的下标3","{1,2,2,2,4,8,10}，查找2，返回最后一个2的下标3；查找3，返回最后一个2的下标3；","{1,2,2,2,4,8,10}，查找2，返回第一个2的下标1；","{1}","{2,","{3,","{4,","{4,5,6,7,8,1,2,3};","{4}","{6,","{空}","||","}","}*/","},","};","~","​","−1,","−2,","−3,","−5,","≤","⌊","⌋","【1.1的改进】","【1.2的改进：1.2最后的返回加一个判断条件】","【1.2的改进：1.2的前一个数就是1.5的结果】","【1.3的改进：1.3最后的返回加一个判断条件】","【1.3的改进：1.3的下一个数就是1.4的结果】","【1.5和1.6的改进】","一个输入有且仅有一个输出，一个元素最多只能用一次","一位位地比较，用1（1自身左移运算，其实后来就不是1了）和n的每位进行位与","一只青蛙一次可以跳上1级台阶，也可以跳上2级……它也可以跳上n级。求该青蛙跳上一个n级的台阶总共有多少种跳法。","一只青蛙一次可以跳上1级台阶，也可以跳上2级。求该青蛙跳上一个n级的台阶总共有多少种跳法（先后次序不同算不同的结果）。","一毛一样的算法，但是时间空间都秒杀java的c++：","三者最大值","上一层继续做如上操作，知道所有顶点都访问过。","上的值给右","下的值给左","不sort也可以，没说tmplist中的数要按大小顺序排列","不在正确位置上的数是指我作为nums[i]或nums[j]有nums[i]","不要忘记随机选一个数和最后一个数nums[hi]换作为基准点，nums[hi]一直呆在大于队列中，最后不要忘了把nums[hi]和nums[more]调换，放回到等于队列中。","两个以及以上个0的时候product全为0","两个变量i,j分别表示subarray的首尾位置，再遍历算出[i,j]之间的和","中","中序遍历","中，通过","为0表示没有从i到j的有向边","举例，13表达为二进制1101。","二分查找的各种变形总结","二分查找的思想：二分查找总结","二分查找的改进的具体分析参见《数据结构邓俊辉第三版》p56","二叉树层次遍历","二叉树节点的定义","二叉树遍历算法总结","二维数组中的查找","二进制中1的个数","五个节点","仅用一列来记录","从i=0开始看nums[i]是否==i，","从startindex开始可以走0","从前到后遍历链表，并用数组存储，最后转换成arraylist","从前往后遍历数组，如果是上升的就正常压入栈中，","从右边起查找第一个小于某个数的下标","从右边起查找第一个小于等于某个数的下标","从尾到头打印链表","从左到右用i遍历原数组，用j记录该放到哪个位置，","从该顶点的邻接顶点中选择一个，继续这个过程（即再寻找邻接结点的邻接结点），一直深入下去，直到一个顶点没有邻接结点了，涂黑它，表示访问过了","从队列首部选出一个顶点，并找出所有与之邻接的结点，将找到的邻接结点放入队列尾部，将已访问过结点涂成黑色，没访问过的结点是白色。如果顶点的颜色是灰色，表示已经发现并且放入了队列，如果顶点的颜色是白色，表示还没有发现","从顶点1开始做深度搜索：","从顶点1开始进行广度优先搜索：","从顶点2回溯到顶点1，并终止于顶点1","从顶点3回溯到顶点2，继续访问顶点5，并且终止于顶点5","从顶点4开始访问，并终止于顶点4","从顶点5回溯到顶点2，并且终止于顶点2","以下m行，各包含两个整数：查询区间的左、右边界a和b。","以左下角为基准进行范围的缩小，查找的范围为行在[0,i]，列在[j,n","以本题类比于最大子数列问题的变种，prices[i]","以次数最多的char满足n间隔算出总数为","优先级队列","优化：其实storestack栈只需要存数就可以了，不需要存left,right指针，所以只需要用一个stack","但是没有利用到n+1个数都在[1,n]之间的条件","但是要考虑到有0的情况，一个0的时候除了这个0位置的product不为0，其他位置的product都为0","使得所有的奇数位于数组的前半部分，所有的偶数位于数组的后半部分，","例如price","例如数组{3,4,5,1,2}为{1,2,3,4,5}的一个旋转，该数组的最小值为1。","例如输入前序遍历序列{1,2,4,7,3,5,6,8}和中序遍历序列{4,7,2,1,5,3,8,6}，则重建二叉树并返回。","例如，如果输入长度为7的数组{2,3,1,0,2,5,3}，那么对应的输出是第一个重复的数字2。","例如，对一个数列","例，int[]","例：int[]","依次访问过顶点1,2,3后，终止于顶点3","倒的两个限制：","假设输入的前序遍历和中序遍历的结果中都不含重复的数字。","停止的位置是startindex","先压右后压左，弹出为先弹左后弹右","先压右后压左，弹出为先弹左后弹右)","先固定指针1，用尾指针去找与头指针相同的数，找到则返回，","先对左子树进行后序遍历，再对右子树进行后序遍历，再打印自己","先序中序后序中的“序”指的是打印根的顺序。","先序遍历","先打印自己","先把intervals按start从小到大排序，然后用linkedlist","先排出现次数多的，再排出现次数少的","先进先出，用队列实现。弹一个出来，把左边右边加进去","全部会初始化为fals","关于中间的怎么处理自己没想到通过是否跨越来分","关于先序遍历、中序遍历、后序遍历的递归和非递归版本以及层序遍历的总结。","关于冒泡排序、插入排序、选择排序、归并排序、快速排序、堆排序的总结。","其中要求j","其和为6。","其实，二分查找看起来so","内存：256","再把allproduct/nums[i]放在product[i]处","再求跨越中间点的maxsubcrossmid","再继续遍历剩下的数组寻找下一个下降的数，得到的插入的位置中最小的就是lo","冒泡排序","写冒泡排序自己的错误：","写归并排序的时候自己的几个错误：","写快排的时候自己的几个错误：","写选择排序自己的错误：","准备两个栈，一个push栈，一个pop栈","则差额","初始i=0,j=0,遇到不为0的就放到j位置，j++，i遍历完成后，j后面的全补0","初始p1指向nums[0],p2指向nums[1]，","初始条件下所有节点为白色，选择一个作为起始顶点，按照如下步骤遍历：","初始状态，从顶点1开始","初始状态，从顶点1开始，队列","前面i已经在全局中被定义了，后面写for","前面n","前面一段的maxcur要是是负数，还不如不要前面那段以当前值作为起始","剑指offer","加一个判断条件变成第一个等于某个数的下标","加数据入push栈，取数据从pop栈中拿","压栈","参考https://leetcode.com/problems/shortest","参考https://www.geeksforgeeks.org/divid","参考文末图","参见二分查找变形总结的1.8","又习惯性地加了int，重复定义了变量。","取max为三者最大值返回","变态跳台阶","另外用一个数组","只剩一个数，如果大于它则插在它后面，返回它的坐标+1","只要满足以上两个限制，倒数据的行为可以发生在任何时刻","只需要遍历一遍，对于每一个num算出remain，把remain作为k在map中查有没有这个","可能第一个节点就是入环节点，应该把检测放在前面","右","右(先序：用栈实现，弹出一个节点作为当前节点，打印当前节点，然后对于当前节点有右先压右，有左后压左。先压右后压左，弹出为先弹左后弹右)","右的值给下","各点的坐标、查询区间的边界a、b，均为不超过10^7的非负整数","各点的坐标互异","同理反向遍历在下降的中找上升的数的插入的位置，得到的最大的位置就是hi","后三种解答参考https://leetcode.com/problems/shortest","后序遍历","后序：左","向后移必须从后往前移动，不然前面的向后移会覆盖后面的值","向左走","和已经排序的数列进行对比，遍历两遍找出lo,hi","回溯到这个涂黑顶点的上一层顶点，再找这个上一层顶点的其余邻接结点，继续如上操作，如果所有邻接结点往下都访问过了，就把自己涂黑，再回溯到更上一层。","因为","因为tmplist后面一直在修改，我们只想把现在的副本放进lists中","因为循环中有j+1作为索引，所以j的边界结束值是j","因为最小的值要插入到最前的位置如i，第i位置原有的值后移，第i位置要记入重排的区间内","固定一端的最大子数列问题","在一个二维数组中（每个一维数组的长度相同），每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。请完成一个函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。","在一个长度为n的数组里的所有数字都在0到n","在中序中，左子树是[instart,","在先序中，根是prestart，左子树是[prestart","在全局定义了minindex的起始值是0，后面忘记了应该是i，而不是一直是0，应该把minindex放在for循环中赋值，每次进入for循环都有不同的minindex","在有序数组断节后找到min数的index","基于当前情况做深度搜索(一步步走到底)","基本回溯能实现，skip","基本就是出队的顶点变成黑色，在队列里的是灰色，还没入队的是白色。","堆","堆排序","大家都知道斐波那契数列，现在要求输入一个整数n，请你输出斐波那契数列的第n项（从0开始，第0项为0）。n","如何用数组实现栈","如何用数组实现队列","如何用栈实现队列","如何用栈来实现队列，如何用队列来实现栈，如何用数组来实现栈和队列。","如何用队列实现栈","如果nums[]中的每个数都>=nums.length","如果nums[i]==v(v!=i)，则看nums[v]，如果nums[v]==v则找到两个==v的数，则将v返回","如果nums[j]","如果nums[v]!=v，则将nums[i]与nums[v]位置交换，期望把每个数都放在index==value的正确位置上","如果push开始往pop中倒数据，一次要倒完","如果target==nums[mid]，虽然lo","如果target大于数组最后一个元素，lo最后变为nums.length，即没有元素大于target，需要返回","如果不是同一个则分别再数两者出现的次数，返回出现次数多的那个元素作为整体的major","如果中间包含lastindex则表示可以从startindex走到lastindex","如果左右最多的元素是同一个则向上层返回这个结果，","如果是下降的就把栈中的数倒出来倒到合适的位置（>=栈顶）再将这个数压入栈中，记录这个数插入的位置，","如果有将index返回","如果没有重叠，直接将res.add(interval)","如果要求不修改原数组，拷贝一份之后再排序再遍历，时间复杂度不变，空间复杂度变为o(n)","如果这个数=","如果这个数>sum，那么取这个数，","存储所有的","存完把所有栈中的元素打印","完全二叉树","完全二叉树是一种逻辑结构，实际存储在数组中，nums[i]的左节点是nums[2","完整的程序：","对于先序左右互换得到中","对于每一个数出现的次数用一个map存储，key为数，value为该数出现的次数","对于每次查询的区间[a,","对左子树进行中序遍历，打印自己，对右子树进行中序遍历","对每次查询，输出落在闭区间[a,","寻求index","将[i,...,j","将起始结点放入队列中。","小仙女算法修仙之路","小和为0，count也需要+1","就算minprice出现在最后，由于最后只返回maxprofit，没有更新maxprofit还是不影响结果","层序遍历","左","左右互换得到中","左右分治找到出现次数最多的元素，","左右子树各分别二分，递归到超出范围则向上返回","左子树","左的值给上","左，","左，打印的时候不打印，存到栈里去，存完把所有栈中的元素打印","并保证奇数和奇数，偶数和偶数之间的相对位置不变。","广度优先搜索在进一步遍历图中顶点之前，先访问当前顶点的所有邻接结点。","广度优先搜索（bfs）","序号:[0]","弹出一个节点","归并排序","当m=0时清空这个候选人的信息，用m记录数组中的下一个候选人","当前节点不为空","当前节点不为空或者栈不为空","当前节点不为空，当前节点压入栈，当前节点往左跑（左边界一压压一溜）；","当前节点为空但是栈不为空","当前节点为空，从栈中拿一个打印，当前节点向右跑","当前节点为空，栈不为空","当前节点向右走","循环结束时，lo为>=target的最小下标，故lo","循环结束时，lo为>target的最小下标，故lo","快指针一次走两步，慢指针一次走一步","快指针回到起点，快指针和慢指针都一次走一步","快速排序","思路是利用二分查找的一个改进，在有序数组中找到≥a的第一个元素和≤b的最后一个元素。","思路：","思路：两两比较，大的沉底。i是轮数，在进行第i轮的时候确定了最大的i个值；如果一轮下来都没有交换证明已经有序","思路：像小孩子插扑克牌一样，要一张张比，把第1张和第0张比较，把第2张和[0,1]张比较，从后往前把第i张牌和第i","思路：先对左子树进行后序遍历，再对右子树进行后序遍历，再打印自己","思路：先打印自己，再对左子树进行先序遍历，再对右子树进行先序遍历","思路：先进先出，用队列实现。弹一个出来并打印，然后把分别左儿子右儿子加进去","思路：准备一个start变量一个end变量，一开始都指向0位置，再准备一个cursize变量约束start和end的行为，cursize表示队列已有元素的个数。start和end无直接关系（解耦），start或者end都是每次和cursize比较是否越界。end代表当要加一个数，我把新来的数放在end位置，start代表当用户让我取出一个数，我把start位置的数取出给用户，类似于加数队尾排队打饭，取数队头打完饭走人。end一旦到底就返回开头，start一直在追end，curs","思路：准备一个栈顶指针index，数组的大小设置为栈的大小为initsize。当要加一个数，index的含义为如果新来一个数，我把新来的数放在index位置。当用户让我弹出一个数，我弹出的数是index的前一个数（前一个数也就是位置处于index下面一个数，假设数组是竖直排列的，最底下是nums[0]）。index","思路：准备两个队列，一个data队列，一个help队列，压数的话压入data队列，弹出数将data队列中的数除了最后一个数之外其他的压入help队列，将最后一个数返回用户，再将data和help引用互换","思路：分治后从下往上两两归并，借助mergesortpart分别将左边和右边sort，再将两边merge起来。","思路：后序：左","思路：对左子树进行中序遍历，打印自己，对右子树进行中序遍历","思路：用栈实现队列结构，准备两个栈，一个push栈，一个pop栈，加数据入push栈，取数据从pop栈中拿。总体思路是进push的数据倒入pop栈中，两次逆序等于顺序。倒的两个限制：（1）","思路：用栈实现，弹出一个节点作为当前节点，打印当前节点，然后对于当前节点有右先压右，有左后压左。先压右后压左，弹出为先弹左后弹右","思路：用栈实现，当前节点不为空或者栈不为空继续while（只有当前节点为空，栈也为空才退出循环）：当前节点不为空，当前节点压入栈，当前节点往左跑（左边界一压压一溜）；当前节点为空，从栈中拿一个打印，当前节点向右跑","思路：遍历[0,n","总体思路是进push的数据倒入pop栈中，两次逆序等于顺序","我们可以用21的小矩形横着或者竖着去覆盖更大的矩形。请问用n个21的小矩形无重叠地覆盖一个2*n的大矩形，总共有多少种方法？","所以先序中左子树是[prestart","所以左子树的总节点个数leftlength","所以当i=2，第二层递归判断的时候!used(1)就变成了true，不会再继续递归下去，跳出循环","打印","打印函数：","打印的时候不打印，存到栈里去，","扫描一次整个数列的所有数值，在每一个扫描点计算以该点数值为结束点的子数列的最大和（正数和）。","找出数组中重复的数字","找到了一个符合要求的tmplist之后不会再在tmplist上添加","找到第一个不在正确位置上的数lo和最后一个不在正确位置上的数hi","找到第一个小于max的值，则max应该在的位置是hi","把一个数组最开始的若干个元素搬到数组的末尾，我们称之为数组的旋转。","把上存起来","把排序好的数组分成两部分，两部分互换顺序","把矩阵像剥洋葱一样分成一层一层的，每层都是正方形四条等长的边，边长度设为n，层数为j，最外面一层为0，","把首末点分别定为lo,hi，每次比较求出最大的maxwat","按出现次数从大到小重新排列，并把字符数组转换成int数组，","按照同样的方法处理队列中的下一个结点。","排序算法总结","描述","插入map","插入排序","数值的整数次方","数组中某些数字是重复的，但不知道有几个数字是重复的。也不知道每个数字重复几次。请找出数组中任意一个重复的数字。","数轴上有n个点，对于任一闭区间","整数4个字节，32位，当flag左移超过了32位，前面被砍断，后面32位为0则结束","斐波那契数列","斐波那契数列，时间复杂度o(n)，空间复杂度o(1)","方法2参见：二分查找总结","旋转数组的最小数字","无论在哪里停止，m所对应的候选人就是票数超过半数的那个major","无重复数字，二分查找出target的下标","无重复数字，找target的下标","时间复杂度","时间复杂度master公式，t(n)=2t(n/2)+2n","时间复杂度o(2的n次方)，空间复杂度o(1)","时间复杂度o(logn)，空间复杂度o(1)","时间复杂度o(m+n)，空间复杂度o(1)","时间复杂度o(n)","时间复杂度o(n)+o(nlogn)+o(n)=o(nlogn)","时间复杂度o(n),空间复杂度o(1)","时间复杂度o(n)，空间复杂度o(1)","时间复杂度o(n)，空间复杂度o(n)","时间复杂度o(nlogn)，空间复杂度o(1)","时间复杂度o(nlogn)，空间复杂度o(1)，修改了原数组","时间复杂度o(nlogn)，空间复杂度o(logn)，额外空间复杂度用来记录logn个切分点","时间复杂度o(n²),空间复杂度o(1)","时间复杂度o(n²)，空间复杂度o(1)","时间复杂度o(n²)，空间复杂度o(m*n)","时间复杂度o(n²)，空间复杂度o(n)","时间复杂度o(n³)，不能ac，超时","时间复杂度：o(nlogn)","时间复杂度：o(nlogn)，最好时间复杂度o(nlogn)","时间复杂度：o(n²)，最好时间复杂度o(n)","时间复杂度：o(n²)，最好时间复杂度o(n²)","时间复杂度：排序o(nlogn)+","时间：2","是个online的算法，随时停止能随时出结果","替换空格","最后我要说，我爱c++，c++使我快乐！","最大子数列问题的一个变种是：如果数列中含有负数元素，允许返回长度为零的子数列。","最简单的做法，根据每一个数再遍历一次","有右先压右","有左后压左","有序数组断成两节互换位置查找最小值的下标","未找到","本gitbook是按刷题的tag分类，全书用java实现，一般每个题里都有2","本书github地址：https://github.com/lmtsunnie/gitbook","查找","查找3，返回4的下标4；查找4，返回4的下标4。如果没有大于等于target的元素，返回","查找3，返回4的下标4；查找4，返回8的下标5。如果没有大于key的元素，返回","查找4，返回4的下标4。如果没有>","查找4，返回4的下标4。如果没有等于target的元素，返回","查找4，返回最后一个2的下标3。如果没有>","查找>=target的最小下标","查找>target的最小下标","查找target出现的次数","查找target的最大下标","查找target的最小下标","查找一个数出现的次数","查找最后一个等于某个数的下标，即从右边起查找第一个等于某个数的下标","查找第一个大于某个数的下标","查找第一个大于等于某个数的下标","查找第一个等于某个数的下标","栈和队列的转换/用数组实现栈和队列","栈的大小，也是数组的大小","样例","根","每个数可以在或者不在tmplist中，或者说n个整数的集合的子集有2^n个，所以时间复杂度o(2^n)","求左边的maxsubleft再求右边的maxsubright,","汇总和测试函数","没找到则头指针后移一步，继续用尾指针找与头指针相同的数","没有0的时候遍历两遍，有0的时候遍历三遍","没有逆序对","注意i的范围是[0,","注意不能用n向右移来和1比较，因为如果n是负数，向右移高位会补1，会增加1的个数","注意倒出的数并没有再倒回数组中，因为最终有用的是lo所以插入到lo前面来的数才需要记录，倒出的是后面的数，不需要管","注意到数组是有序的，且没有重复元素，想到用二分查找","注意：不能lists.add(tmplist);","注意：以下代码均采用左右均为闭区间，即hi为最后一个元素下标，而不是元素个数。","注意：最后一个数要加回help中","注意：用位运算交换两个数有一个问题，就是当lo","注意：第一个小于等于某个数的下一个数就是第一个大于某个数的数","深度优先搜索在搜索过程中访问某个顶点后，需要递归地访问此顶点的所有未访问过的相邻顶点。","深度优先遍历（dfs）","然后对于当前节点有右先压右，有左后压左。","然后改成了我非常不愿意写的c++语言的版本，由此也是发现了c++的强大，做人还是不能偷懒啊。c++虽然难用，指针引用傻傻分不清楚，而且stl在很多情况下会被禁用，但是无奈人家处在底层效率那叫一个高。没有优化的时候就拿了75分，把cin,cout改成scanf,printf之后就能轻松拿满分了。看来这辈子是套不过c++的魔掌了。","理解!used(i","用int[n][m]矩阵记录到达坐标为(i,j)的paths数量","用templist存储要放入list中的单元，回溯之后注意撤回上一步","用一副图来表达这个流程如下：","用两个栈实现队列","用两个栈来实现一个队列，完成队列的push和pop操作。","用到了“最佳子结构”（以每个位置为终点的最大子数列都是基于其前一位置的最大子数列计算得出），可看成动态规划。","用图可以更清楚的表达这个过程：","用栈实现队列结构","用栈实现，弹出一个节点作为当前节点，打印当前节点，","用栈实现，当前节点不为空或者栈不为空继续while（只有当前节点为空，栈也为空才退出循环）：","用栈来模仿插入排序的过程","由于maxcur最小是0，如果x太小，使maxcur+x是个负数，就不要这段，取0","由于一定存在且仅有一个major","由于只要保证maxprofit是最大的profit就可以，maxpric","由于数组是已经排好序的，用j遍历数组，用i存储不重复的元素。j从1开始，i从0开始。","相加即为所求","看成9颗树，子节点是在父节点的基础上加一位（*10","矩阵覆盖","稳定性：可以实现成稳定的","稳定性：无法实现成稳定的","空间复杂度logn","空间复杂度o(n)","空间复杂度：o(1)","空间复杂度：o(logn)（因为递归深度是logn，用用来记录切分点）","空间复杂度：o(n)","第0列,j","第一个大于target的数在右半段","第一个小于等于2的数的下标是3，第一个大于2的数的下标是4","第一层递归","第一行包括两个整数：点的总数n，查询的次数m。","第三层递归","第二层递归","第二行包含n个数，为各个点的坐标。","等于它返回它的坐标，小于它代替它的位置也是返回它的坐标","答案区方法2：","算出边界条件","类比于最大子数列：最大子数列问题的目标是在数列的一维方向找到一个连续的子数列，使该子数列的和最大。","终止条件：j向后遍历没有再找到奇数。","结束条件","结点5对于1来说不可达。","给一个邻接矩阵实现bfs输出","给一个邻接矩阵实现dfs输出","给出一个排好序的数组，[1,2,2]","给定一个double类型的浮点数base和int类型的整数exponent。求base的exponent次方。","给定一个不含有重复数字的整数的集合nums[]，返回其全排列","给定一个不含重复数字的整数数组candidates和一个target，candidates中的数每个可以使用一次或多次，找到所有和为target的集合","给定一个可能含有重复数字的整数数组candidates和一个target，candidates中的数每个只能使用至多一次，找到所有和为target的集合","给定一个可能含有重复数字的整数的集合nums[]，返回其不重复的全排列","给定一个可能含有重复数字的整数集，输出它的所有子集","给定一个数字n，字典序输出[1,","给定一个没有重复数字的整数集，输出它的所有子集","联系邮箱：lmtsunnie@163.com","自己没有考虑到remain>","自想1：","自想1：二分查找递归版","自想1：使用函数","自想1：利用nums已经是有序的，正向搜找到第一个，反向搜找到最后一个","自想1：利用昨天写的leetcode121中提到的kadane算法","自想1：回溯（超时）","自想1：时间复杂度o(n)，空间复杂度o(1)","自想1：纯数学方法找规律","自想1：连乘","自想2改成要求的格式","自想2：二分查找","自想2：长度延长替换","自想：二分的思路，先序分成[根|左|右]，中序分成[左|根|右]，根在先序一定是preorder[0]，找到根在中序中inorder[inroot]","若target","范围查询(range)","要利用动态规划从前算到后，利用每一个前面已经算过的结果","要想保证原有次序，则只能顺次移动或相邻交换。","要排除lo","见英文题面","解答连接","解答链接","讨论区方法1：","讨论区：","讨论区：二分搜索迭代版","讨论区：分成3种情况查找，主要是找到minindex","讨论区：用位运算代替连乘","讨论区：递归","记一个结论","记一个结论：把完全二叉树逻辑结构存在数组实际结构中，nums[i]的左节点是nums[2","记下即将被覆盖的最后一个值","记录极值点，找到极值点区间内的最小和最大的坐标即为需要重排的区间","访问1的邻接顶点，1出队变黑，2,3入队，队列","访问2的邻接结点，2出队，4入队，队列","访问3的邻接结点，3出队，队列","访问4的邻接结点，4出队，队列","该子数列由两部分组成：【以前一个位置为结束点】的最大子数列、该位置的数值。","请实现一个函数，将一个字符串中的每个空格替换成“%20”。例如，当字符串为we","调整数组顺序使奇数位于偶数前面","距离在缩短，只有移动短的才可能将min(nums[i],nums[j])增大，从而将maxwater增大","跳台阶","转置函数","输入","输入一个整数数组，实现一个函数来调整该数组中数字的顺序，","输入一个整数，输出该数二进制表示中1的个数。其中负数用补码表示。","输入一个链表，按链表值从尾到头的顺序返回一个arraylist","输入一个非减排序的数组的一个旋转，输出旋转数组的最小元素。","输入某二叉树的前序遍历和中序遍历的结果，请重建出该二叉树。","输出","输出4545，因为tmplist后面改变了。","输出4545，因为后面tmplist改变了，只能把副本装进去，不能把自己装进去","输出顺序：[[],[1],[1,2],[1,2,3],[1,3],[2],[2,3],[3]]","这是清华大学数据结构mooc的配套练习的第一题，一开始看到这题以为很水，后来我就哭了。。。终究是我太弱。","这种都是ok的，但当第二层递归i扫到的是第二个\"2\"，情况就不一样了","这里要特别注意~返回任意重复的一个，赋值duplication[0]","这里采用顺次移动","逆向时正常应该下降，但是如果上升则记录上升的值","逆着看","选择排序","选择起始顶点涂成灰色，表示还未访问","逐渐向里对每一层四个四个数分组进行旋转","递归从后算到前时间复杂度o(2的n次方)","递归深度为n，空间复杂度o(n)","递归版中序遍历","递归版先序遍历","递归版后序遍历","递归的深度是o(n)在每个切分点要记录一次start，也使用了辅助空间tmplist为o(n)，所以额外空间复杂度o(n)*1","通过&1和>>1来逐位读取1101，为1时将该位代表的乘数累乘到最终结果。","遇到每一个都比较且试图更新minprice和maxprofit","遍历intervals，每次拿res.getlast().end和interval.start比较，如果有重叠则更新res.getlast().end","遍历一遍，时间复杂度o(n)，空间复杂度o(1)","遍历一遍，用m记录第一个候选者的票数，初始为1，如果下一个是这个候选者那就m++，如果不是则m","遍历一遍，算出所有数的积存在allproduct中","重建二叉树","问题转化为求prices[j]−prices[i]的最大值,","队列中的元素为int类型。","限制","随机得到一个在[lo,","随机选取基准点和最后一个数交换","非递归版中序遍历","非递归版先序遍历","非递归版后序遍历","首先我是用java写了一个o(n)的版本，结果发现纳尼？连一半的测试用例都通不过就会超时。然后写了二分查找的版本，还是只能得60分，这可是个o(logn)的算法呀。平时写leetcode的时间限制太松了，都几乎不会碰到超时的情况。优化之后java的版本最高得了80分。","首先要明白i作为数组内序号，i是唯一的","首先选择一个顶点作为起始结点，并将其染成灰色，其余结点为白色。","（2）","，k为从头到某一个数的和，v为这个和出现的次数","，由于头被换成了一个比较小的数，于是要做一次heapify()调成大根堆，再重复每次将堆的头和堆的最后一个数交换。"],"pipeline":["stopWordFilter","stemmer"]},"store":{"./":{"url":"./","title":"Introduction","keywords":"","body":"小仙女算法修仙之路\n本gitbook是按刷题的Tag分类，全书用Java实现，一般每个题里都有2-3种做法，整理成gitbook方便自己查阅，也希望能与小伙伴们共同刷题共同进步。\n本书github地址：https://github.com/lmtsunnie/gitbook-algorithms\n联系邮箱：lmtsunnie@163.com\n"},"Array/leetcode1.html":{"url":"Array/leetcode1.html","title":"LeetCode1 Two Sum","keywords":"","body":"\nGiven an array of integers, return indices of the two numbers such that they add up to a specific target.\nYou may assume that each input would have exactly one solution, and you may not use the same element twice.\nExample:\nGiven nums = [2, 7, 11, 15], target = 9,\nBecause nums[0] + nums[1] = 2 + 7 = 9,\nreturn [0, 1].\n\npackage array;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class leetcode1TwoSum {\n    /*=====================================================================================*/\n\n    /*\n    自想1：\n    一个输入有且仅有一个输出，一个元素最多只能用一次\n    最简单的做法，根据每一个数再遍历一次\n    时间复杂度O(n²),空间复杂度O(1)\n    */\n    public static int[] twoSum1(int[] nums, int target) {\n        int remain;\n        for (int i = 0; i 存储所有的\n    只需要遍历一遍，对于每一个num算出remain，把remain作为K在map中查有没有这个\n    如果有将index返回\n    时间复杂度O(n)，空间复杂度O(n)\n    * */\n    public static int[] twoSum2(int[] nums, int target) {\n        Map map = store(nums);\n        int remain;\n        for (int i = 0; i  i) {\n                return new int[]{i, map.get(remain)};\n            }\n        }\n        return null;\n    }\n\n    public static Map store(int[] nums) {\n        Map map = new HashMap<>();\n        for (int i = 0; i 插入map\n    * 时间复杂度O(n)，空间复杂度O(n)\n    * */\n    public static int[] twoSum3(int[] nums, int target) {\n        Map map = new HashMap<>();\n        int remain;\n        for (int i = 0; i \n"},"Array/leetcode11.html":{"url":"Array/leetcode11.html","title":"LeetCode11 Container With Most Water","keywords":"","body":"\nGiven n non-negative integers a1, a2, ..., an , where each represents a point at coordinate (i, ai).\nn vertical lines are drawn such that the two endpoints of line i is at (i, ai) and (i, 0). Find two lines, which together with x-axis forms a container, such that the container contains the most water.\nNote: You may not slant the container and n is at least 2.\n\n\n\n\nThe above vertical lines are represented by array [1,8,6,2,5,4,8,3,7]. In this case, the max area of water (blue section) the container can contain is 49.\nExample:\nInput: [1,8,6,2,5,4,8,3,7]\nOutput: 49\n\npackage array;\n\npublic class leetcode11ContainerWithMostWater {\n\n    /*=====================================================================================*/\n    /*自想1：\n    * 把首末点分别定为lo,hi，每次比较求出最大的maxWater\n    * 时间复杂度O(n²)，空间复杂度O(1)\n    * */\n    public static int containMaxWater1(int[] nums) {\n        if (nums == null || nums.length  maxWater ? min * (hi - lo) : maxWater;\n            }\n        }\n        return maxWater;\n    }\n    /*=====================================================================================*/\n    /*Solution区方法2：\n    * lo, hi的起始值分别为0,n-1\n    * 距离在缩短，只有移动短的才可能将min(nums[i],nums[j])增大，从而将maxWater增大\n    * 遍历一遍，时间复杂度O(n)，空间复杂度O(1)\n    * */\n    public static int containMaxWater2(int[] nums) {\n        int maxWater = 0, lo = 0, hi = nums.length - 1;\n        while (lo  maxWater ? min * (hi - lo) : maxWater;\n            if (nums[lo] \n"},"Array/leetcode26.html":{"url":"Array/leetcode26.html","title":"LeetCode26 Remove Duplicates From Sorted Array","keywords":"","body":"\nGiven a sorted array nums, remove the duplicates in-place such that each element appear only once and return the new length.\nDo not allocate extra space for another array, you must do this by modifying the input array in-place with O(1) extra memory.\nExample 1:\nGiven nums = [1,1,2],\nYour function should return length = 2,\nwith the first two elements of nums being 1 and 2 respectively.\nIt doesn't matter what you leave beyond the returned length.\nExample 2:\nGiven nums = [0,0,1,1,1,2,2,3,3,4],\nYour function should return length = 5,\nwith the first five elements of nums being modified to 0, 1, 2, 3, and 4 respectively.\nIt doesn't matter what values are set beyond the returned length.\n\nJava：\npackage array;\n\npublic class leetcode26RemoveDuplicatesFromSortedArray {\n\n /*=====================================================================================*/\n    /*\n    * 自想1：\n    * 由于数组是已经排好序的，用j遍历数组，用i存储不重复的元素。j从1开始，i从0开始。\n    * 如果nums[j] != nums[i]那么把j位置的数赋值给++i位置的数（++i位置是重复的位置，覆盖也没关系）\n    * j遍历完，由于题目说了后面的数不用管，函数直接返回i的大小\n    * */\n    public static int removeDuplicatesFromSortedArray(int[] nums) {\n        int i = 0, j = 1;\n        for (; j \nC++：\n#include \n#include \n\nusing namespace std;\n\nint removeDuplicates(vector& nums) {\n    if (nums.size() == 0) return 0;\n    int i = 0, j = 1;\n    for (; j  nums;\n    int array[] = {0,0,1,1,1,2,2,3,3,4};\n    int length = sizeof(array)/ sizeof(array[0]);\n    for (int i = 0; i \n"},"Array/leetcode33.html":{"url":"Array/leetcode33.html","title":"LeetCode33 Search in Rotated Sorted Array","keywords":"","body":"\nSuppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.\n(i.e., [0,1,2,4,5,6,7] might become [4,5,6,7,0,1,2]).\nYou are given a target value to search. If found in the array return its index, otherwise return -1.\nYou may assume no duplicate exists in the array.\nYour algorithm's runtime complexity must be in the order of O(log n).\nExample 1:\nInput: nums = [4,5,6,7,0,1,2], target = 0\nOutput: 4\nExample 2:\nInput: nums = [4,5,6,7,0,1,2], target = 3\nOutput: -1\n\n二分查找的思想：二分查找总结\npackage array;\n\npublic class leetcode33SearchInRotatedSortedArray {\n    /**\n     * 讨论区：分成3种情况查找，主要是找到minIndex\n     * 时间复杂度O(nlogn)，空间复杂度O(1)\n     */\n    public static int search(int[] nums, int target) {\n        if (nums == null || nums.length  nums[0]) {\n            return binarySearch(nums, 0, smallNumIndex - 1 >= 0 ? smallNumIndex - 1 : nums.length - 1, target);\n        } else {\n            return binarySearch(nums, smallNumIndex, nums.length - 1, target);\n        }\n    }\n\n    public static int binarySearch(int[] nums, int lo, int hi, int target) {\n        while (lo > 1);\n            if (target  nums[mid]) {\n                lo = mid + 1;\n            } else {\n                return mid;\n            }\n        }\n        return -1;\n    }\n\n    public static int findMinIndex(int[] nums) {\n        int lo = 0, hi = nums.length - 1;\n        while (lo > 1);\n            // mid  hi：最小值在右半部分，不可能是自己了\n            } else if (nums[mid] > nums[hi]) {\n                lo = mid + 1;\n            } else {\n                return mid;\n            }\n        }\n        return lo;\n    }\n\n    public static void main(String[] args) {\n        int[] nums = {4,5,6,7,8,1,2,3};\n        System.out.println(findMinIndex(nums));\n        System.out.println(search(nums, 8));\n    }\n}\n\n"},"Array/leetcode34.html":{"url":"Array/leetcode34.html","title":"LeetCode34 Find First and Last Position of Element in Sorted Array","keywords":"","body":"\nGiven an array of integers nums sorted in ascending order,\nfind the starting and ending position of a given target value.\nYour algorithm's runtime complexity must be in the order of O(log n).\nIf the target is not found in the array, return [-1, -1].\nExample 1:\nInput: nums = [5,7,7,8,8,10], target = 8\nOutput: [3,4]\nExample 2:\nInput: nums = [5,7,7,8,8,10], target = 6\nOutput: [-1,-1]\n\n方法2参见：二分查找总结\npackage array;\n\npublic class leetcode34FindFirstAndLastPositionOfElementInSortedArray {\n\n    /**\n     * 自想1：利用nums已经是有序的，正向搜找到第一个，反向搜找到最后一个\n     * 时间复杂度O(n)，空间复杂度O(1)\n     */\n    public static int[] searchRange(int[] nums, int target) {\n        int[] res = {-1, -1};\n        for (int i = 0; i = 0; i--) {\n            if (nums[i] == target) {\n                res[1] = i;\n                break;\n            }\n        }\n        return res;\n    }\n\n    /**\n     * 自想2：二分查找\n     * 时间复杂度O(logn)，空间复杂度O(1)\n     */\n    public static int[] searchRange2(int[] nums, int target) {\n        int[] res = {-1, -1};\n        if (nums == null || nums.length == 0) {\n            return res;\n        }\n        int leftIndex = findLeftIndex(nums, target);\n        // nums中不存在值为target的数\n        if (leftIndex == -1) {\n            return res;\n        }\n        res[0] = leftIndex;\n        res[1] = findRightIndex(nums, target);\n        return res;\n    }\n\n    /**\n     * 1.2 查找第一个大于等于某个数的下标 加一个判断条件变成第一个等于某个数的下标\n     * 例：int[] a = {1,2,2,2,4,8,10}，查找2，返回第一个2的下标1；\n     * 查找3，返回4的下标4；查找4，返回4的下标4。如果没有大于等于target的元素，返回-1。\n     */\n    public static int findLeftIndex(int[] nums, int target) {\n        if (nums == null || nums.length > 1);\n            // target > 1);\n            // target  nums[mid]，target在右半段，\n                // 如果target==nums[mid]，虽然lo = mid + 1，但是最后在右半段没有找到更大的，target = 0 && nums[hi] == target? hi : -1;\n    }\n\n    public static void main(String[] args) {\n        int[] nums1 = {1, 2, 3, 3, 4, 4, 4, 5};\n        int[] nums2 = {1, 4, 4, 4, 4, 4, 4, 5};\n        int[] nums3 = {1, 4, 4, 5, 6, 7, 8, 9};\n        int[] res1 = searchRange2(nums1, 4);\n        int[] res2 = searchRange2(nums2, 4);\n        int[] res3 = searchRange2(nums3, 4);\n        System.out.println(res1[0] + \" \" + res1[1]);\n        System.out.println(res2[0] + \" \" + res2[1]);\n        System.out.println(res3[0] + \" \" + res3[1]);\n    }\n}\n\n"},"Array/leetcode35.html":{"url":"Array/leetcode35.html","title":"LeetCode35 Search Insertion Position","keywords":"","body":"\nGiven a sorted array and a target value, return the index if the target is found.\nIf not, return the index where it would be if it were inserted in order.\nYou may assume no duplicates in the array.\nExample 1:\nInput: [1,3,5,6], 5\nOutput: 2\nExample 2:\nInput: [1,3,5,6], 2\nOutput: 1\nExample 3:\nInput: [1,3,5,6], 7\nOutput: 4\nExample 4:\nInput: [1,3,5,6], 0\nOutput: 0\n\npackage array;\n\npublic class leetcode35SearchInsertionPosition {\n    /*=====================================================================================*/\n\n    /*\n      自想1：二分查找递归版\n      注意到数组是有序的，且没有重复元素，想到用二分查找\n      时间复杂度O(logn)，空间复杂度O(1)\n    */\n    public static int searchInsertionPosition1(int[] nums, int target) {\n        return binarySearch(nums, 0, nums.length - 1, target);\n    }\n\n    public static int binarySearch(int[] nums, int lo, int hi, int target) {\n        // 只剩一个数，如果大于它则插在它后面，返回它的坐标+1\n        // 等于它返回它的坐标，小于它代替它的位置也是返回它的坐标\n        if (lo == hi) {\n            /*if (target  nums[lo]) {\n                return lo + 1;\n            } else return lo;*/\n            if (target > nums[lo]) return lo + 1;\n            else return lo;\n        }\n        int mid = lo + (hi - lo) / 2;\n        // target在前半段\n        if (target  nums[mid]) {\n            return binarySearch(nums, mid + 1, hi, target);\n        }\n        else return mid;\n    }\n\n    /*=====================================================================================*/\n\n    /*\n    讨论区：二分搜索迭代版\n    * */\n    public static int searchInsertionPosition2(int[] nums, int target) {\n        int lo = 0, hi = nums.length - 1;\n        int mid;\n        while (lo != hi) {\n            mid = (lo + hi) / 2;\n            // target在前半段\n            if (target  nums[mid]) {\n                lo = mid + 1;\n            } else return mid;\n        }\n        return target > nums[lo] ? lo + 1 : lo;\n    }\n\n    /*=====================================================================================*/\n\n    public static void main(String[] args) {\n        int[] nums = new int[]{1,3,5,6};\n        System.out.println(searchInsertionPosition1(nums, 5));\n        System.out.println(searchInsertionPosition1(nums, 2));\n        System.out.println(searchInsertionPosition1(nums, 7));\n        System.out.println(searchInsertionPosition1(nums, 0));\n\n        System.out.println(searchInsertionPosition2(nums, 5));\n        System.out.println(searchInsertionPosition2(nums, 2));\n        System.out.println(searchInsertionPosition2(nums, 7));\n        System.out.println(searchInsertionPosition2(nums, 0));\n    }\n}\n\n"},"Array/leetcode39.html":{"url":"Array/leetcode39.html","title":"LeetCode39 Combination Sum","keywords":"","body":"\nGiven a set of candidate numbers (candidates) (without duplicates) and a target number (target), find all unique combinations in candidates where the candidate numbers sums to target.\nThe same repeated number may be chosen from candidates unlimited number of times.\nNote:\nAll numbers (including target) will be positive integers.\nThe solution set must not contain duplicate combinations.\nExample 1:\nInput: candidates = [2,3,6,7], target = 7,\nA solution set is:\n[\n  [7],\n  [2,2,3]\n]\nExample 2:\nInput: candidates = [2,3,5], target = 8,\nA solution set is:\n[\n  [2,2,2,2],\n  [2,3,3],\n  [3,5]\n]\n\npackage backtracking;\n\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\n\nimport static format.printDoubleArrayList.printDoubleList;\n\npublic class leetcode39CombinationSum {\n/*=====================================================================================*/\n    /*讨论区：\n    自己没有考虑到remain> combinationSum(int[] nums, int target) {\n        List> list = new ArrayList<>();\n        // Arrays.sort(nums); 不sort也可以，没说tmpList中的数要按大小顺序排列\n        backtrack(list, new ArrayList<>(), nums, 0, target);\n        return list;\n    }\n\n    public static void backtrack(List> list, List tmpList, int[] nums, int start, int remain) {\n        if (remain (tmpList));\n        } else { // 找到了一个符合要求的tmpList之后不会再在tmpList上添加\n            for (int i = start; i \n打印函数：\npackage format;\n\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class printDoubleArrayList {\n    public static void printDoubleArray(int[][] arrays) {\n        for (int[] array : arrays) {\n            for (int i : array) {\n                System.out.print(i + \" \");\n            }\n            System.out.println();\n        }\n    }\n\n    public static void printDoubleList(List> lists) {\n        for (List list : lists) {\n            for (Integer i : list) {\n                System.out.print(i + \" \");\n            }\n            System.out.println();\n        }\n    }\n\n    public static void printDoubleArrayList(ArrayList> arrayLists) {\n        for (ArrayList arrayList : arrayLists) {\n            for (Integer i : arrayList) {\n                System.out.print(i + \" \");\n            }\n            System.out.println();\n        }\n    }\n\n    public static void main(String[] args) {\n        List> lists = new ArrayList<>();\n        lists.add(Arrays.asList(1,2));\n        lists.add(Arrays.asList(4,5,6));\n        lists.add(Arrays.asList(7,8,9,10));\n        printDoubleList(lists);\n        System.out.println(\"=======================================\");\n\n        ArrayList> arrayLists = new ArrayList<>();\n        arrayLists.add(new ArrayList(Arrays.asList(1,2,3,4)));\n        arrayLists.add(new ArrayList(Arrays.asList(4,5,6)));\n        arrayLists.add(new ArrayList(Arrays.asList(7,8)));\n        printDoubleArrayList(arrayLists);\n        System.out.println(\"======================================\");\n\n        List> lists2 = new ArrayList<>();\n        List tmpList = new ArrayList<>();\n        tmpList.add(1);\n        tmpList.add(2);\n        tmpList.add(3);\n        //lists2.add(tmpList);\n        lists2.add(new ArrayList<>(tmpList));\n\n        tmpList.clear();\n\n        tmpList.add(4);\n        tmpList.add(5);\n        //lists2.add(tmpList); 输出4545，因为后面tmpList改变了，只能把副本装进去，不能把自己装进去\n        lists2.add(new ArrayList<>(tmpList));\n        printDoubleList(lists2);\n    }\n}\n\n"},"Array/leetcode53.html":{"url":"Array/leetcode53.html","title":"LeetCode53 Maximum Subarray","keywords":"","body":"\nGiven an integer array nums, find the contiguous subarray (containing at least one number) which has the largest sum and return its sum.\nExample:\nInput: [-2,1,-3,4,-1,2,1,-5,4],\nOutput: 6\nExplanation: [4,-1,2,1] has the largest sum = 6.\nFollow up:\nIf you have figured out the O(n) solution,\ntry coding another solution using the divide and conquer approach, which is more subtle.\ndivide and conquer:\n关于中间的怎么处理自己没想到通过是否跨越来分\n参考https://www.geeksforgeeks.org/divide-and-conquer-maximum-sum-subarray/\n\npackage array;\n\npublic class leetcode53MaximumSubarray {\n  /*=====================================================================================*/\n\n    /*\n    自想1：利用昨天写的leetcode121中提到的Kadane算法\n    扫描一次整个数列的所有数值，在每一个扫描点计算以该点数值为结束点的子数列的最大和（正数和）。\n    该子数列由两部分组成：【以前一个位置为结束点】的最大子数列、该位置的数值。\n    maxTmp = max(maxTmp + x，x) 前面一段的maxCur要是是负数，还不如不要前面那段以当前值作为起始\n    max = max(maxTmp, max)\n    时间复杂度O(n)，空间复杂度O(1)\n     */\n    public static int maximumSubarray1(int[] nums) {\n        int max = Integer.MIN_VALUE;\n        int maxTmp = 0;\n        for (int num : nums) {\n            maxTmp = Math.max(maxTmp + num, num);\n            max = Math.max(max, maxTmp);\n        }\n        return max;\n    }\n\n    /*=====================================================================================*/\n    /*divide and conquer:\n      关于中间的怎么处理自己没想到通过是否跨越来分\n      参考https://www.geeksforgeeks.org/divide-and-conquer-maximum-sum-subarray/\n\n      求左边的maxSubLeft再求右边的maxSubRight,\n      再求跨越中间点的maxSubCrossMid\n      取max为三者最大值返回\n      base case是左边或右边只有一个数，求一个数的maxSub必然是自己\n\n      maxSubCrossMid分为求左边以nums[mid]结束的sub的最大值，右边以nums[mid+1]开始的sub的最大值\n      相加即为所求\n\n      T(n) = 2T(n/2) + O(n)\n      master公式，d=1,a=b=2,d=logba=1\n      时间复杂度O(n) = n的logba次方 * logn = nlogn\n\n      logn切分点，每个切分点有O(1)个要保留的参数(nums入口,lo,hi...)\n      空间复杂度logn\n     */\n    public static int maximumSubarray2(int[] nums) {\n        return maximumSubarrayPart(nums, 0, nums.length - 1);\n    }\n\n    public static int maximumSubarrayPart(int[] nums, int lo, int hi) {\n        if (lo == hi) return nums[lo];\n        int mid = (lo + hi) / 2;\n        int maxSubLeft = maximumSubarrayPart(nums, lo, mid);\n        int maxSubRight = maximumSubarrayPart(nums, mid + 1, hi);\n\n        int maxSubCrossMid = maxSubCrossMid(nums, lo, hi, mid);\n        // 三者最大值\n        int max = Math.max(Math.max(maxSubLeft, maxSubRight), maxSubCrossMid);\n        if (max == maxSubLeft) return maxSubLeft;\n        else if (max == maxSubRight) return maxSubRight;\n        else return maxSubCrossMid;\n    }\n\n    // 固定一端的最大子数列问题\n    private static int maxSubCrossMid(int[] nums, int lo, int hi, int mid) {\n        int maxSubLeft = nums[mid], maxSubRight = nums[mid + 1];\n        int tmpSubLeft = nums[mid], tmpSubRight = nums[mid + 1];\n        for (int i = mid - 1; i >= 0; i --) {\n            tmpSubLeft += nums[i];\n            maxSubLeft = Math.max(maxSubLeft, tmpSubLeft);\n        }\n        for (int j = mid + 2; j \n"},"Array/leetcode56.html":{"url":"Array/leetcode56.html","title":"LeetCode56 Merge Intervals","keywords":"","body":"\nGiven a collection of intervals, merge all overlapping intervals.\nExample 1:\nInput: [[1,3],[2,6],[8,10],[15,18]]\nOutput: [[1,6],[8,10],[15,18]]\nExplanation: Since intervals [1,3] and [2,6] overlaps, merge them into [1,6].\nExample 2:\nInput: [[1,4],[4,5]]\nOutput: [[1,5]]\nExplanation: Intervals [1,4] and [4,5] are considered overlapping.\n\npackage array;\n\nimport common.Interval;\n\nimport java.util.*;\n\n/**\n * Definition for an interval.\n * public class Interval {\n *     int start;\n *     int end;\n *     Interval() { start = 0; end = 0; }\n *     Interval(int s, int e) { start = s; end = e; }\n * }\n */\npublic class leetcode56MergeIntervals {\n    /**\n     * 答案区方法2：\n     * 先把intervals按start从小到大排序，然后用LinkedList res存储结果，(因为增删多所以用LinkedList而不用ArrayList)\n     * 遍历intervals，每次拿res.getLast().end和interval.start比较，如果有重叠则更新res.getLast().end\n     * 如果没有重叠，直接将res.add(interval)\n     * 时间复杂度：排序O(nlogn)+ for循环O(n) = O(nlogn)，空间复杂度O(1)\n     */\n    private class IntervalComparator implements Comparator {\n        @Override\n        public int compare(Interval o1, Interval o2) {\n            return Integer.compare(o1.start, o2.start);\n        }\n    }\n\n    public List merge(List intervals) {\n        if (intervals == null || intervals.size()  res = new LinkedList<>();\n        for (Interval interval : intervals) {\n            if (res.isEmpty() || res.getLast().end \n"},"Array/leetcode64.html":{"url":"Array/leetcode64.html","title":"LeetCode64 Minimum Path Sum","keywords":"","body":"\nGiven a m x n grid filled with non-negative numbers, find a path from top left to bottom right which minimizes the sum of all numbers along its path.\nNote: You can only move either down or right at any point in time.\nExample:\nInput:\n[\n  [1,3,1],\n  [1,5,1],\n  [4,2,1]\n]\nOutput: 7\nExplanation: Because the path 1→3→1→1→1 minimizes the sum.\n\npackage array;\n\nimport static format.printMatrix.printMatrix;\n\npublic class leetcode64MinimumPathSum {\n    /*=====================================================================================*/\n    /*自想1：动态规划背包问题：\n     * m行n列的矩阵\n     * 仅用一列来记录\n     * 时间复杂度O(n²)，空间复杂度O(n)\n     * */\n    public static int minimumPathSum(int[][] matrix) {\n        int m = matrix.length;\n        int n = matrix[0].length;\n        int[] curCol = new int[m]; // m为行数，即一列的个数\n        // 第0列,j = 0\n        curCol[0] = matrix[0][0];\n        for (int i = 1; i \n"},"Array/leetcode75.html":{"url":"Array/leetcode75.html","title":"LeetCode75 SortColors","keywords":"","body":"\nGiven an array with n objects colored red, white or blue, sort them in-place so that objects of the same color are adjacent, with the colors in the order red, white and blue.\nHere, we will use the integers 0, 1, and 2 to represent the color red, white, and blue respectively.\nNote: You are not suppose to use the library's sort function for this problem.\nExample:\nInput: [2,0,2,1,1,0]\nOutput: [0,0,1,1,2,2]\nFollow up:\nA rather straight forward solution is a two-pass algorithm using counting sort.\nFirst, iterate the array counting number of 0's, 1's, and 2's,\nthen overwrite array with total number of 0's, then 1's and followed by 2's.\nCould you come up with a one-pass algorithm using only constant space?\n\npackage array;\n\nimport static format.PrintArray.printArray;\n\npublic class leetcode75SortColors {  \n    /*=====================================================================================*/\n    /*自想：荷兰国旗问题\n     * partition过程看成向小于区域和大于区域发货\n     * 时间复杂度O(n),空间复杂度O(1)\n     * */\n    public static void sortColors(int[] nums) {\n        if (nums == null || nums.length \n"},"Array/leetcode121.html":{"url":"Array/leetcode121.html","title":"LeetCode121 Best Time to Sell and Buy Stock","keywords":"","body":"\nSay you have an array for which the ith element is the price of a given stock on day i.\nIf you were only permitted to complete at most one transaction (i.e., buy one and sell one share of the stock), design an algorithm to find the maximum profit.\nNote that you cannot sell a stock before you buy one.\nExample 1:\nInput: [7,1,5,3,6,4]\nOutput: 5\nExplanation: Buy on day 2 (price = 1) and sell on day 5 (price = 6), profit = 6-1 = 5.\nNot 7-1 = 6, as selling price needs to be larger than buying price.\nExample 2:\nInput: [7,6,4,3,1]\nOutput: 0\nExplanation: In this case, no transaction is done, i.e. max profit = 0.\n\npackage array;\n\npublic class leetcode121BestTimeToSellAndBuyStock {\n    /*=====================================================================================*/\n\n    /* Solution区方法1：\n        问题转化为求prices[j]−prices[i]的最大值, 其中要求j > i.\n        时间复杂度O(n²)，空间复杂度O(1)\n        */\n    public static int bestTime1(int[] prices) {\n        int maxProfit = 0;\n        for (int i = 0; i  maxProfit ? prices[j] - prices[i] : maxProfit;\n            }\n        }\n        return maxProfit;\n    }\n\n /*=====================================================================================*/\n    /*\n    Solution区方法2：\n    由于只要保证maxProfit是最大的profit就可以，maxPrice-minPrice要求最大\n    遇到每一个都比较且试图更新minPrice和maxProfit\n    就算minPrice出现在最后，由于最后只返回maxProfit，没有更新maxProfit还是不影响结果\n    时间复杂度O(n)，空间复杂度O(1)\n     */\n    public static int bestTime2(int[] prices) {\n        int maxProfit = 0;\n        int minPrice = Integer.MAX_VALUE;\n        for (int price : prices) {\n            minPrice = price  maxProfit ? price - minPrice : maxProfit;\n        }\n        return maxProfit;\n    }\n    /*=====================================================================================*/\n    /*\n    Discuss区看到的：\n    类比于最大子数列：最大子数列问题的目标是在数列的一维方向找到一个连续的子数列，使该子数列的和最大。\n    例如，对一个数列 −2, 1, −3, 4, −1, 2, 1, −5, 4，其连续子数列中和最大的是 4, −1, 2, 1, 其和为6。\n\n    Kadane算法：\n    扫描一次整个数列的所有数值，在每一个扫描点计算以该点数值为结束点的子数列的最大和（正数和）。\n    该子数列由两部分组成：【以前一个位置为结束点】的最大子数列、该位置的数值。\n    用到了“最佳子结构”（以每个位置为终点的最大子数列都是基于其前一位置的最大子数列计算得出），可看成动态规划。\n    maxCur = max(maxCur + x，x) 前面一段的maxCur要是是负数，还不如不要前面那段以当前值作为起始\n    maxSoFar = max(maxCur, maxSoFar)\n    最大子数列问题的一个变种是：如果数列中含有负数元素，允许返回长度为零的子数列。\n    maxCur = max(maxCur + x, 0) 由于maxCur最小是0，如果x太小，使maxCur+x是个负数，就不要这段，取0\n    maxSoFar = max(maxCur, maxSoFar)\n\n    以本题类比于最大子数列问题的变种，prices[i]-prices[i-1]即差额相当于最大子数列中的每一个x\n    例如prices = [7,1,5,3,6,4], 则差额 = [-6,4,-2,3,-2]，返回长度为0的子数列在这里就是不做股票的交易\n      */\n    public static int bestTime3(int[] prices) {\n        int maxCur = 0, maxSoFar = 0;\n        for(int i = 1; i \n"},"Array/leetcode169.html":{"url":"Array/leetcode169.html","title":"LeetCode169 Majority Element","keywords":"","body":"\nGiven an array of size n, find the majority element.\nThe majority element is the element that appears more than ⌊ n/2 ⌋ times.\nYou may assume that the array is non-empty and the majority element always exist in the array.\nExample 1:\nInput: [3,2,3]\nOutput: 3\nExample 2:\nInput: [2,2,1,1,1,2,2]\nOutput: 2\n\npackage array;\n\nimport java.util.HashMap;\n\npublic class leetcode169MajorityElement {\n /*=====================================================================================*/\n    /* 自想1：\n     * 时间复杂度O(n)，空间复杂度O(n)\n     * 对于每一个数出现的次数用一个map存储，key为数，value为该数出现的次数\n     * 由于一定存在且仅有一个majority number，所以只要某一个num出现的次数大于n/2它就是majority number\n     * */\n    public static int majorityElement1(int[] nums) {\n        HashMap map = new HashMap<>();\n        int max = 0;\n        for (int num : nums) {\n            /*if (map.get(num) == null) {\n            *   map.put(num, 0);\n            * }\n            * */\n            map.putIfAbsent(num, 0);\n            if (map.get(num) != null) {\n                map.replace(num, map.get(num) + 1);\n            }\n\n            if (map.get(num) > nums.length / 2) {\n                max = num;\n            }\n        }\n        return max;\n    }\n    /*=====================================================================================*/\n    /*Solution区看到的：divide and conquer\n     * 时间复杂度O(nlogn)，空间复杂度O(logn)，额外空间复杂度用来记录logn个切分点\n     * 时间复杂度master公式，T(N)=2T(N/2)+2N a=2,b=2,d=1 logb(a)=d时间复杂度O(NlogN)\n     * 左右分治找到出现次数最多的元素，\n     * 如果左右最多的元素是同一个则向上层返回这个结果，\n     * 如果不是同一个则分别再数两者出现的次数，返回出现次数多的那个元素作为整体的majority number返回上一个\n     * */\n    public static int majorityElement2(int[] nums) {\n        return majorityElement2Part(nums, 0, nums.length - 1);\n    }\n\n    //数num在nums[lo]-nums[hi]中共出现了多少次\n    public static int majorityElement2Count(int[] nums, int num, int lo, int hi) {\n        int count = 0;\n        for (int i = lo; i  majorityElement2Count(nums, right, mid + 1,hi)\n                ? left : right;\n    }\n    /*=====================================================================================*/\n    /*评论区最简方法：Boyer-Moore Majority Vote Algorithm\n            是个online的算法，随时停止能随时出结果\n            时间复杂度O(n)，空间复杂度O(1)\n            遍历一遍，用m记录第一个候选者的票数，初始为1，如果下一个是这个候选者那就m++，如果不是则m--\n            当m=0时清空这个候选人的信息，用m记录数组中的下一个候选人\n            无论在哪里停止，m所对应的候选人就是票数超过半数的那个majority number\n         */\n    public static int majorityElement3(int[] nums) {\n        int candidate = nums[0], m = 0;\n        for (int i = 0; i \n"},"Array/leetcode238.html":{"url":"Array/leetcode238.html","title":"LeetCode238 Product of Array Except","keywords":"","body":"\nGiven an array nums of n integers where n > 1, return an array output such that output[i] is equal to the product of all the elements of nums except nums[i].\nExample:\nInput:  [1,2,3,4] 1,2,3,0\nOutput: [24,12,8,6] 0,0,0,6\nNote: Please solve it without division and in O(n).\nFollow up:\nCould you solve it with constant space complexity?\n(The output array does not count as extra space for the purpose of space complexity analysis.)\n\npackage array;\n\nimport static format.PrintArray.printArray;\n\npublic class leetcode238ProductOfArrayExceptItself {\n /*=====================================================================================*/\n    /* 自想1：\n     * 遍历一遍，算出所有数的积存在allProduct中\n     * 再把allProduct/nums[i]放在product[i]处\n     * 但是要考虑到有0的情况，一个0的时候除了这个0位置的product不为0，其他位置的product都为0\n     * 两个以及以上个0的时候product全为0\n     * 没有0的时候遍历两遍，有0的时候遍历三遍\n     * 时间复杂度O(n)，空间复杂度O(1)\n     * */\n\n    public static int[] productOfArrayExceptItself1(int[] nums) {\n        int allProduct = 1;\n        int[] product = new int[nums.length];\n        for (int num : nums) {\n            allProduct *= num;\n        }\n        if (allProduct != 0) {\n            for (int i = 0; i = 2) {\n                for (int i = 0; i = 1; i --) {\n            right *= nums[i];\n            product[i - 1] *= right;\n        }\n        return product;\n    }\n\n/*=====================================================================================*/\n    public static void main(String[] args) {\n        int[] nums1 = new int[]{1, 2, 3, 4};\n        int[] nums2 = new int[]{1, 2, 3, 0};\n        int[] nums3 = new int[]{1, 2, 0, 0};\n        int[] nums4 = new int[]{9, 0, 2};\n\n        printArray(nums1);\n        printArray(productOfArrayExceptItself1(nums1));\n        printArray(nums2);\n        printArray(productOfArrayExceptItself1(nums2));\n        printArray(nums3);\n        printArray(productOfArrayExceptItself1(nums3));\n        printArray(nums4);\n        printArray(productOfArrayExceptItself1(nums4));\n\n        System.out.println();\n\n        printArray(nums1);\n        printArray(productOfArrayExceptItself2(nums1));\n        printArray(nums2);\n        printArray(productOfArrayExceptItself2(nums2));\n        printArray(nums3);\n        printArray(productOfArrayExceptItself2(nums3));\n        printArray(nums4);\n        printArray(productOfArrayExceptItself2(nums4));\n    }\n}\n\n打印函数：\npackage format;\n\npublic class PrintArray {\n    public static void printArray(int[] nums) {\n        for (int i = 0; i \n"},"Array/leetcode283.html":{"url":"Array/leetcode283.html","title":"LeetCode283 Move Zeroes","keywords":"","body":"\nGiven an array nums, write a function to move all 0's to the end of it while maintaining the relative order of the non-zero elements.\nExample:\nInput: [0,1,0,3,12]\nOutput: [1,3,12,0,0]\nNote:\nYou must do this in-place without making a copy of the array.\nMinimize the total number of operations.\n\npackage array;\n\npublic class leetcode283MoveZeros {\n    /*=====================================================================================*/\n    /*\n    自想1：时间复杂度O(n)，空间复杂度O(1)\n    从左到右用i遍历原数组，用j记录该放到哪个位置，\n    初始i=0,j=0,遇到不为0的就放到j位置，j++，i遍历完成后，j后面的全补0\n    */\n    public static void moveZeros(int[] nums) {\n        if (nums == null || nums.length == 0) return;\n        int insertIndex = 0;\n        for (int num : nums) {\n            if (num != 0) {\n                nums[insertIndex ++] = num;\n            }\n        }\n        while (insertIndex \n"},"Array/leetcode448.html":{"url":"Array/leetcode448.html","title":"LeetCode448 Find All Numbers Disappeared in an Array","keywords":"","body":"\nGiven an array of integers where 1 ≤ a[i] ≤ n (n = size of array), some elements appear twice and others appear once.\nFind all the elements of [1, n] inclusive that do not appear in this array.\nCould you do it without extra space and in O(n) runtime?\nYou may assume the returned list does not count as extra space.\nExample:\nInput:\n[4,3,2,7,8,2,3,1]\nOutput:\n[5,6]\n\npackage array;\n\nimport java.util.ArrayList;\n\npublic class leecode448FindNumbersNotAppear {  \n   /*=====================================================================================*/\n     /*自己没想到，看的讨论区的：\n     时间复杂度O(n)，空间复杂度O(1)\n     因为 1  findNumbersNotAppear(int[] nums) { \n     if (nums == null || nums.length == 0) return null;\n        ArrayList res = new ArrayList<>();\n        for (int num : nums) {\n            int index = Math.abs(num) - 1;\n            if (nums[index] > 0) {\n                nums[index] = -nums[index];\n            }\n        }\n        for (int i = 0; i  0) {\n                res.add(i + 1);\n            }\n        }\n        for (int i = 0; i  arrayList) {\n        if (arrayList == null || arrayList.size() == 0) return;\n        Integer[] array = arrayList.toArray(new Integer[arrayList.size()]);\n        for (Integer i : array) {\n            System.out.print(i + \" \");\n        }\n        System.out.println();\n    }\n    public static void printArray(int[] nums) {\n        for (int i = 0; i \n"},"Array/leetcode560.html":{"url":"Array/leetcode560.html","title":"LeetCode560 Subarray Sum Equals K","keywords":"","body":"\nGiven an array of integers and an integer k, you need to find the total number of continuous subarrays whose sum equals to k.\nExample 1:\nInput: nums = [1,1,1], k = 2\nOutput: 2\nNote:\nThe length of the array is in range [1, 20,000].\nThe range of numbers in the array is [-1000, 1000]\nand the range of the integer k is [-1e7, 1e7].\n\npackage array;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class leetcode560SubarraySumEqualsK {\n /*=====================================================================================*/\n    /*自想1：\n     * 两个变量i,j分别表示subarray的首尾位置，再遍历算出[i,j]之间的和\n     * 时间复杂度O(n³)，不能AC，超时\n     * */\n    public static int numOfContinuousSubarraySumEqualsK1(int[] nums, int k) {\n        int count = 0;\n        for (int i = 0; i ，k为从头到某一个数的和，v为这个和出现的次数\n    * sum为大和，sum-k为小和，k为差，只要找到sum和sum-k就可以构造出和为k的subarray\n    * 时间复杂度O(n)，空间复杂度O(n)\n    * */\n    public static int numOfContinuousSubarraySumEqualsK4(int[] nums, int k) {\n        int count = 0, sum = 0;\n        Map map = new HashMap<>();\n        map.put(0, 1); // 小和为0，count也需要+1\n        for (int i = 0; i \n"},"Array/leetcode581.html":{"url":"Array/leetcode581.html","title":"LeetCode581 Shortest Unsorted Continuous Subarray","keywords":"","body":"\nGiven an integer array, you need to find one continuous subarray that if you only sort this subarray in ascending order, then the whole array will be sorted in ascending order, too.\nYou need to find the shortest such subarray and output its length.\nExample 1:\nInput: [2, 6, 4, 8, 10, 9, 15]\nOutput: 5\nExplanation:\nYou need to sort [6, 4, 8, 10, 9] in ascending order to make the whole array sorted in ascending order.\nNote:\nThen length of the input array is in range [1, 10,000].\nThe input array may contain duplicates, so ascending order here means \n后三种解答参考https://leetcode.com/problems/shortest-unsorted-continuous-subarray/solution/\n\npackage array;\n\nimport java.util.Arrays;\nimport java.util.Stack;\n\npublic class leetcode581ShortestUnsortedContinuousSubarray {\n    /*=====================================================================================*/\n    /*\n     自想1：\n     和已经排序的数列进行对比，遍历两遍找出lo,hi\n     Solution区看到的改进，遍历一遍即可\n     时间复杂度O(n)+O(nlogn)+O(n)=O(nlogn)\n     空间复杂度O(n)\n    * */\n    public static int shortestSubarray1(int[] nums) {\n        int[] copy = nums.clone();\n        Arrays.sort(nums);\n        int lo = Integer.MAX_VALUE, hi = Integer.MIN_VALUE;\n        /*for (int i = 0; i = 0; j --) {\n            if (copy[j] != nums[j]) {\n                hi = j;\n                break;\n            }\n        }*/\n        for (int i = 0; i  hi ? 0 : hi - lo + 1;\n    }\n\n /*=====================================================================================*/\n\n    /*\n    Solution区看到的：\n    找到第一个不在正确位置上的数lo和最后一个不在正确位置上的数hi\n    不在正确位置上的数是指我作为nums[i]或nums[j]有nums[i] > nums[j]且i  nums[j]) {\n                    lo = Math.min(i, lo);\n                    hi = Math.max(j, hi);\n                }\n            }\n        }\n        return lo > hi ? 0 : hi - lo + 1;\n    }\n    /*=====================================================================================*/\n    /*\n     * 用栈来模仿插入排序的过程\n     * 从前往后遍历数组，如果是上升的就正常压入栈中，\n     * 如果是下降的就把栈中的数倒出来倒到合适的位置（>=栈顶）再将这个数压入栈中，记录这个数插入的位置，\n     * 再继续遍历剩下的数组寻找下一个下降的数，得到的插入的位置中最小的就是lo\n     * 注意倒出的数并没有再倒回数组中，因为最终有用的是lo所以插入到lo前面来的数才需要记录，倒出的是后面的数，不需要管\n     * 同理反向遍历在下降的中找上升的数的插入的位置，得到的最大的位置就是hi\n     * 时间复杂度O(n)，空间复杂度O(n)\n     * */\n    public static int shortestSubarray3(int[] nums) {\n        int lo = Integer.MAX_VALUE, hi = Integer.MIN_VALUE;\n        Stack stack = new Stack<>();\n        for (int i = 0; i  nums[i]) {\n                lo = Math.min(lo, stack.pop());\n            }\n            stack.push(i);\n        }\n        stack.clear();\n        // 逆着看\n        for (int j = nums.length - 1; j >= 0; j--) {\n            while (!stack.isEmpty() && nums[stack.peek()]  hi ? 0 : hi - lo + 1;\n    }\n    /*=====================================================================================*/\n    /*Solution区：\n    参考https://leetcode.com/problems/shortest-unsorted-continuous-subarray/solution/\n    记录极值点，找到极值点区间内的最小和最大的坐标即为需要重排的区间\n    因为最小的值要插入到最前的位置如i，第i位置原有的值后移，第i位置要记入重排的区间内\n    参考文末图\n    时间复杂度O(n)，空间复杂度O(1)\n    * */\n    public static int shortestSubarray4(int[] nums) {\n        int min = Integer.MAX_VALUE, max = Integer.MIN_VALUE;\n        for (int i = 1; i  nums[i]) {\n                // min为下降中的最小值，极值点\n                min = Math.min(min, nums[i]);\n            }\n        }\n        // 没有逆序对\n        if (min == Integer.MAX_VALUE) return 0;\n\n        for (int i = nums.length - 2; i >= 0; i--) {\n            // 逆向时正常应该下降，但是如果上升则记录上升的值\n            if (nums[i] > nums[i + 1]) {\n                // max为上升中的最大值，极值点\n                max = Math.max(max, nums[i]);\n            }\n        }\n\n        int lo, hi;\n        for (lo = 0; lo  min)\n                break;\n        }\n        for (hi = nums.length - 1; hi >= 0; hi--) {\n            // 找到第一个小于max的值，则max应该在的位置是hi\n            if (nums[hi] \n\n"},"Array/找出数组中重复的数字.html":{"url":"Array/找出数组中重复的数字.html","title":"剑指offer 找出数组中重复的数字","keywords":"","body":"\n在一个长度为n的数组里的所有数字都在0到n-1的范围内。 数组中某些数字是重复的，但不知道有几个数字是重复的。也不知道每个数字重复几次。请找出数组中任意一个重复的数字。 例如，如果输入长度为7的数组{2,3,1,0,2,5,3}，那么对应的输出是第一个重复的数字2。\nParameters:\nnumbers: an array of integers\nlength: the length of array numbers\nduplication: (Output) the duplicated number in the array number,\nlength of duplication array is 1,so using duplication[0] = ? in implementation;\nHere duplication like pointor in C/C++, duplication[0] equal *duplication in C/C++\n这里要特别注意~返回任意重复的一个，赋值duplication[0]\nReturn value: true if the input is valid,\nand there are some duplications in the array number, otherwise false\n\npackage array;\n\nimport java.util.Arrays;\nimport java.util.HashSet;\nimport java.util.Set;\n\npublic class FindOneOfDuplicateNumbers {\n\n /*=====================================================================================*/\n    /*自想1：排序再遍历一遍找到第一个重复的数字\n     * 时间复杂度O(nlogn)，空间复杂度O(1)，修改了原数组\n     * 如果要求不修改原数组，拷贝一份之后再排序再遍历，时间复杂度不变，空间复杂度变为O(n)\n     * */\n    public static int findDuplicate1(int[] nums) {\n        if (nums == null || nums.length  set = new HashSet<>();\n        for (int num : nums) {\n            if (set.contains(num)) {\n                return num;\n            } else {\n                set.add(num);\n            }\n        }\n        throw new RuntimeException(\"cannot find duplicate number\");\n    }\n\n    // 自想2改成要求的格式\n    public boolean duplicate2(int numbers[],int length,int [] duplication) {\n        if (numbers == null || numbers.length  set = new HashSet<>();\n        for (int num : numbers) {\n            if (set.contains(num)) {\n                duplication[0] = num;\n                return true;\n            }\n            set.add(num);\n        }\n        return false;\n    }\n\n    /*=====================================================================================*/\n    /*《剑指offer第2版》P39：\n     * index[0,n-1] value[0,n-1]\n     * 寻求index-value的对应关系，期待index==value\n     * 从i=0开始看nums[i]是否==i，\n     * 如果nums[i]==v(v!=i)，则看nums[v]，如果nums[v]==v则找到两个==v的数，则将v返回\n     * 如果nums[v]!=v，则将nums[i]与nums[v]位置交换，期望把每个数都放在index==value的正确位置上\n     * 时间复杂度O(n)，空间复杂度O(1)\n     * */\n    public static int findDuplicate3(int[] nums) {\n        int i = 0;\n        while (i \n"},"Array/旋转数组的最小元素.html":{"url":"Array/旋转数组的最小元素.html","title":"剑指offer 6.旋转数组的最小元素","keywords":"","body":"\n把一个数组最开始的若干个元素搬到数组的末尾，我们称之为数组的旋转。\n输入一个非减排序的数组的一个旋转，输出旋转数组的最小元素。\n例如数组{3,4,5,1,2}为{1,2,3,4,5}的一个旋转，该数组的最小值为1。\nNOTE：给出的所有元素都大于0，若数组大小为0，请返回0。\n\npackage array;\n\npublic class 旋转数组的最小数字 {\n    /**\n     * 参见二分查找变形总结的1.8\n     * 时间复杂度O(logn)，空间复杂度O(1)\n     */\n    public int minNumberInRotateArray(int[] array) {\n        if (array == null || array.length == 0) {\n            return 0;\n        }\n        int lo = 0, hi = array.length - 1;\n        while (lo > 1);\n            // mid  hi，min在mid的右边，不可能是mid\n            } else if (array[mid] > array[hi]) {\n                lo = mid + 1;\n            } else {\n                return array[mid];\n            }\n        }\n        return 0;\n    }\n}\n\n"},"Array/斐波那契数列.html":{"url":"Array/斐波那契数列.html","title":"剑指offer 7.斐波那契数列","keywords":"","body":"\n大家都知道斐波那契数列，现在要求输入一个整数n，请你输出斐波那契数列的第n项（从0开始，第0项为0）。n\n\npackage array;\n\npublic class 斐波那契数列 {\n    /**\n     * 递归从后算到前时间复杂度O(2的n次方)\n     * 要利用动态规划从前算到后，利用每一个前面已经算过的结果\n     * 时间复杂度O(n)，空间复杂度O(1)\n     */\n    public int Fibonacci(int n) {\n        if (n \n"},"Array/跳台阶.html":{"url":"Array/跳台阶.html","title":"剑指offer 8.跳台阶","keywords":"","body":"\n一只青蛙一次可以跳上1级台阶，也可以跳上2级。求该青蛙跳上一个n级的台阶总共有多少种跳法（先后次序不同算不同的结果）。\n\npackage array;\n\npublic class 跳台阶 {\n    /**\n     * f(n) = f(n - 1) + f(n - 2)\n     * f(1) = 1, f(2) = 2\n     * 斐波那契数列，时间复杂度O(n)，空间复杂度O(1)\n     */\n    public int JumpFloor(int target) {\n        if (target \n"},"Array/变态跳台阶.html":{"url":"Array/变态跳台阶.html","title":"剑指offer 9.变态跳台阶","keywords":"","body":"\n一只青蛙一次可以跳上1级台阶，也可以跳上2级……它也可以跳上n级。求该青蛙跳上一个n级的台阶总共有多少种跳法。\n\npackage array;\n\npublic class 变态跳台阶 {\n    /**\n     * f(n) = 1 + f(1) + f(2) + ... + f(n - 2) + f(n - 1) = 1 + preSum\n     * f(0) = 0, f(1) = 1, f(2) = 2\n     * 0，1，2，4，8, ...\n     * 斐波那契数列，时间复杂度O(n)，空间复杂度O(1)\n     */\n    public int JumpFloorII(int target) {\n        if (target \n"},"Array/矩阵覆盖.html":{"url":"Array/矩阵覆盖.html","title":"剑指offer 10.矩阵覆盖","keywords":"","body":"\n我们可以用21的小矩形横着或者竖着去覆盖更大的矩形。请问用n个21的小矩形无重叠地覆盖一个2*n的大矩形，总共有多少种方法？\n\npackage matrix;\n\npublic class 矩阵覆盖 {\n    /**\n     * f(n) = 前面n-1块与最后一块无连接 + 前面n-1块与最后一块有连接\n     * = f(n - 1) * 1 + f(n - 2) * 1\n     * f(0) = 0, f(1) = 1, f(2) = 2, f(3) = 3, ...\n     * 斐波那契数列，时间复杂度O(n)，空间复杂度O(1)\n     */\n    public int RectCover(int target) {\n        if (target == 0) {\n            return 0;\n        }\n        if (target == 1) {\n            return 1;\n        }\n        if (target == 2) {\n            return 2;\n        }\n        int pre = 1, cur = 2;\n        for (int i = 3; i \n"},"Array/调整数组顺序使奇数位于偶数前面.html":{"url":"Array/调整数组顺序使奇数位于偶数前面.html","title":"剑指offer 13.调整数组顺序使奇数位于偶数前面","keywords":"","body":"\n输入一个整数数组，实现一个函数来调整该数组中数字的顺序，\n使得所有的奇数位于数组的前半部分，所有的偶数位于数组的后半部分，\n并保证奇数和奇数，偶数和偶数之间的相对位置不变。\n\npackage array;\n\npublic class 调整数组顺序使奇数位于偶数前面 {\n    /**\n     * 自想1：\n     * 另外用一个数组\n     * 时间复杂度O(n)，空间复杂度O(n)\n     */\n    public void reOrderArray1(int[] array) {\n        if (array == null || array.length = 1; j--) {\n                if (array[j] % 2 == 1 && array[j - 1] % 2 == 0) {\n                    swap(array, j, j - 1);\n                }\n            }\n        }\n    }\n\n    public static void swap(int[] array, int i, int j) {\n        if (i == j) {\n            return;\n        }\n        array[i] = array[i] ^ array[j];\n        array[j] = array[i] ^ array[j];\n        array[i] = array[i] ^ array[j];\n    }\n\n\n    /**\n     * 讨论区：\n     * 要想保证原有次序，则只能顺次移动或相邻交换。\n     * 这里采用顺次移动\n     * i存偶数的下标，j存i之后的奇数的下标\n     * i从左向右遍历，找到第一个偶数。\n     * j从i+1开始向后找，直到找到第一个奇数。\n     * 将[i,...,j-1]的元素整体后移一位，最后将找到的奇数放入i位置，然后i++。\n     * 终止条件：j向后遍历没有再找到奇数。\n     * 时间复杂度O(n²)，空间复杂度O(1)\n     */\n    public static void reOrderArray3(int[] array) {\n        if (array == null || array.length = array.length) {\n                return;\n            }\n            // 记下即将被覆盖的最后一个值\n            int odd = array[j];\n            // 向后移必须从后往前移动，不然前面的向后移会覆盖后面的值\n            for (int k = j - 1; k >= i; k--) {\n                array[k + 1] = array[k];\n            }\n            array[i++] = odd;\n            j++;\n        }\n    }\n\n    public static void main(String[] args) {\n        int[] array = {1, 3, 5, 7, 2, 4, 6};\n        reOrderArray2(array);\n    }\n}\n\n"},"Array/范围查询.html":{"url":"Array/范围查询.html","title":"Tsinghua OJ 范围查询(Range)","keywords":"","body":"\nDescriptioin\nLet S be a set of n integral points on the x-axis. For each given interval [a, b], you are asked to count the points lying inside.\nInput\nThe first line contains two integers: n (size of S) and m (the number of queries).\nThe second line enumerates all the n points in S.\nEach of the following m lines consists of two integers a and b and defines an query interval [a, b].\nOutput\nThe number of points in S lying inside each of the m query intervals.\nExample\nInput\n5 2\n1 3 7 9 11\n4 6\n7 12\nOutput\n0\n3\nRestrictions\n0 \nFor each query interval [a, b], it is guaranteed that a \nPoints in S are distinct from each other.\nCoordinates of each point as well as the query interval boundaries a and b are non-negative integers not greater than 10^7.\nTime: 2 sec\nMemory: 256 MB\n描述\n数轴上有n个点，对于任一闭区间 [a, b]，试计算落在其内的点数。\n输入\n第一行包括两个整数：点的总数n，查询的次数m。\n第二行包含n个数，为各个点的坐标。\n以下m行，各包含两个整数：查询区间的左、右边界a和b。\n输出\n对每次查询，输出落在闭区间[a, b]内点的个数。\n样例\n见英文题面\n限制\n0 ≤ n, m ≤ 5×105\n对于每次查询的区间[a, b]，都有a ≤ b\n各点的坐标互异\n各点的坐标、查询区间的边界a、b，均为不超过10^7的非负整数\n时间：2 sec\n内存：256 MB\nOJ地址：https://dsa.cs.tsinghua.edu.cn/oj/course.shtml?courseid=58\n\n这是清华大学数据结构MOOC的配套练习的第一题，一开始看到这题以为很水，后来我就哭了。。。终究是我太弱。\n思路是利用二分查找的一个改进，在有序数组中找到≥a的第一个元素和≤b的最后一个元素。\n\n二分查找的改进的具体分析参见《数据结构邓俊辉第三版》P56\n\n首先我是用Java写了一个O(n)的版本，结果发现纳尼？连一半的测试用例都通不过就会超时。然后写了二分查找的版本，还是只能得60分，这可是个O(logn)的算法呀。平时写leetcode的时间限制太松了，都几乎不会碰到超时的情况。优化之后Java的版本最高得了80分。\nimport java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n    public static int findLeftIndex(int[] nums, int target, int lo, int hi) {\n        while (lo > 1);\n            // 若target  nums[mid]，lo = mid + 1，在(mid, hi)中\n            if (nums[mid] >= target) {\n                hi = mid;\n            } else {\n                lo = mid + 1;\n            }\n        }\n        return lo; // 循环结束时，lo为>=target的最小下标，故lo-1为=target的最小下标\n\n    public static int findRightIndex(int[] nums, int target, int lo, int hi) {\n        while (lo > 1);\n\n            //int mid = lo + ((hi - lo) >> 1);\n            if (nums[mid] > target) {\n                hi = mid;\n            } else {\n                lo = mid + 1;\n            }\n\n        }\n        return --lo; // 循环结束时，lo为>target的最小下标，故lo-1为\nJava运行结果：\n\n然后改成了我非常不愿意写的C++语言的版本，由此也是发现了C++的强大，做人还是不能偷懒啊。C++虽然难用，指针引用傻傻分不清楚，而且stl在很多情况下会被禁用，但是无奈人家处在底层效率那叫一个高。没有优化的时候就拿了75分，把cin,cout改成scanf,printf之后就能轻松拿满分了。看来这辈子是套不过C++的魔掌了。\n\nstdlib.h中的qsort参见：http://www.cnblogs.com/CCBB/archive/2010/01/15/1648827.html\n\n#include \n#include \n\nusing namespace std;\n\n#define L 500005\nint nums[L];\n/*把常用的变量变成全局的减少参数传递*/\n\nint compare(const void *a, const void *b)\n{\n    int *pa = (int*)a;\n    int *pb = (int*)b;\n    return (*pa ) - (*pb);  //从小到大排序\n}\n\nint binarySearch1(int target, int lo, int hi) {\n    while (lo > 1);\n        // 若target  nums[mid]，lo = mid + 1，在(mid, hi)中\n        nums[mid] >= target ? hi = mid : lo = mid + 1;\n    }\n    return lo; // 循环结束时，lo为>=target的最小下标，故lo-1为> 1);\n        nums[mid] > target ? hi = mid : lo = mid + 1;\n    }\n    return --lo; // 循环结束时，lo为>target的最小下标，故lo-1为> length >> queryTimes;\n    //int nums[length];\n    for (int i = 0; i > nums[i];\n        scanf(\"%d\", &nums[i]);\n    }\n\n    qsort(nums, length, sizeof(int), compare);\n\n    for (int query = 1; query > a >> b;\n        scanf(\"%d %d\", &a, &b);\n        //cout \n一毛一样的算法，但是时间空间都秒杀Java的C++：\n\n最后我要说，我爱C++，C++使我快乐！\n"},"Array/二分查找的各种变形总结.html":{"url":"Array/二分查找的各种变形总结.html","title":"二分查找的各种变形总结","keywords":"","body":"其实，二分查找看起来so easy，但它的各种变形扣边界真的需要总结一下。\n注意：以下代码均采用左右均为闭区间，即hi为最后一个元素下标，而不是元素个数。\nbase case\n无重复数字，找target的下标\n    /**\n     * 1.1 无重复数字，二分查找出target的下标\n     */\n    public static int binarySearchWithoutDuplicates(int[] nums, int target) {\n        if (nums == null || nums.length > 1);\n            // 若target  nums[mid]，在右半段，在[mid + 1, hi]中找\n            } else if (target > nums[mid]) {\n                lo = mid + 1;\n            } else {\n                return mid;\n            }\n        }\n        // 未找到\n        return -1;\n    }\n\n查找>=target的最小下标\n    /**\n     * 1.2 查找第一个大于等于某个数的下标\n     * 例：int[] a = {1,2,2,2,4,8,10}，查找2，返回第一个2的下标1；\n     * 查找3，返回4的下标4；查找4，返回4的下标4。如果没有大于等于target的元素，返回-1。\n     */\n    public static int binarySearchForFirstGreaterOrEqualNumIndex(int[] nums, int target) {\n        if (nums == null || nums.length > 1);\n            // target \n查找\n    /**\n     * 1.3 从右边起查找第一个小于等于某个数的下标\n     * 例，int[] a = {1,2,2,2,4,8,10}，查找2，返回最后一个2的下标3；查找3，返回最后一个2的下标3；\n     * 查找4，返回4的下标4。如果没有> 1);\n            // target  nums[mid]，target在右半段，\n                // 如果target==nums[mid]，虽然lo = mid + 1，但是最后在右半段没有找到更大的，target = 0 ? hi : -1;\n    }\n\nbase case上的改进\n查找>target的最小下标\n    /**\n     * 【1.3的改进：1.3的下一个数就是1.4的结果】\n     * 1.4 查找第一个大于某个数的下标\n     * 注意：第一个小于等于某个数的下一个数就是第一个大于某个数的数\n     * 例：int[] a = {1,2,2,2,4,8,10}，查找2，返回4的下标4；\n     * 查找3，返回4的下标4；查找4，返回8的下标5。如果没有大于key的元素，返回-1。\n     * 第一个小于等于2的数的下标是3，第一个大于2的数的下标是4\n     */\n    public static int binarySearchForFirstGreaterNumIndex(int[] nums, int target) {\n        if (nums == null || nums.length > 1);\n            // target = nums[mid]， 第一个大于target的数在右半段\n            } else {\n                lo = mid + 1;\n            }\n        }\n        // 如果target大于数组最后一个元素，lo最后变为nums.length，即没有元素大于target，需要返回-1。\n        return lo \n查找\n    /**\n     * 【1.2的改进：1.2的前一个数就是1.5的结果】\n     * 1.5 从右边起查找第一个小于某个数的下标\n     * 例，int[] a = {1,2,2,2,4,8,10}，查找2，返回1的下标0；查找3，返回最后一个2的下标3；\n     * 查找4，返回最后一个2的下标3。如果没有> 1);\n            // target = 0 ? hi : -1;\n    }\n\n查找target的最小下标\n    /**\n     * 【1.2的改进：1.2最后的返回加一个判断条件】\n     * 1.5 查找第一个等于某个数的下标\n     * 例：int[] a = {1,2,2,2,4,8,10}，查找2，返回第一个2的下标1；\n     * 查找4，返回4的下标4。如果没有等于target的元素，返回-1。\n     */\n    public static int findLeftIndex(int[] nums, int target) {\n        if (nums == null || nums.length > 1);\n            // target \n查找target的最大下标\n    /**\n     * 【1.3的改进：1.3最后的返回加一个判断条件】\n     * 1.6 查找最后一个等于某个数的下标，即从右边起查找第一个等于某个数的下标\n     * 例，int[] a = {1,2,2,2,4,8,10}，查找2，返回最后一个2的下标3\n     * 查找4，返回4的下标4。如果没有> 1);\n            // target  nums[mid]，target在右半段，\n                // 如果target==nums[mid]，虽然lo = mid + 1，但是最后在右半段没有找到更大的，target = 0 && nums[hi] == target ? hi : -1;\n    }\n\n查找target出现的次数\n   /**\n     * 【1.5和1.6的改进】\n     * 1.7 查找一个数出现的次数\n     */\n    public static int getCount(int[] nums, int target) {\n        int leftIndex = findLeftIndex(nums, target);\n        int rightIndex = findRightIndex(nums, target);\n        return rightIndex - leftIndex + 1;\n    }\n\n有序数组断成两节互换位置查找最小值的下标\n    /**\n     * 【1.1的改进】\n     * 1.8 把排序好的数组分成两部分，两部分互换顺序\n     * 在有序数组断节后找到min数的index\n     */\n    public static int findMinIndex(int[] nums) {\n        int lo = 0, hi = nums.length - 1;\n        while (lo > 1);\n            // mid  hi：最小值在右半部分，不可能是自己了\n            } else if (nums[mid] > nums[hi]) {\n                lo = mid + 1;\n            } else {\n                return mid;\n            }\n        }\n        return lo;\n    }\n\n汇总和测试函数\npackage array;\n\nimport java.util.Arrays;\n\nimport static common.GenerateRandomArray.*;\nimport static common.PrintArray.printArray;\n\npublic class BinarySearch {\n    /**\n     * 1.1 无重复数字，二分查找出target的下标\n     */\n    public static int binarySearchWithoutDuplicates(int[] nums, int target) {\n        if (nums == null || nums.length > 1);\n            // 若target  nums[mid]，在右半段，在[mid + 1, hi]中找\n            } else if (target > nums[mid]) {\n                lo = mid + 1;\n            } else {\n                return mid;\n            }\n        }\n        // 未找到\n        return -1;\n    }\n\n    public static int binarySearchComparator(int[] nums, int target) {\n        if (nums == null || nums.length > 1);\n            // target > 1);\n            // target  nums[mid]，target在右半段，\n                // 如果target==nums[mid]，虽然lo = mid + 1，但是最后在右半段没有找到更大的，target = 0 ? hi : -1;\n    }\n\n    /**\n     * 【1.3的改进：1.3的下一个数就是1.4的结果】\n     * 1.4 查找第一个大于某个数的下标\n     * 注意：第一个小于等于某个数的下一个数就是第一个大于某个数的数\n     * 例：int[] a = {1,2,2,2,4,8,10}，查找2，返回4的下标4；\n     * 查找3，返回4的下标4；查找4，返回8的下标5。如果没有大于key的元素，返回-1。\n     * 第一个小于等于2的数的下标是3，第一个大于2的数的下标是4\n     */\n    public static int binarySearchForFirstGreaterNumIndex(int[] nums, int target) {\n        if (nums == null || nums.length > 1);\n            // target = nums[mid]， 第一个大于target的数在右半段\n            } else {\n                lo = mid + 1;\n            }\n        }\n        // 如果target大于数组最后一个元素，lo最后变为nums.length，即没有元素大于target，需要返回-1。\n        return lo > 1);\n            // target = 0 ? hi : -1;\n    }\n\n\n    /**\n     * 【1.2的改进：1.2最后的返回加一个判断条件】\n     * 1.5 查找第一个等于某个数的下标\n     * 例：int[] a = {1,2,2,2,4,8,10}，查找2，返回第一个2的下标1；\n     * 查找4，返回4的下标4。如果没有等于target的元素，返回-1。\n     */\n    public static int findLeftIndex(int[] nums, int target) {\n        if (nums == null || nums.length > 1);\n            // target > 1);\n            // target  nums[mid]，target在右半段，\n                // 如果target==nums[mid]，虽然lo = mid + 1，但是最后在右半段没有找到更大的，target = 0 && nums[hi] == target ? hi : -1;\n    }\n\n    /**\n     * 【1.5和1.6的改进】\n     * 1.7 查找一个数出现的次数\n     */\n    public static int getCount(int[] nums, int target) {\n        int leftIndex = findLeftIndex(nums, target);\n        int rightIndex = findRightIndex(nums, target);\n        return rightIndex - leftIndex + 1;\n    }\n\n    public static int getCountComparator(int[] nums, int target) {\n        if (nums == null || nums.length > 1);\n            // mid  hi：最小值在右半部分\n            } else if (nums[mid] > nums[hi]) {\n                lo = mid + 1;\n            } else {\n                return mid;\n            }\n        }\n        return lo;\n    }\n\n    public static int findMinIndexComparator(int[] nums) {\n        if (nums == null || nums.length  System.out.println(Arrays.toString(x) + \" \"));\n            // printArray(arr1);\n            if (findMinIndex(arr1) != findMinIndexComparator(arr2)) {\n                succeed = false;\n                System.out.print(\"nums[]: \");\n                printArray(arr2);\n                System.out.println(\"find:\" + findMinIndex(arr1));\n                System.out.println(\"true:\" + findMinIndexComparator(arr2));\n                break;\n            }\n        }\n        System.out.println(succeed ? \"Nice!\" : \"Fucking fucked!\");\n    }\n\n    public static void main4(String[] args) {\n        int testTime = 500000;\n        int maxSize = 10;\n        int maxValue = 10;\n        boolean succeed = true;\n        for (int i = 0; i  System.out.println(Arrays.toString(x) + \" \"));\n            if (getCount(arr1, target) != getCountComparator(arr2, target)) {\n                succeed = false;\n                System.out.print(\"nums[]: \");\n                printArray(arr2);\n                System.out.println(\"target: \" + target);\n                break;\n            }\n        }\n        System.out.println(succeed ? \"Nice!\" : \"Fucking fucked!\");\n    }\n\n    public static void main3(String[] args) {\n        int[] num = {0, 1, 1, 2, 4, 8, 10};\n        System.out.println(binarySearchForFirstGreaterOrEqualNumIndex(num, 2));\n        System.out.println(binarySearchForFirstLessOrEqualNumIndex(num, -1));\n        System.out.println(binarySearchForFirstLessOrEqualNumIndex(num, 2));\n        System.out.println(binarySearchForFirstGreaterNumIndex(num, 2));\n        System.out.println(binarySearchForFirstGreaterNumIndex(num, 11));\n    }\n\n    public static void main2(String[] args) {\n        int[] nums = {1, 2, 3, 4, 6, 7, 9, 10};\n        System.out.println(binarySearchWithoutDuplicates(nums, 1));\n        System.out.println(binarySearchWithoutDuplicates(nums, 10));\n        System.out.println(binarySearchWithoutDuplicates(nums, 7));\n        System.out.println(binarySearchWithoutDuplicates(nums, 8));\n    }\n\n    public static void main1(String[] args) {\n        int testTime = 500000;\n        int maxSize = 10;\n        int maxValue = 10;\n        boolean succeed = true;\n        for (int i = 0; i \n"},"String/替换空格.html":{"url":"String/替换空格.html","title":"剑指offer 2.替换空格","keywords":"","body":"\n请实现一个函数，将一个字符串中的每个空格替换成“%20”。例如，当字符串为We Are Happy.则经过替换之后的字符串为We%20Are%20Happy。\n\npackage string;\n\npublic class 替换空格 {\n\n    /**\n     * 自想1：使用函数\n     */\n    public static String replaceSpace1(StringBuffer str) {\n        return str.toString().replaceAll(\" \", \"%20\");\n    }\n    /**\n     * 自想2：长度延长替换\n     */\n    public static String replaceSpace2(StringBuffer str) {\n        int beforeLength = str.length();\n        int space = 0;\n        for (int i = 0; i = 0 && j >= 0) {\n            if (str.charAt(i) != ' ') {\n                str.setCharAt(j--, str.charAt(i--));\n            } else {\n                str.setCharAt(j, '0');\n                str.setCharAt(j - 1, '2');\n                str.setCharAt(j - 2, '%');\n                j = j - 3;\n                i--;\n            }\n        }\n        return str.toString();\n    }\n\n    public static void main(String[] args) {\n        StringBuffer str = new StringBuffer(\"We are happy\");\n        System.out.println(replaceSpace1(str));\n        System.out.println(replaceSpace2(str));\n    }\n}\n\n"},"LinkedList/从尾到头打印链表.html":{"url":"LinkedList/从尾到头打印链表.html","title":"剑指offer 3.从尾到头打印链表","keywords":"","body":"\n输入一个链表，按链表值从尾到头的顺序返回一个ArrayList\n\npackage linkedlist;\n\nimport common.ListNode;\n\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport static common.PrintArrayList.printArrayList;\n\npublic class 从尾到头打印链表 {\n\n    /**\n     * 自想1：\n     * 从前到后遍历链表，并用数组存储，最后转换成ArrayList\n     * 时间复杂度O(n)，空间复杂度O(n)\n     */\n    public static ArrayList printListFromTailToHead1(ListNode listNode) {\n        int length = 0;\n        ListNode cur = listNode;\n        while (cur != null) {\n            length++;\n            cur = cur.next;\n        }\n        cur = listNode;\n        Integer[] array = new Integer[length];\n        for (int i = length - 1; i >= 0 && cur != null; i--) {\n            array[i] = cur.val;\n            cur = cur.next;\n        }\n        return new ArrayList<>(Arrays.asList(array));\n    }\n\n    /**\n     * 讨论区：递归\n     * 时间复杂度O(2的n次方)，空间复杂度O(1)\n     */\n    static ArrayList arrayList = new ArrayList<>();\n    public static ArrayList printListFromTailToHead2(ListNode listNode) {\n        if (listNode != null) {\n            printListFromTailToHead2(listNode.next);\n            arrayList.add(listNode.val);\n        }\n        return arrayList;\n    }\n\n    public static void main(String[] args) {\n        ListNode listNode = new ListNode(67);\n        listNode.next = new ListNode(0);\n        listNode.next.next = new ListNode(24);\n        listNode.next.next.next = new ListNode(58);\n        printArrayList(printListFromTailToHead1(listNode));\n        printArrayList(printListFromTailToHead2(listNode));\n    }\n}\n\n"},"Stack-Queue/栈和队列常用算法总结.html":{"url":"Stack-Queue/栈和队列常用算法总结.html","title":"栈和队列的转换/用数组实现栈和队列","keywords":"","body":"如何用栈来实现队列，如何用队列来实现栈，如何用数组来实现栈和队列。\n\n如何用栈实现队列\n思路：用栈实现队列结构，准备两个栈，一个push栈，一个pop栈，加数据入push栈，取数据从pop栈中拿。总体思路是进push的数据倒入pop栈中，两次逆序等于顺序。倒的两个限制：（1） 如果push开始往pop中倒数据，一次要倒完 （2） pop栈为空才允许倒数据。只要满足以上两个限制，倒数据的行为可以发生在任何时刻\npublic static class twoStacksToQueue {\n    private Stack pushStack;\n    private Stack popStack;\n\n    private void transfer() {\n        if (!popStack.empty())\n            return;\n        while (!pushStack.empty()) {\n            popStack.push(pushStack.pop());\n        }\n    }\n\n    public twoStacksToQueue() {\n        pushStack = new Stack<>();\n        popStack = new Stack<>();\n    }\n\n    public boolean offer(int num) {\n        pushStack.push(num);\n        transfer();\n        return true;\n    }\n\n    public int poll() {\n        if (popStack.empty() && pushStack.empty()) {\n            throw new RuntimeException(\"Queue is empty\");\n        }\n        transfer();\n        return popStack.pop();\n    }\n\n    public int peek() {\n        if (popStack.empty() && pushStack.empty()) {\n            throw new RuntimeException(\"Queue is empty\");\n        }\n        transfer();\n        return popStack.peek();\n    }\n}\n\n如何用队列实现栈\n思路：准备两个队列，一个data队列，一个help队列，压数的话压入data队列，弹出数将data队列中的数除了最后一个数之外其他的压入help队列，将最后一个数返回用户，再将data和help引用互换\npublic static class TwoQueuesToStack {\n    private Queue data;\n    private Queue help;\n\n    public TwoQueuesToStack() {\n        data = new LinkedList<>();\n        help = new LinkedList<>();\n    }\n\n    public int push(int num) {\n        data.add(num);\n        return num;\n    }\n\n    public int pop() {\n        if (data.isEmpty()) {\n            throw new RuntimeException(\"Stack is empty\");\n        }\n        while (data.size() > 1) {\n            help.add(data.poll());\n        }\n        int res = data.poll();\n        swap();\n        return res;\n    }\n\n    public int peek() {\n        if (data.isEmpty()) {\n            throw new RuntimeException(\"Stack is empty\");\n        }\n        while (data.size() > 1) {\n            help.add(data.poll());\n        }\n        int res = data.poll();\n        // 注意：最后一个数要加回help中\n        help.add(res);\n        swap();\n        return res;\n    }\n\n    private void swap() {\n        Queue tmp = data;\n        data = help;\n        help = tmp;\n    }\n}\n\n如何用数组实现栈\n思路：准备一个栈顶指针index，数组的大小设置为栈的大小为initSize。当要加一个数，index的含义为如果新来一个数，我把新来的数放在index位置。当用户让我弹出一个数，我弹出的数是index的前一个数（前一个数也就是位置处于index下面一个数，假设数组是竖直排列的，最底下是nums[0]）。index == size时前一个数下标为size - 1，栈满，如还要压入则给用户报错。index == 0时前一个数下标为-1。栈空，如还要弹出给用户报错。\npublic static class ArrayStack {\n    private int[] array;\n    private int index;\n    public int size; // 栈的大小，也是数组的大小\n\n    public ArrayStack(int initSize) {\n        if (initSize  0) {\n            return array[-- index];\n        } else {\n            throw new ArrayIndexOutOfBoundsException(\"The stack is empty!\");\n        }\n    }\n\n    public int peek() {\n        if (index > 0) {\n            return array[index - 1];\n        } else {\n            throw new ArrayIndexOutOfBoundsException(\"The stack is empty!\");\n        }\n    }\n}\n\n如何用数组实现队列\n思路：准备一个start变量一个end变量，一开始都指向0位置，再准备一个curSize变量约束start和end的行为，curSize表示队列已有元素的个数。start和end无直接关系（解耦），start或者end都是每次和curSize比较是否越界。end代表当要加一个数，我把新来的数放在end位置，start代表当用户让我取出一个数，我把start位置的数取出给用户，类似于加数队尾排队打饭，取数队头打完饭走人。end一旦到底就返回开头，start一直在追end，curSize == array.length时队列为满，如还要加数给用户报错，curSize == 0队列为空，如还要取数给用户报错。\npublic static class ArrayQueue {\n    private int[] array;\n    private int curSize;\n    private int start, end;\n    public ArrayQueue(int initSize) {\n        if (initSize \n"},"Stack-Queue/用两个栈实现队列.html":{"url":"Stack-Queue/用两个栈实现队列.html","title":"剑指offer 5.用两个栈实现队列","keywords":"","body":"\n 用两个栈来实现一个队列，完成队列的Push和Pop操作。 队列中的元素为int类型。\n\npackage stack_queue;\n\nimport java.util.Stack;\n\npublic class 用两个栈实现队列 {\n    /**\n     * 用栈实现队列结构\n     * 准备两个栈，一个push栈，一个pop栈\n     * 加数据入push栈，取数据从pop栈中拿\n     * 总体思路是进push的数据倒入pop栈中，两次逆序等于顺序\n     * 倒的两个限制：\n     * 1) 如果push开始往pop中倒数据，一次要倒完\n     * 2) pop栈不为空，不允许倒数据\n     * 只要满足以上两个限制，倒数据的行为可以发生在任何时刻\n     */\n\n    // push的栈\n    Stack stack1 = new Stack<>();\n    // pop的栈\n    Stack stack2 = new Stack<>();\n\n    public void transfer() {\n        if (!stack2.isEmpty()) {\n            return;\n        }\n        while (!stack1.isEmpty()) {\n            stack2.push(stack1.pop());\n        }\n    }\n\n    public void push(int node) {\n        stack1.push(node);\n        transfer();\n    }\n\n    public int pop() {\n        transfer();\n        return stack2.pop();\n    }\n}\n\n"},"Tree/二叉树遍历算法总结.html":{"url":"Tree/二叉树遍历算法总结.html","title":"二叉树遍历算法总结","keywords":"","body":"关于先序遍历、中序遍历、后序遍历的递归和非递归版本以及层序遍历的总结。\n\n二叉树节点的定义\npublic static class Node {\n    public int value;\n    public Node left;\n    public Node right;\n\n    public Node(int value) {\n        this.value = value;\n    }\n}\n\n先序中序后序中的“序”指的是打印根的顺序。\n先序遍历\n根->左子树->右子树\n递归版先序遍历\n思路：先打印自己，再对左子树进行先序遍历，再对右子树进行先序遍历\npublic static void preOrderRecur(Node root) {\n    if (root == null) return;\n    System.out.print(root.value + \" \");\n    preOrderRecur(root.left);\n    preOrderRecur(root.right);\n}\n\n非递归版先序遍历\n思路：用栈实现，弹出一个节点作为当前节点，打印当前节点，然后对于当前节点有右先压右，有左后压左。先压右后压左，弹出为先弹左后弹右\npublic static void preOrderUnrecur(Node root) {\n    if (root == null) return;\n    Stack stack = new Stack<>();\n    stack.push(root);\n    Node cur;\n    while (!stack.empty()) {\n        cur = stack.pop();\n        // 先打印自己\n        System.out.print(cur.value + \" \");\n        // 有右先压右\n        if (cur.right != null)\n            stack.push(cur.right);\n        // 有左后压左\n        if (cur.left != null)\n            stack.push(cur.left);\n    }\n}\n\n中序遍历\n左子树->根->右子树\n递归版中序遍历\n思路：对左子树进行中序遍历，打印自己，对右子树进行中序遍历\npublic static void inOrderRecur(Node root) {\n    if (root == null) return;\n    inOrderRecur(root.left);\n    System.out.print(root.value + \" \");\n    inOrderRecur(root.right);\n}\n\n非递归版中序遍历\n思路：用栈实现，当前节点不为空或者栈不为空继续while（只有当前节点为空，栈也为空才退出循环）：当前节点不为空，当前节点压入栈，当前节点往左跑（左边界一压压一溜）；当前节点为空，从栈中拿一个打印，当前节点向右跑\npublic static void inOrderUnrecur(Node root) {\n    if (root == null) return;\n    Stack stack = new Stack<>();\n    Node cur = root;\n    while (cur != null || !stack.empty()) { // 当前节点不为空或者栈不为空\n        if (cur != null) { // 当前节点不为空\n              stack.push(cur); // 压栈\n            cur = cur.left; // 向左走\n        } else { // 当前节点为空但是栈不为空\n            cur = stack.pop(); // 弹出一个节点\n            System.out.print(cur.value + \" \"); // 打印\n            cur = cur.right; // 当前节点向右走\n        }\n    }\n}\n\n后序遍历\n左子树->右子树->根\n递归版后序遍历\n思路：先对左子树进行后序遍历，再对右子树进行后序遍历，再打印自己\npublic static void posOrderRecur(Node root) {\n    if (root == null) return;\n    posOrderRecur(root.left);\n    posOrderRecur(root.right);\n    System.out.print(root.value + \" \");\n}\n\n非递归版后序遍历\n思路：后序：左-右-中，通过 中-左-右(先序：用栈实现，弹出一个节点作为当前节点，打印当前节点，然后对于当前节点有右先压右，有左后压左。先压右后压左，弹出为先弹左后弹右) 左右互换得到中-右-左，打印的时候不打印，存到栈里去，存完把所有栈中的元素打印 -> 左-右-中\npublic static void posOrderUnrecur(Node root) {\n    if (root == null) return;\n    Stack stack = new Stack<>();\n    Stack storeStack = new Stack<>();\n    stack.push(root);\n    Node cur;\n    while (!stack.empty()) {\n        cur = stack.pop();\n        storeStack.push(cur);\n        if (cur.left != null) \n            stack.push(cur.left);\n          if (cur.right != null)\n            stack.push(cur.right);\n    }\n    while (!storeStack.empty()) {\n        System.out.print(storeStack.pop().value + \" \");\n    }\n}\n\n优化：其实storeStack栈只需要存数就可以了，不需要存left,right指针，所以只需要用一个Stack\npublic static void posOrderUnrecur(Node root) {\n    if (root == null) return;\n    Stack stack = new Stack<>();\n    Stack storeStack = new Stack<>();\n    stack.push(root);\n    Node cur;\n    while (!stack.empty()) {\n        cur = stack.pop();\n        storeStack.push(cur.value);\n        if (cur.left != null) \n            stack.push(cur.left);\n          if (cur.right != null)\n            stack.push(cur.right);\n    }\n    while (!storeStack.empty()) {\n        System.out.print(storeStack.pop() + \" \");\n    }\n}\n\n层序遍历\n思路：先进先出，用队列实现。弹一个出来并打印，然后把分别左儿子右儿子加进去\npublic static void layerTraversal(Node root) {\n    if (root == null) return;\n    Queue queue = new LinkedList<>();\n    queue.add(root);\n    Node cur;\n    while (!queue.isEmpty()) { \n        cur = queue.poll();\n        System.out.print(cur.value + \" \");\n        if (cur.left != null) \n            queue.add(cur.left);\n        if (cur.right != null) \n            queue.add(cur.right);\n    }\n}\n\n完整的程序：\npackage tree;\n\nimport java.util.LinkedList;\nimport java.util.Queue;\nimport java.util.Stack;\n\npublic class PreInPosLayerTraversal {\n    public static class Node {\n        public int value;\n        public Node left;\n        public Node right;\n\n        public Node(int value) {\n            this.value = value;\n        }\n    }\n\n/*=====================================================================================*/\n    // 对左子树进行中序遍历，打印自己，对右子树进行中序遍历\n    public static void preOrderRecur(Node root) {\n        if (root == null) return;\n        System.out.print(root.value + \" \");\n        preOrderRecur(root.left);\n        preOrderRecur(root.right);\n    }\n\n    // 用栈实现，弹出一个节点作为当前节点，打印当前节点，\n    // 然后对于当前节点有右先压右，有左后压左。\n    // 先压右后压左，弹出为先弹左后弹右\n    public static void preOrderUnrecur(Node root) {\n        if (root == null) return;\n        Stack stack = new Stack<>();\n        stack.push(root);\n        Node cur;\n        while (!stack.empty()) {\n            cur = stack.pop();\n            // 先打印自己\n            System.out.print(cur.value + \" \");\n            // 有右先压右\n            if (cur.right != null)\n                stack.push(cur.right);\n            // 有左后压左\n            if (cur.left != null)\n                stack.push(cur.left);\n        }\n    }\n\n/*=====================================================================================*/\n    // 对左子树进行中序遍历，打印自己，对右子树进行中序遍历\n    public static void inOrderRecur(Node root) {\n        if (root == null) return;\n        inOrderRecur(root.left);\n        System.out.print(root.value + \" \");\n        inOrderRecur(root.right);\n    }\n\n    // 用栈实现，当前节点不为空或者栈不为空继续while（只有当前节点为空，栈也为空才退出循环）：\n    // 当前节点不为空，当前节点压入栈，当前节点往左跑（左边界一压压一溜）；\n    // 当前节点为空，从栈中拿一个打印，当前节点向右跑\n    public static void inOrderUnrecur(Node root) {\n        if (root == null) return;\n        Stack stack = new Stack<>();\n        Node cur = root;\n        while (cur != null || !stack.empty()) {\n            if (cur != null) { // 当前节点不为空\n                stack.push(cur);\n                cur = cur.left;\n            } else { // 当前节点为空，栈不为空\n                cur = stack.pop();\n                System.out.print(cur.value + \" \");\n                cur = cur.right;\n            }\n        }\n    }\n\n/*=====================================================================================*/\n    // 先对左子树进行后序遍历，再对右子树进行后序遍历，再打印自己\n    public static void posOrderRecur(Node root) {\n        if (root == null) return;\n        posOrderRecur(root.left);\n        posOrderRecur(root.right);\n        System.out.print(root.value + \" \");\n    }\n\n    // 后序：左-右-中，通过 中-左-右\n    // (回顾先序：用栈实现，弹出一个节点作为当前节点，打印当前节点，\n    // 然后对于当前节点有右先压右，有左后压左。\n    // 先压右后压左，弹出为先弹左后弹右)\n    // 对于先序左右互换得到中-右-左，\n    // 打印的时候不打印，存到栈里去，\n    // 存完把所有栈中的元素打印 -> 左-右-中\n    public static void posOrderUnrecur(Node root) {\n        if (root == null) return;\n        Stack stack = new Stack<>();\n        Stack storeStack = new Stack<>();\n        stack.push(root);\n        Node cur;\n        while (!stack.empty()) {\n            cur = stack.pop();\n            storeStack.push(cur.value);\n            if (cur.left != null)\n                stack.push(cur.left);\n            if (cur.right != null)\n                stack.push(cur.right);\n        }\n        while (!storeStack.empty()) {\n            System.out.print(storeStack.pop() + \" \");\n        }\n    }\n\n/*=====================================================================================*/\n    // 先进先出，用队列实现。弹一个出来，把左边右边加进去\n    public static void layerTraversal(Node root) {\n        if (root == null) return;\n        Queue queue = new LinkedList<>();\n        queue.add(root);\n        Node cur;\n        while (!queue.isEmpty()) {\n            cur = queue.poll();\n            System.out.print(cur.value + \" \");\n            if (cur.left != null)\n                queue.add(cur.left);\n            if (cur.right != null)\n                queue.add(cur.right);\n        }\n    }\n\n/*=====================================================================================*/\n    // print tree\n    public static void printTree(Node head) {\n        System.out.println(\"Binary Tree:\");\n        printInOrder(head, 0, \"H\", 17);\n        System.out.println();\n    }\n\n    public static void printInOrder(Node head, int height, String to, int len) {\n        if (head == null) {\n            return;\n        }\n        printInOrder(head.right, height + 1, \"v\", len);\n        String val = to + head.value + to;\n        int lenM = val.length();\n        int lenL = (len - lenM) / 2;\n        int lenR = len - lenM - lenL;\n        val = getSpace(lenL) + val + getSpace(lenR);\n        System.out.println(getSpace(height * len) + val);\n        printInOrder(head.left, height + 1, \"^\", len);\n    }\n\n    public static String getSpace(int num) {\n        String space = \" \";\n        StringBuffer buf = new StringBuffer(\"\");\n        for (int i = 0; i \n"},"Tree/重建二叉树.html":{"url":"Tree/重建二叉树.html","title":"剑指offer 4.重建二叉树","keywords":"","body":"\n输入某二叉树的前序遍历和中序遍历的结果，请重建出该二叉树。\n假设输入的前序遍历和中序遍历的结果中都不含重复的数字。\n例如输入前序遍历序列{1,2,4,7,3,5,6,8}和中序遍历序列{4,7,2,1,5,3,8,6}，则重建二叉树并返回。\n\npackage tree;\n\nimport common.TreeNode;\n\npublic class 重建二叉树 {\n    /**\n     * 自想1：\n     * pre[]中pre[preStart]是root，在in[]中找到in[inIndex]=root\n     * 左子树 pre[preStart + 1]~pre[inIndex - inStart + preStart]  preEnd || inStart > inEnd) {\n            return null;\n        }\n        TreeNode root = new TreeNode(pre[preStart]);\n        int inIndex = inStart;\n        for (int i = inStart; i \n"},"Tree/leetcode105.html":{"url":"Tree/leetcode105.html","title":"LeetCode105 Construct Binary Tree from Preorder and Inorder Traversal","keywords":"","body":"\nGiven preorder and inorder traversal of a tree, construct the binary tree.\nNote:\nYou may assume that duplicates do not exist in the tree.\nFor example, given\npreorder = [3,9,20,15,7]\ninorder = [9,3,15,20,7]\nReturn the following binary tree:\n    3\n   / \\\n  9  20\n    /  \\\n   15   7\n\npackage array;\n\nimport common.TreeNode;\n\npublic class leetcode105ConstructBinaryTreeFromPreorderAndInorderTraversal {\n\n/**\n     * 自想：二分的思路，先序分成[根|左|右]，中序分成[左|根|右]，根在先序一定是preorder[0]，找到根在中序中inorder[inRoot]\n     * 左右子树各分别二分，递归到超出范围则向上返回\n     * 在先序中，根是preStart，左子树是[preStart + 1, preStart + 1 + leftLength - 1]，右子树是[preStart + leftLength + 1, preEnd]\n     * 在中序中，左子树是[inStart, inRoot - 1]，根是inRoot，右子树是[inRoot + 1, inEnd]\n     * 所以左子树的总节点个数leftLength = inRoot - 1 - inStart + 1 = inRoot - inStart\n     * 所以先序中左子树是[preStart + 1, preStart + inRoot - inStart]，右子树是[preStart + inRoot - inStart + 1, preEnd]\n     * T(n) = 2T(n/2) + O(n)，时间复杂度nlogn\n     */\n    public TreeNode buildTree(int[] preorder, int[] inorder) {\n        if (preorder == null || inorder == null || preorder.length  preEnd || inStart > inEnd) {\n            return null;\n        }\n        TreeNode root = new TreeNode(preorder[preStart]);\n        int inRoot = inStart;\n        for (int i = inStart; i \n"},"bfs-dfs/bfs-dfs总结.html":{"url":"bfs-dfs/bfs-dfs总结.html","title":"bfs/dfs总结","keywords":"","body":"\nbfs广度优先搜索/dfs深度优先搜索相关算法题的思路总结。\n\n广度优先搜索（bfs）\n广度优先搜索在进一步遍历图中顶点之前，先访问当前顶点的所有邻接结点。\n\n首先选择一个顶点作为起始结点，并将其染成灰色，其余结点为白色。\n\n将起始结点放入队列中。\n\n从队列首部选出一个顶点，并找出所有与之邻接的结点，将找到的邻接结点放入队列尾部，将已访问过结点涂成黑色，没访问过的结点是白色。如果顶点的颜色是灰色，表示已经发现并且放入了队列，如果顶点的颜色是白色，表示还没有发现\n\n按照同样的方法处理队列中的下一个结点。\n基本就是出队的顶点变成黑色，在队列里的是灰色，还没入队的是白色。\n用一副图来表达这个流程如下：\n\n\n\n从顶点1开始进行广度优先搜索：\n\n初始状态，从顶点1开始，队列 = {1}\n访问1的邻接顶点，1出队变黑，2,3入队，队列 = {2, 3}\n访问2的邻接结点，2出队，4入队，队列 = {3, 4}\n访问3的邻接结点，3出队，队列 = {4}\n访问4的邻接结点，4出队，队列 = {空}\n 结点5对于1来说不可达。\n\n给一个邻接矩阵实现bfs输出\nimport java.util.LinkedList;\nimport java.util.Queue;\n\npublic class bfs {\n    /* matrix为n*n邻接矩阵：\n    * matrix[i][j]为1表示有从i到j的有向边\n    * 为0表示没有从i到j的有向边\n    * */\n    public static void main(String[] args) {\n        // 1,2,3,4,5 五个节点\n        int[][] matrix = {\n                {0, 1, 1, 0, 0},\n                {0, 0, 1, 1, 0},\n                {0, 1, 1, 1, 0},\n                {1, 0, 0, 0, 0},\n                {0, 0, 1, 1, 0}\n                };\n        bfs(matrix);\n    }\n\n    public static void bfs(int[][] matrix) {\n        if (matrix.length != matrix[0].length) {\n            return;\n        }\n        int n = matrix.length;\n        boolean[] visited = new boolean[n]; // 全部会初始化为false\n        for (int i = 0; i  queue = new LinkedList<>();\n        queue.add(start);\n        visited[start] = true;\n        while (!queue.isEmpty()) {\n            int pop = queue.poll();\n            System.out.println((pop + 1) + \" \");\n            for (int i = 0; i \nbfs相关问题\n二叉树层次遍历\n    // 先进先出，用队列实现。弹一个出来，把左边右边加进去\n    // bfs的思想\n    public static void layerTraversal(Node root) {\n        if (root == null) return;\n        Queue queue = new LinkedList<>();\n        queue.add(root);\n        Node cur;\n        while (!queue.isEmpty()) {\n            cur = queue.poll();\n            System.out.print(cur.value + \" \");\n            if (cur.left != null)\n                queue.add(cur.left);\n            if (cur.right != null)\n                queue.add(cur.right);\n        }\n    }\n\n深度优先遍历（dfs）\n深度优先搜索在搜索过程中访问某个顶点后，需要递归地访问此顶点的所有未访问过的相邻顶点。\n初始条件下所有节点为白色，选择一个作为起始顶点，按照如下步骤遍历：\n\n选择起始顶点涂成灰色，表示还未访问\n从该顶点的邻接顶点中选择一个，继续这个过程（即再寻找邻接结点的邻接结点），一直深入下去，直到一个顶点没有邻接结点了，涂黑它，表示访问过了\n回溯到这个涂黑顶点的上一层顶点，再找这个上一层顶点的其余邻接结点，继续如上操作，如果所有邻接结点往下都访问过了，就把自己涂黑，再回溯到更上一层。\n上一层继续做如上操作，知道所有顶点都访问过。\n用图可以更清楚的表达这个过程：\n\n\n从顶点1开始做深度搜索：\n\n初始状态，从顶点1开始\n依次访问过顶点1,2,3后，终止于顶点3\n从顶点3回溯到顶点2，继续访问顶点5，并且终止于顶点5\n从顶点5回溯到顶点2，并且终止于顶点2\n从顶点2回溯到顶点1，并终止于顶点1\n从顶点4开始访问，并终止于顶点4\n\n给一个邻接矩阵实现dfs输出\npublic class dfs {\n    /* matrix为n*n邻接矩阵：\n     * matrix[i][j]为1表示有从i到j的有向边\n     * 为0表示没有从i到j的有向边\n     * */\n    public static void main(String[] args) {\n        // 1,2,3,4,5 五个节点\n        int[][] matrix = {\n                { 0, 1, 1, 0, 0 },\n                { 0, 0, 1, 0, 1 },\n                { 0, 0, 1, 0, 0 },\n                { 1, 1, 0, 0, 1 },\n                { 0, 0, 1, 0, 0 }\n        };\n        dfs(matrix);\n    }\n\n    public static void dfs(int[][] matrix) {\n        if (matrix.length != matrix[0].length) {\n            return;\n        }\n        int n = matrix.length;\n        boolean[] visited = new boolean[n]; // 全部会初始化为false\n        for (int i = 0; i \ndfs与backtracking相关问题\n给定一个数字n，字典序输出[1, n]的整数\n\nGiven an integer n, return 1 - n in lexicographical order.\nFor example, given 13, return: [1,10,11,12,13,2,3,4,5,6,7,8,9].\nPlease optimize your algorithm to use less time and space. The input size may be as large as 5,000,000.\n解答链接 LeetCode386 Lexicographical Numbers\n\n    public static List lexicalOrder(int n) {\n        List list = new ArrayList<>();\n        for (int i = 1; i  list, int n, int cur) {\n        if (cur > n) return;\n        list.add(cur);\n        for (int i = 0; i \n给定一个没有重复数字的整数集，输出它的所有子集\n\nGiven a set of distinct integers, nums, return all possible subsets (the power set).\nNote: The solution set must not contain duplicate subsets.\nExample:\nInput: nums = [1,2,3]\nOutput:\n[\n  [3],\n  [1],\n  [2],\n  [1,2,3],\n  [1,3],\n  [2,3],\n  [1,2],\n  []\n]\n解答链接 LeetCode78 Subsets\n\n    public List> subsets(int[] nums) {\n        if (nums == null || nums.length > lists = new ArrayList<>();\n        backtrack(lists, new ArrayList<>(), nums, 0);\n        return lists;\n    }\n\n    public void backtrack(List> lists, List tmpList, int[] nums, int start) {\n        lists.add(new ArrayList<>(tmpList));\n        for (int i = start; i \n给定一个可能含有重复数字的整数集，输出它的所有子集\n\nGiven a collection of integers that might contain duplicates, nums, return all possible subsets (the power set).\nNote: The solution set must not contain duplicate subsets.\nExample:\nInput: [1,2,2]\nOutput:\n[\n  [2],\n  [1],\n  [1,2,2],\n  [2,2],\n  [1,2],\n  []\n]\n解答链接 LeetCode90 Subsets II\n\n    public List> subsetsWithDup(int[] nums) {\n        if (nums == null || nums.length > lists = new ArrayList<>();\n        backtrack(lists, new ArrayList<>(), nums, 0);\n        return lists;\n    }\n\n    public void backtrack(List> lists, List tmpList, int[] nums, int start) {\n        lists.add(new ArrayList<>(tmpList));\n        for (int i = start; i = start + 1 && nums[i - 1] == nums[i]) continue; // i - 1 >= start\n            tmpList.add(nums[i]);\n            backtrack(lists, tmpList, nums, i + 1);\n            tmpList.remove(tmpList.size() - 1);\n        }\n    }\n\n给定一个不含重复数字的整数数组candidates和一个target，candidates中的数每个可以使用一次或多次，找到所有和为target的集合\n\nGiven a set of candidate numbers (candidates) (without duplicates) and a target number (target), find all unique combinations in candidates where the candidate numbers sums to target.\nThe same repeated number may be chosen from candidates unlimited number of times.\nNote:\nAll numbers (including target) will be positive integers.\nThe solution set must not contain duplicate combinations.\nExample 1:\nInput: candidates = [2,3,6,7], target = 7,\nA solution set is:\n[\n[7],\n[2,2,3]\n]\nExample 2:\nInput: candidates = [2,3,5], target = 8,\nA solution set is:\n[\n[2,2,2,2],\n[2,3,3],\n[3,5]\n]\n解答连接 LeetCode39 Combination Sum\n\n    public List> combinationSum(int[] candidates, int target) {\n        if (candidates == null || candidates.length > lists = new ArrayList<>();\n        backtrack(lists, new ArrayList<>(), candidates, 0, target);\n        return lists;\n    }\n\n    public void backtrack(List> lists, List tmpList, int[] candidates, int start, int remain) {\n        if (remain (tmpList));\n        } else {\n            for (int i = start; i \n给定一个可能含有重复数字的整数数组candidates和一个target，candidates中的数每个只能使用至多一次，找到所有和为target的集合\n\nGiven a collection of candidate numbers (candidates) and a target number (target), find all unique combinations in candidates where the candidate numbers sums to target.\nEach number in candidates may only be used once in the combination.\nNote:\nAll numbers (including target) will be positive integers.\nThe solution set must not contain duplicate combinations.\nExample 1:\nInput: candidates = [10,1,2,7,6,1,5], target = 8,\nA solution set is:\n[\n  [1, 7],\n  [1, 2, 5],\n  [2, 6],\n  [1, 1, 6]\n]\nExample 2:\nInput: candidates = [2,5,2,1,2], target = 5,\nA solution set is:\n[\n  [1,2,2],\n  [5]\n]\n解答链接 LeetCode40 Combination Sum II\n\n    public List> combinationSum2(int[] candidates, int target) {\n        if (candidates == null || candidates.length > lists = new ArrayList<>();\n        backtrack(lists, new ArrayList<>(), candidates, 0, target);\n        return lists;\n    }\n\n    public void backtrack(List> lists, List tmpList, int[] candidates, int start, int remain) {\n        if (remain (tmpList));\n        } else {\n            for (int i = start; i = start + 1 && candidates[i - 1] == candidates[i]) {\n                    continue;\n                }\n                tmpList.add(candidates[i]);\n                backtrack(lists, tmpList, candidates, i + 1, remain - candidates[i]);\n                tmpList.remove(tmpList.size() - 1);\n            }\n        }\n    }\n\n给定一个不含有重复数字的整数的集合nums[]，返回其全排列\n\nGiven a collection of distinct integers, return all possible permutations.\nExample:\nInput: [1,2,3]\nOutput:\n[\n  [1,2,3],\n  [1,3,2],\n  [2,1,3],\n  [2,3,1],\n  [3,1,2],\n  [3,2,1]\n]\n解答链接 LeetCode46 Permutations\n\n    public List> permute(int[] nums) {\n        if (nums == null || nums.length > lists = new ArrayList<>();\n        backtrack(lists, new ArrayList<>(), nums);\n        return lists;\n    }\n    public void backtrack(List> lists, List tmpList, int[] nums) {\n        if (tmpList.size() == nums.length) {\n            lists.add(new ArrayList<>(tmpList));\n        } else {\n            for (int i = 0; i \n给定一个可能含有重复数字的整数的集合nums[]，返回其不重复的全排列\n\nGiven a collection of numbers that might contain duplicates, return all possible unique permutations.\nExample:\nInput: [1,1,2]\nOutput:\n[\n  [1,1,2],\n  [1,2,1],\n  [2,1,1]\n]\n解答链接 LeetCode47 Permutations II\n\n    /*        理解!used(i-1)：\n            首先要明白i作为数组内序号，i是唯一的\n            给出一个排好序的数组，[1,2,2]\n            第一层递归            第二层递归            第三层递归\n            [1]                    [1,2]                [1,2,2]\n        序号:[0]                    [0,1]                [0,1,2]\n            这种都是OK的，但当第二层递归i扫到的是第二个\"2\"，情况就不一样了\n            [1]                    [1,2]                [1,2,2]            \n        序号:[0]                    [0,2]                [0,2,1]\n            所以当i=2，第二层递归判断的时候!used(1)就变成了true，不会再继续递归下去，跳出循环\n        */\n    public List> permuteUnique(int[] nums) {\n        if (nums == null || nums.length > lists = new ArrayList<>();\n        backtrack(lists, new ArrayList<>(), nums, new boolean[nums.length]);\n        return lists;\n    }\n\n    public void backtrack(List> lists, List tmpList, int[] nums, boolean[] used) {\n        if (tmpList.size() == nums.length) {\n            lists.add(new ArrayList<>(tmpList));\n        } else {\n            for (int i = 0; i = 1 && nums[i - 1] == nums[i] && !used[i - 1])) {\n                    continue;\n                }\n                used[i] = true;\n                tmpList.add(nums[i]);\n                backtrack(lists, tmpList, nums, used);\n                used[i] = false;\n                tmpList.remove(tmpList.size() - 1);\n            }\n        }\n    }\n}\n\n"},"bfs-dfs/leetcode40.html":{"url":"bfs-dfs/leetcode40.html","title":"LeetCode40 Combination Sum II","keywords":"","body":"\nGiven a collection of candidate numbers (candidates) and a target number (target), find all unique combinations in candidates where the candidate numbers sums to target.\nEach number in candidates may only be used once in the combination.\nNote:\nAll numbers (including target) will be positive integers.\nThe solution set must not contain duplicate combinations.\nExample 1:\nInput: candidates = [10,1,2,7,6,1,5], target = 8,\nA solution set is:\n[\n  [1, 7],\n  [1, 2, 5],\n  [2, 6],\n  [1, 1, 6]\n]\nExample 2:\nInput: candidates = [2,5,2,1,2], target = 5,\nA solution set is:\n[\n  [1,2,2],\n  [5]\n]\n\npackage backtracking;\n\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\n\nimport static format.PrintDoubleArrayList.printDoubleList;\n\npublic class leetcode40CombinationSum2 {\n    public static List> combinationSum2(int[] candidates, int target) {\n        if (candidates == null || candidates.length > lists = new ArrayList<>();\n        backtrack(lists, new ArrayList<>(), candidates, 0, target);\n        return lists;\n    }\n\n    public static void backtrack(List> lists, List tmpList, int[] candidates, int start, int remain) {\n        if (remain (tmpList));\n        } else {\n            for (int i = start; i = start + 1 && candidates[i - 1] == candidates[i]) {\n                    continue;\n                }\n                tmpList.add(candidates[i]);\n                backtrack(lists, tmpList, candidates, i + 1, remain - candidates[i]);\n                tmpList.remove(tmpList.size() - 1);\n            }\n        }\n    }\n    /*=====================================================================================*/\n\n    public static void main(String[] args) {\n        int[] nums1 = new int[]{10,1,2,7,6,1,5};\n        int target1 = 8;\n        printDoubleList(combinationSum2(nums1, target1));\n        System.out.println(\"====================\");\n        int[] nums2 = new int[]{2,5,2,1,2};\n        int target2 = 5;\n        printDoubleList(combinationSum2(nums2, target2));\n    }\n}\n\n打印函数：\n    public static void printDoubleList(List> lists) {\n        for (List list : lists) {\n            for (Integer i : list) {\n                System.out.print(i + \" \");\n            }\n            System.out.println();\n        }\n    }\n\n"},"bfs-dfs/leetcode46.html":{"url":"bfs-dfs/leetcode46.html","title":"LeetCode46 Permutation","keywords":"","body":"\nGiven a collection of distinct integers, return all possible permutations.\nExample:\nInput: [1,2,3]\nOutput:\n[\n  [1,2,3],\n  [1,3,2],\n  [2,1,3],\n  [2,3,1],\n  [3,1,2],\n  [3,2,1]\n]\n\npackage backtracking;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport static format.PrintDoubleArrayList.printDoubleList;\n\npublic class leetcode46Permutation {\n    public static List> permute(int[] nums) {\n        if (nums == null || nums.length > lists = new ArrayList<>();\n        backtrack(lists, new ArrayList<>(), nums);\n        return lists;\n    }\n    public static void backtrack(List> lists, List tmpList, int[] nums) {\n        if (tmpList.size() == nums.length) {\n            lists.add(new ArrayList<>(tmpList));\n        } else {\n            for (int i = 0; i \n打印函数：\n    public static void printDoubleList(List> lists) {\n        for (List list : lists) {\n            for (Integer i : list) {\n                System.out.print(i + \" \");\n            }\n            System.out.println();\n        }\n    }\n\n"},"bfs-dfs/leetcode47.html":{"url":"bfs-dfs/leetcode47.html","title":"LeetCode47 Permutations II","keywords":"","body":"\nGiven a collection of numbers that might contain duplicates, return all possible unique permutations.\nExample:\nInput: [1,1,2]\nOutput:\n[\n  [1,1,2],\n  [1,2,1],\n  [2,1,1]\n]\n\npackage backtracking;\n\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\n\nimport static format.PrintDoubleArrayList.printDoubleList;\n\npublic class leetcode47Permutation2 {\n    /*\n            理解!used(i-1)：\n            首先要明白i作为数组内序号，i是唯一的\n            给出一个排好序的数组，[1,2,2]\n            第一层递归            第二层递归            第三层递归\n            [1]                    [1,2]                [1,2,2]\n        序号:[0]                    [0,1]                [0,1,2]\n            这种都是OK的，但当第二层递归i扫到的是第二个\"2\"，情况就不一样了\n            [1]                    [1,2]                [1,2,2]\n        序号:[0]                    [0,2]                [0,2,1]\n            所以当i=2，第二层递归判断的时候!used(1)就变成了true，不会再继续递归下去，跳出循环\n        */\n\n    public static List> permuteUnique(int[] nums) {\n        if (nums == null || nums.length > lists = new ArrayList<>();\n        backtrack(lists, new ArrayList<>(), nums, new boolean[nums.length]);\n        return lists;\n    }\n\n    public static void backtrack(List> lists, List tmpList, int[] nums, boolean[] used) {\n        if (tmpList.size() == nums.length) {\n            lists.add(new ArrayList<>(tmpList));\n        } else {\n            for (int i = 0; i = 1 && nums[i - 1] == nums[i] && !used[i - 1])) {\n                    continue;\n                }\n                used[i] = true;\n                tmpList.add(nums[i]);\n                backtrack(lists, tmpList, nums, used);\n                used[i] = false;\n                tmpList.remove(tmpList.size() - 1);\n            }\n        }\n    }\n\n    public static void main(String[] args) {\n        int[] nums = new int[]{1,1,2};\n        printDoubleList(permuteUnique(nums));\n    }\n}\n\n"},"bfs-dfs/leetcode78.html":{"url":"bfs-dfs/leetcode78.html","title":"LeetCode78 Subsets","keywords":"","body":"\nGiven a set of distinct integers, nums, return all possible subsets (the power set).\nNote: The solution set must not contain duplicate subsets.\nExample:\nInput: nums = [1,2,3]\nOutput:\n[\n  [3],\n  [1],\n  [2],\n  [1,2,3],\n  [1,3],\n  [2,3],\n  [1,2],\n  []\n]\n\npackage backtracking;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport static format.printDoubleArrayList.printDoubleList;\n\npublic class leetcode78Subsets {\n  /*=====================================================================================*/\n\n    /*必然是看的讨论区的： \n    backtracking thoughts:\n    Pick a starting point.\n    while(Problem is not solved)\n        For each path from the starting point.\n            check if selected path is safe, if yes select it\n            and make recursive call to rest of the problem\n            before which undo the current move.\n        End For\n    If none of the move works out, return false, NO SOLUTON.\n\n    用tempList存储要放入list中的单元，回溯之后注意撤回上一步\n    每个数可以在或者不在tmpList中，或者说n个整数的集合的子集有2^n个，所以时间复杂度O(2^n)\n    递归的深度是O(n)在每个切分点要记录一次start，也使用了辅助空间tmpList为O(n)，所以额外空间复杂度O(n)*1 + O(n) = O(n)\n    输出顺序：[[],[1],[1,2],[1,2,3],[1,3],[2],[2,3],[3]]\n    */\n\n    public static List> subsets(int[] nums) {\n        List> lists = new ArrayList<>();\n        // Arrays.sort(nums);\n        backtrack(lists, new ArrayList<>(), nums, 0);\n        return lists;\n    }\n\n    public static void backtrack(List> lists, List tmpList, int[] nums, int start) {\n        // 注意：不能lists.add(tmpList);\n        // 因为tmpList后面一直在修改，我们只想把现在的副本放进lists中\n        lists.add(new ArrayList<>(tmpList));\n        for (int i = start; i \n打印函数：\npackage format;\n\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class printDoubleArrayList {\n    public static void printDoubleArray(int[][] arrays) {\n        for (int[] array : arrays) {\n            for (int i : array) {\n                System.out.print(i + \" \");\n            }\n            System.out.println();\n        }\n    }\n\n    public static void printDoubleList(List> lists) {\n        for (List list : lists) {\n            for (Integer i : list) {\n                System.out.print(i + \" \");\n            }\n            System.out.println();\n        }\n    }\n\n    public static void printDoubleArrayList(ArrayList> arrayLists) {\n        for (ArrayList arrayList : arrayLists) {\n            for (Integer i : arrayList) {\n                System.out.print(i + \" \");\n            }\n            System.out.println();\n        }\n    }\n\n    public static void main(String[] args) {\n        List> lists = new ArrayList<>();\n        lists.add(Arrays.asList(1,2));\n        lists.add(Arrays.asList(4,5,6));\n        lists.add(Arrays.asList(7,8,9,10));\n        printDoubleList(lists);\n        System.out.println(\"=======================================\");\n\n        ArrayList> arrayLists = new ArrayList<>();\n        arrayLists.add(new ArrayList(Arrays.asList(1,2,3,4)));\n        arrayLists.add(new ArrayList(Arrays.asList(4,5,6)));\n        arrayLists.add(new ArrayList(Arrays.asList(7,8)));\n        printDoubleArrayList(arrayLists);\n        System.out.println(\"======================================\");\n\n        List> lists2 = new ArrayList<>();\n        List tmpList = new ArrayList<>();\n        tmpList.add(1);\n        tmpList.add(2);\n        tmpList.add(3);\n        //lists2.add(tmpList);\n        lists2.add(new ArrayList<>(tmpList));\n        tmpList.clear();\n        tmpList.add(4);\n        tmpList.add(5);\n        //lists2.add(tmpList); 输出4545，因为tmpList后面改变了。\n        lists2.add(new ArrayList<>(tmpList));\n        printDoubleList(lists2);\n    }\n}\n\n"},"bfs-dfs/leetcode90.html":{"url":"bfs-dfs/leetcode90.html","title":"LeetCode90 Subsets II","keywords":"","body":"\nGiven a collection of integers that might contain duplicates, nums, return all possible subsets (the power set).\nNote: The solution set must not contain duplicate subsets.\nExample:\nInput: [1,2,2]\nOutput:\n[\n  [2],\n  [1],\n  [1,2,2],\n  [2,2],\n  [1,2],\n  []\n]\n\npackage backtracking;\n\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\n\nimport static backtracking.leetcode78Subsets.subsets;\nimport static format.printDoubleArrayList.printDoubleList;\n\npublic class leetcode90Subsets2 {  \n    /*=====================================================================================*/\n    /*比leetcode78 Subsets多了一个条件：给定的nums可能有重复元素\n    * 基本回溯能实现，skip duplicates边界条件扣的不清楚看的讨论区的\n    * */\n    public static List> subsets2(int[] nums) {\n        List> list = new ArrayList<>();\n        Arrays.sort(nums);\n        backtrack(list, new ArrayList<>(), nums, 0);\n        return list;\n    }\n\n    public static void backtrack(List> list, List tmpList, int[] nums, int start) {\n        list.add(new ArrayList<>(tmpList));\n        for (int i = start; i  start && nums[i] == nums[i - 1]) {\n                continue; // skip duplicates\n            }\n            tmpList.add(nums[i]);\n            backtrack(list, tmpList, nums, i + 1);\n            tmpList.remove(tmpList.size() - 1);\n        }\n    }\n\n    public static void main(String[] args) {\n        int[] nums = new int[]{1,2,2,4};\n        printDoubleList(subsets2(nums));\n        System.out.println(\"=======================\");\n        printDoubleList(subsets(nums));\n        System.out.println(\"=======================\");\n        int[] nums2 = new int[]{1,2,3,4};\n        printDoubleList(subsets(nums2));\n    }\n}\n\n"},"bfs-dfs/leetcode386.html":{"url":"bfs-dfs/leetcode386.html","title":"LeetCode386 Lexicographical Numbers","keywords":"","body":"\nGiven an integer n, return 1 - n in lexicographical order.\nFor example, given 13, return: [1,10,11,12,13,2,3,4,5,6,7,8,9].\nPlease optimize your algorithm to use less time and space. The input size may be as large as 5,000,000.\n\n看成9颗树，子节点是在父节点的基础上加一位（*10 + i），按顺序进行先序遍历。\n       1        2        3    ...\n      /\\        /\\       /\\\n   10 ...19  20...29  30...39   ....\n  /\\      /\\ /\\  /\\   /\\   /\\  \n 100...109               390...399 ...\npackage backtracking;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport static format.PrintList.printList;\n\npublic class leetcode386LexicographicalNumbers {\n    public static List lexicalOrder(int n) {\n        List list = new ArrayList<>();\n        for (int i = 1; i  list, int n, int cur) {\n        if (cur > n) return;\n        list.add(cur);\n        for (int i = 0; i \n打印函数：\npackage format;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class PrintList {\n    public static void printList(List list) {\n        Integer[] array = list.toArray(new Integer[list.size()]);\n        for (Integer i : array) {\n            System.out.print(i + \" \");\n        }\n        System.out.println();\n    }\n\n    public static void main(String[] args) {\n        List arrayList = new ArrayList<>();\n        arrayList.add(1);\n        arrayList.add(2);\n        arrayList.add(3);\n        printList(arrayList);\n    }\n}\n\n"},"dp/leetcode55.html":{"url":"dp/leetcode55.html","title":"LeetCode55 Jump Game","keywords":"","body":"\nGiven an array of non-negative integers, you are initially positioned at the first index of the array.\nEach element in the array represents your maximum jump length at that position.\nDetermine if you are able to reach the last index.\nExample 1:\nInput: [2,3,1,1,4]\nOutput: true\nExplanation: Jump 1 step from index 0 to 1, then 3 steps to the last index.\nExample 2:\nInput: [3,2,1,0,4]\nOutput: false\nExplanation: You will always arrive at index 3 no matter what. Its maximum\n             jump length is 0, which makes it impossible to reach the last index.\n\npackage array;\n\nenum Index {\n    GOOD, BAD, UNKNOWN\n}\n\npublic class leetcode55JumpGame {\n    /**\n     * 自想1：回溯（超时）\n     * 如果nums[]中的每个数都>=nums.length - 1，那么所有的位置都可以选择走或者不走，时间复杂度O(2的n次方)，\n     * 递归深度为n，空间复杂度O(n)\n     */\n    public boolean canJumpFromPosition1(int[] nums, int startIndex) {\n        // 结束条件\n        if (startIndex == nums.length - 1) {\n            return true;\n        }\n        // 算出边界条件\n        int nextMaxIndex = Math.min(startIndex + nums[startIndex], nums.length - 1);\n        // 基于当前情况做深度搜索(一步步走到底)\n        for (int nextIndex = startIndex + 1; nextIndex = 0; startIndex--) {\n            int nextMaxIndex = Math.min(startIndex + nums[startIndex], nums.length - 1);\n            for (int nextIndex = startIndex + 1; nextIndex = 0; startIndex--) {\n            // 从startIndex开始可以走0 ~ nums[startIndex]步，\n            // 停止的位置是startIndex ~ startIndex + nums[startIndex]，\n            // 如果中间包含lastIndex则表示可以从startIndex走到lastIndex\n            if (startIndex + nums[startIndex] >= lastIndex) {\n                lastIndex = startIndex;\n            }\n        }\n        return lastIndex == 0;\n    }\n}\n\n"},"dp/leetcode62.html":{"url":"dp/leetcode62.html","title":"LeetCode62 Unique Paths","keywords":"","body":"\nA robot is located at the top-left corner of a m x n grid (marked 'Start' in the diagram below).\nThe robot can only move either down or right at any point in time.\nThe robot is trying to reach the bottom-right corner of the grid(marked 'Finish' in the diagram below).\nHow many possible unique paths are there?\n\n\n\n\nAbove is a 7 x 3 grid. How many possible unique paths are there?\nNote: m and n will be at most 100.\nExample 1:\nInput: m = 3, n = 2\nOutput: 3\nExplanation:\nFrom the top-left corner, there are a total of 3 ways to reach the bottom-right corner:\n\nRight -> Right -> Down\nRight -> Down -> Right\nDown -> Right -> Right\nExample 2:\nInput: m = 7, n = 3\nOutput: 28\n\n\npackage array;\n\npublic class leetcode62UniquePaths {\n/*=====================================================================================*/\n    /*自想1：\n    * dp问题：\n    * 用int[n][m]矩阵记录到达坐标为(i,j)的paths数量\n    * 时间复杂度O(n²)，空间复杂度O(m*n)\n    * */\n    public static int uniquePaths(int m, int n) {\n        int[][] paths = new int[n][m];\n        for (int j = 0; j \n"},"dp/leetcode621.html":{"url":"dp/leetcode621.html","title":"LeetCode621 Task Scheduler","keywords":"","body":"\nGiven a char array representing tasks CPU need to do. It contains capital letters A to Z where different letters represent different tasks. Tasks could be done without original order. Each task could be done in one interval. For each interval, CPU could finish one task or just be idle.\nHowever, there is a non-negative cooling interval n that means between two same tasks,\nthere must be at least n intervals that CPU are doing different tasks or just be idle.\nYou need to return the least number of intervals the CPU will take to finish all the given tasks.\nExample:\nInput: tasks = [\"A\",\"A\",\"A\",\"B\",\"B\",\"B\"], n = 2\nOutput: 8\nExplanation: A -> B -> idle -> A -> B -> idle -> A -> B.\nNote:\nThe number of tasks is in the range [1, 10000].\nThe integer n is in the range [0, 100].\n\npackage array;\n\nimport java.util.Arrays;\n\npublic class leetcode621TaskScheduler {\n /*=====================================================================================*/\n /*自想1：\n * 按出现次数从大到小重新排列，并把字符数组转换成int数组，\n * index为char-'A'，value为这个char出现的次数\n * 先排出现次数多的，再排出现次数少的\n * 以次数最多的char满足n间隔算出总数为\n * (max-1)*n+次数最多的char的种类maxCount，如A,B并列最多，maxCount = 2\n * 如果这个数>sum，那么取这个数，\n * 如果这个数= 0; i --) {\n            if (nums[i] == max) {\n                maxCount ++;\n            }\n        }\n        return Math.max((max - 1) * (n + 1) + maxCount, tasks.length);\n    }\n\n/*=====================================================================================*/\n    public static void main(String[] args) {\n        char[] tasks = new char[]{'A','A','A','B','B','B'};\n        System.out.println(taskScheduler(tasks,2));\n    }\n}\n\n"},"Fast-Slow-pointers/leetcode142.html":{"url":"Fast-Slow-pointers/leetcode142.html","title":"LeetCode142 Linked List Cycle II","keywords":"","body":"\nGiven a linked list, return the node where the cycle begins.\nIf there is no cycle, return null.\nNote: Do not modify the linked list.\nFollow up:\nCan you solve it without using extra space?\n\npackage linkedlist;\n\npublic class leetcode142LinkedListCycle2 {\n    public static class ListNode {\n        int val;\n        ListNode next;\n\n        ListNode(int x) {\n            val = x;\n            next = null;\n        }\n    }\n\n    public static ListNode detectCycle(ListNode head) {\n        ListNode fast = head;\n        ListNode slow = head;\n        // 快指针一次走两步，慢指针一次走一步\n        while (fast != null && fast.next != null) {\n            slow = slow.next;\n            fast = fast.next.next;\n            if (slow == fast) {\n                break;\n            }\n        }\n        if (fast == null || fast.next == null) {\n            return null;\n        }\n        // 快指针回到起点，快指针和慢指针都一次走一步\n        fast = head;\n        while (fast != null && slow != null) {\n            // 可能第一个节点就是入环节点，应该把检测放在前面\n            if (slow == fast) {\n                return slow;\n            }\n            slow = slow.next;\n            fast = fast.next;\n\n        }\n        return null;\n    }\n\n    public static void main(String[] args) {\n        ListNode node1 = new ListNode(1);\n        ListNode node2 = new ListNode(2);\n        node1.next = node2;\n        //ListNode node3 = new ListNode(4);\n        node2.next = node1;\n        //ListNode node4 = new ListNode(2);\n        //node3.next = node4;\n        //node4.next = node2;\n\n        System.out.println(detectCycle(node1).val);\n    }\n}\n\n"},"Fast-Slow-pointers/leetcode287.html":{"url":"Fast-Slow-pointers/leetcode287.html","title":"LeetCode287 Find the Duplicate Number","keywords":"","body":"\nGiven an array nums containing n + 1 integers where each integer is between 1 and n (inclusive), prove that at least one duplicate number must exist.\nAssume that there is only one duplicate number, find the duplicate one.\nExample 1:\nInput: [1,3,4,2,2]\nOutput: 2\nExample 2:\nInput: [3,1,3,4,2]\nOutput: 3\nNote:\nYou must not modify the array (assume the array is read only).\nYou must use only constant, O(1) extra space.\nYour runtime complexity should be less than O(n2).\nThere is only one duplicate number in the array, but it could be repeated more than once.\n\npackage array;\n\npublic class leetcode287FindTheDuplicateNumber {\n    public static int findTheDuplicateNumber1(int[] nums) {\n       /*自想1：用两个指针遍历，时间复杂度O(n²)，空间复杂度O(1)\n        初始p1指向nums[0],p2指向nums[1]，\n        先固定指针1，用尾指针去找与头指针相同的数，找到则返回，\n        没找到则头指针后移一步，继续用尾指针找与头指针相同的数\n        但是没有利用到n+1个数都在[1,n]之间的条件\n        */\n        for (int i = 0; i = nums.length) return -1;\n        // 快指针回到起点，快指针和慢指针都一次走一步\n        fast = 0;\n        while (fast \n"},"Matrix/leetcode48.html":{"url":"Matrix/leetcode48.html","title":"LeetCode48 Rotate Image","keywords":"","body":"\nYou are given an n x n 2D matrix representing an image.\nRotate the image by 90 degrees (clockwise).\n\n\n\nNote:\nYou have to rotate the image in-place,\nwhich means you have to modify the input 2D matrix directly.\nDO NOT allocate another 2D matrix and do the rotation.\nExample 1:\nGiven input matrix =\n[\n​    [1,2,3],\n​    [4,5,6],\n​    [7,8,9]\n],\nrotate the input matrix in-place such that it becomes:\n[\n​    [7,4,1],\n​    [8,5,2],\n​    [9,6,3]\n]\nExample 2:\nGiven input matrix =\n[\n​    [ 5, 1, 9,11],\n​    [ 2, 4, 8,10],\n​    [13, 3, 6, 7],\n​    [15,14,12,16]\n],\nrotate the input matrix in-place such that it becomes:\n[\n​    [15,13, 2, 5],\n​    [14, 3, 4, 1],\n​    [12, 6, 8, 9],\n​    [16, 7,10,11]\n]\n\npackage array;\n\nimport static format.printMatrix.printNDegreeMatrix;\n\npublic class leetcode48RotateImage {\n /*=====================================================================================*/\n    /*\n    * 自想1：纯数学方法找规律\n    * 把矩阵像剥洋葱一样分成一层一层的，每层都是正方形四条等长的边，边长度设为n，层数为j，最外面一层为0，\n    * 逐渐向里对每一层四个四个数分组进行旋转\n    * 时间复杂度 4n/4+ 4(n-1)/4 + ... + 1 = O(n²)，空间复杂度O(1)\n    * */\n    public static void rotateImage(int[][] matrix) {\n        rotateImageHelper(matrix, matrix.length);\n    }\n\n    public static void rotateImageHelper(int[][] matrix, int n) {\n        for (int i = n, j = 0; i > 1; i = i - 2, j ++) {\n            rotateImageEdge(matrix, i, j);\n        }\n    }\n\n    public static void rotateImageEdge(int[][] matrix, int n, int j) {\n        // j表示从外向内的层数\n        for (int i = 0; i 右->下->左(->上)，逆序操作，不然覆盖了\n        // j层在坐标下加上(j,j)\n        int tmp = matrix[j][i + j]; // 把上存起来\n        matrix[j][i + j] = matrix[n - 1 - i + j][j];                // 左的值给上\n        matrix[n - 1 - i + j][j] = matrix[n - 1 + j][n - 1 - i + j]; // 下的值给左\n        matrix[n - 1 + j][n - 1 - i + j] = matrix[i + j][n - 1 + j];  // 右的值给下\n        matrix[i + j][n - 1 + j] = tmp;  // 上的值给右\n    }\n    /*=====================================================================================*/\n    /* 讨论区：\n     * clockwise rotate\n     * first reverse up to down, then transpose the symmetry\n     * 1 2 3     7 8 9     7 4 1\n     * 4 5 6  => 4 5 6  => 8 5 2\n     * 7 8 9     1 2 3     9 6 3\n     *\n     * anticlockwise rotate\n     * first reverse left to right, then transpose the symmetry\n     * 1 2 3     3 2 1     3 6 9\n     * 4 5 6  => 6 5 4  => 2 5 8\n     * 7 8 9     9 8 7     1 4 7\n     * 时间复杂度O(n²)，空间复杂度O(1)\n     */\n    public static void rotateImage2(int[][] matrix) {\n        // upDownReverse(matrix);\n        upDownReverse2(matrix);\n        transpose(matrix);\n    }\n\n    // 转置函数\n    public static void transpose(int[][] matrix) {\n        for (int i = 0; i \n打印函数：\npackage format;\n\npublic class printMatrix {\n    public static void printNDegreeMatrix(int[][] matrix) {\n        for (int[] nums : matrix) {\n            for (int num : nums) {\n                System.out.print(num + \" \");\n            }\n            System.out.println();\n        }\n    }\n\n    public static void main(String[] args) {\n        int[][] matrix = new int[][]{{1,2,3},{4,5,6},{7,8,9}};\n        printNDegreeMatrix(matrix);\n    }\n}\n\n"},"Matrix/二维数组中的查找.html":{"url":"Matrix/二维数组中的查找.html","title":"剑指offer 1.二维数组中的查找","keywords":"","body":"\n在一个二维数组中（每个一维数组的长度相同），每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。请完成一个函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。\n\n\npackage matrix;\n\npublic class 二维数组中的查找 {\n\n    /*自想1：\n    以左下角为基准进行范围的缩小，查找的范围为行在[0,i]，列在[j,n-1]的矩形中\n    target大于基准则划掉基准所在的列，target小于基准则划掉基准所在的行，逐渐缩小范围\n    时间复杂度O(m+n)，空间复杂度O(1)\n    */\n    public static boolean find(int target, int[][] array) {\n        if (array == null || array.length = 0 && j  array[i][j]) {\n                j++;\n            } else {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    public static void main(String[] args) {\n        int[][] array = new int[][]{{1, 2, 8, 9}, {2, 4, 9, 12}, {4, 7, 10, 13}, {6, 8, 11, 15}};\n        System.out.println(find(15, array));\n    }\n}\n\n"},"Sort/排序算法总结.html":{"url":"Sort/排序算法总结.html","title":"排序算法总结","keywords":"","body":"关于冒泡排序、插入排序、选择排序、归并排序、快速排序、堆排序的总结。\n\n冒泡排序\n思路：两两比较，大的沉底。i是轮数，在进行第i轮的时候确定了最大的i个值；如果一轮下来都没有交换证明已经有序\n时间复杂度：O(n²)，最好时间复杂度O(n)\n空间复杂度：O(1)\n稳定性：可以实现成稳定的\n写冒泡排序自己的错误：\n\n因为循环中有j+1作为索引，所以j的边界结束值是j == nums.length - 2 - i，而不是nums.length - 1 - i\n\npublic static void bubbleSort(int[] nums) {\n    boolean sorted = true;\n    for (int i = 0; i  nums[j + 1]) {\n                sorted = false;\n                int tmp = nums[j];\n                nums[j] = nums[j + 1];\n                nums[j + 1] = tmp;\n            }\n        }\n        if (sorted) return;\n    }\n}\n\n插入排序\n思路：像小孩子插扑克牌一样，要一张张比，把第1张和第0张比较，把第2张和[0,1]张比较，从后往前把第i张牌和第i-1,i-2...张牌比较，比前面的小就和前面的数交换位置，插第i张的时候前面i-1张都已经有序了\n时间复杂度：O(n²)，最好时间复杂度O(n)\n空间复杂度：O(1)\n稳定性：可以实现成稳定的\npublic static void insertionSort(int[] nums) {\n    for (int i = 1; i = 1; j --) {\n            if (nums[j] \n选择排序\n思路：遍历[0,n-1]位置选出最小的和nums[0]交换位置，再遍历[1,n-1]位置选出第二小的和nums[1]交换...第i轮(i从0开始)选数的时候前i个位置[0,i-1]的数都已经是在正确的位置上了，待选的范围是[i, n-1]，第i轮选完[0.i]都在正确位置上了\n时间复杂度：O(n²)，最好时间复杂度O(n²)\n空间复杂度：O(1)\n稳定性：无法实现成稳定的\n写选择排序自己的错误：\n\n在全局定义了minIndex的起始值是0，后面忘记了应该是i，而不是一直是0，应该把minIndex放在for循环中赋值，每次进入for循环都有不同的minIndex\n\npublic static void selectionSort(int[] nums) {\n    for (int i = 0; i \n归并排序\n思路：分治后从下往上两两归并，借助mergeSortPart分别将左边和右边sort，再将两边merge起来。\n时间复杂度：O(nlogn)，最好时间复杂度O(nlogn)\n空间复杂度：O(n)\n稳定性：可以实现成稳定的\n写归并排序的时候自己的几个错误：\n\np2的起始值是mid + 1而不是mid。\n前面i已经在全局中被定义了，后面写for (int i = 0; i 又习惯性地加了int，重复定义了变量。\nint mid = lo + ((hi - lo) >> 1);要注意>>的优先级。\n注意i的范围是[0, n - 1]，nums下标的范围是[lo, hi]\n\npublic static void mergeSort(int[] nums) {\n    if (nums == null || nums.length = hi) return;\n    int mid = lo + ((hi - lo) >> 1);\n    mergeSortPart(nums, lo, mid);\n    mergeSortPart(nums, mid + 1, hi);\n    merge(nums, lo, mid, hi);\n}\n\npublic static void merge(int[] nums, int lo, int mid, int hi) {\n    int length = hi - lo + 1;\n    int[] helper = new int[length];\n    int p1 = lo, p2 = mid + 1;\n    int i = 0;\n\n    while (p1 \n快速排序\n思路：\n\npartition函数：随机取一个基准点，把基准点和最后一个数交换，partition函数的目的是要将[lo,hi]从左到右分为小于基准点区域、等于基准点区域、大于基准点区域三个区域，然后返回等于区域的左右下标给quickSortPart函数。partition的实现看成往小于区域和大于区域发货。\nquickSortPart函数：调用partition函数，partition后返回等于区域下标后在小于区域和大于区域中递归调用自己，直到小于区域和大于区域都只有一个数。\nquickSort函数：调用quickSortPart函数，实现快排。\n\n时间复杂度：O(nlogn)\n空间复杂度：O(logn)（因为递归深度是logn，用用来记录切分点）\n稳定性：无法实现成稳定的\n记一个结论 随机得到一个在[lo, hi]之间的数：(int)(lo + length * Math.random()) = (int) (lo + (hi - lo + 1) * Math.random())\n注意：用位运算交换两个数有一个问题，就是当lo == hi的时候，是同一个数，就会将这个数清零（nums[lo] == nums[hi]不会，lo == hi会）\npublic static void swap(int[] nums, int lo, int hi) {\n    if (lo == hi) return; // 要排除lo == hi的情况\n    nums[lo] = nums[lo] ^ nums[hi];\n    nums[hi] = nums[lo] ^ nums[hi];\n    nums[lo] = nums[lo] ^ nums[hi];\n}\n\n写快排的时候自己的几个错误：\n\nswap(int[] nums, int lo, int hi)函数没有去除lo == hi的情况，使得一旦同一个数自己和自己发生交换就会清零。\nswap(nums, (int) (lo + length * Math.random()), hi);写成swap(nums, int(lo + length * Math.Random()), hi);一个是类型转换的括号要打在int上，一个是random()是小写。\n不要忘记随机选一个数和最后一个数nums[hi]换作为基准点，nums[hi]一直呆在大于队列中，最后不要忘了把nums[hi]和nums[more]调换，放回到等于队列中。\n\npublic static void quickSort(int[] nums) {\n    if (nums == null || nums.length = hi) return;\n     int[] equalRange = partition(nums, lo, hi);\n     quickSortPart(nums, lo, equalRange[0] - 1);\n     quickSortPart(nums, equalRange[1] + 1, hi);\n }\n\n public static int[] partition(int[] nums, int lo, int hi) {\n     int length = hi - lo + 1;\n     // 随机选取基准点和最后一个数交换\n     // Math.Random() [0,1) -> (hi-lo+1) * Math.Random() [0,hi-lo+1)\n     // lo + (hi-lo+1) * Math.random() [lo, lo+hi-lo+1)=[lo, hi+1)=[lo,hi]\n     swap(nums, (int) (lo + length * Math.random()), hi);\n     int less = lo - 1;\n     int more = hi; // more从hi开始，保护nums[hi]在大于区域中不会被换掉，最后再替换\n     int cur = lo;\n     while (cur \n堆排序\n完全二叉树 = 堆 = 优先级队列\n思路：\n\n完全二叉树是一种逻辑结构，实际存储在数组中，nums[i]的左节点是nums[2 * i + 1]，右节点是nums[2 * i + 2]，父节点是nums[(i - 1) / 2]\nheapInsert()建堆函数：当堆中插入一个新节点（第i号节点nums[i]）时，向上和父节点比大小，若大则换，不断调整成大根堆\nheapify()调整函数：节点上的某个值变小后要下沉，若左右两个孩子中最大的比我大则和我交换，不断下沉直到[0, heapSize - 1]范围恢复成一个大根堆。\nheapSort()堆排序：每次堆的头和堆的最后一个数交换，最后一个最大的数固定，heapSize --，由于头被换成了一个比较小的数，于是要做一次heapify()调成大根堆，再重复每次将堆的头和堆的最后一个数交换。\n\n时间复杂度：O(nlogn)\n空间复杂度：O(1)\n稳定性：无法实现成稳定的\n记一个结论：把完全二叉树逻辑结构存在数组实际结构中，nums[i]的左节点是nums[2 * i + 1]，右节点是nums[2 * i + 2]，父节点是nums[(i - 1) / 2]\n    public static void heapInsert(int[] nums, int i) {\n        while (nums[i] > nums[(i - 1) / 2]) {\n            swap(nums, i, (i - 1) / 2);\n            i = (i - 1) / 2;\n        }\n    }\n\n    public static void heapify(int[] nums, int i, int heapSize) {\n        int leftIndex = 2 * i + 1;\n        while (leftIndex  nums[leftIndex] ? leftIndex + 1 : leftIndex;\n            maxIndex = nums[maxIndex] > nums[i] ? maxIndex : i;\n            if (maxIndex == i) return;\n            swap(nums, maxIndex, i);\n            i = maxIndex;\n            leftIndex = 2 * i + 1;\n        }\n    }\n\n    public static void heapSort(int[] nums) {\n        if (nums == null || nums.length = 2) {\n            swap(nums, 0, -- heapSize);\n            heapify(nums, 0, heapSize);\n        }\n    }\n\n    public static void swap(int[] nums, int i, int j) {\n        if (i == j) return;\n        nums[i] = nums[i] ^ nums[j];\n        nums[j] = nums[i] ^ nums[j];\n        nums[i] = nums[i] ^ nums[j];\n    }\n\n"},"Bit/二进制中1的个数.html":{"url":"Bit/二进制中1的个数.html","title":"剑指offer 11.二进制中1的个数","keywords":"","body":"\n输入一个整数，输出该数二进制表示中1的个数。其中负数用补码表示。\n\npackage bit;\n\npublic class 二进制中1的个数 {\n    /**\n     * 讨论区方法1：\n     * 一位位地比较，用1（1自身左移运算，其实后来就不是1了）和n的每位进行位与\n     * 注意不能用n向右移来和1比较，因为如果n是负数，向右移高位会补1，会增加1的个数\n     * 时间复杂度O(n)，空间复杂度O(1)\n     */\n    public int NumberOf11(int n) {\n        int count = 0;\n        int flag = 1;\n        // 整数4个字节，32位，当flag左移超过了32位，前面被砍断，后面32位为0则结束\n        while (flag != 0) {\n            if ((flag & n) != 0) {\n                count++;\n            }\n            flag \n"},"Bit/数值的整数次方.html":{"url":"Bit/数值的整数次方.html","title":"剑指offer 12.数值的整数次方","keywords":"","body":"\n给定一个double类型的浮点数base和int类型的整数exponent。求base的exponent次方。\n\npackage bit;\n\npublic class 数值的整数次方 {\n    /**\n     * 自想1：连乘\n     * f(n) = f(n - 1) * base\n     */\n    public double Power1(double base, int exponent) {\n        double cur = base;\n        if (base == 0 && exponent  0 ? cur : 1 / cur;\n    }\n\n    /**\n     * 讨论区：用位运算代替连乘\n     * 举例，13表达为二进制1101。\n     * 10^1101 = 10^0001 * 10^0100 * 10^1000。\n     * 通过&1和>>1来逐位读取1101，为1时将该位代表的乘数累乘到最终结果。\n     */\n    public double Power2(double base, int exponent) {\n        double cur = 1, factor = base;\n        int absExp = Math.abs(exponent);\n        if (base == 0 && exponent >= 1;\n            }\n        }\n        return exponent > 0 ? cur : 1 / cur;\n    }\n}\n\n"}}}